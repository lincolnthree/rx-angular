{"version":3,"sources":["./apps/demos/src/app/shared/debug-helper/value-provider/index.ts","./apps/demos/src/app/features/template/rx-if/rx-if.routes.ts","./apps/demos/src/app/shared/utils/utils.module.ts","./apps/demos/src/app/shared/debug-helper/value-provider/model.ts","./apps/demos/src/app/features/template/rx-if/rx-if-demo.module.ts","./apps/demos/src/app/shared/utils/to-array.pipe.ts","./apps/demos/src/app/shared/debug-helper/visualizer/index.ts","./apps/demos/src/app/features/template/rx-if/rx-if-basic.component.ts"],"names":[],"mappings":"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","file":"rx-if-rx-if-demo-module.js","sourcesContent":["export * from './utils';\nexport * from './model';\nexport * from './primitives-provider.service';\nexport * from './array-provider.service';\nexport * from './value-provider/value-provider.component';\nexport * from './value-providers.module';\n","import { Routes } from '@angular/router';\nimport { RxIfBasicComponent } from './rx-if-basic.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: RxIfBasicComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","export enum SchedulingPriority {\n  sync,\n  animationFrame,\n  Promise,\n  setTimeout,\n  setInterval,\n  postMessage,\n  idleCallback,\n  userBlocking,\n  userVisible,\n  background\n}\n\n\nexport interface TestItem {\n  id: number;\n  value: number;\n  array?: TestItem[];\n}\n\nexport interface ProvidedValues {\n  random: number;\n  array: TestItem[];\n}\n\n/**\n * id: newIndex\n */\nexport interface Positions {\n  [id: number]: number\n}\n\nexport interface SchedulerConfig {\n  scheduler: SchedulingPriority;\n  duration?: number;\n  numEmissions?: number;\n  tickSpeed?: number|number[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './rx-if.routes';\nimport { RxIfBasicComponent } from './rx-if-basic.component';\nimport { VisualizerModule } from '../../../shared/debug-helper/visualizer';\nimport { UnpatchEventsModule } from '../../../rx-angular-pocs/template/directives/unpatch';\nimport { ValueModule } from '../../../shared/debug-helper/value-provider/value/value.module';\nimport { StrategySelectModule } from '../../../shared/debug-helper/strategy-select';\nimport { ValueProvidersModule } from '../../../shared/debug-helper/value-provider';\nimport { GhostElementsModule } from '../../../shared/ghost-elements';\nimport { DirtyChecksModule } from '../../../shared/debug-helper/dirty-checks';\nimport { RxIfModule } from '../../../rx-angular-pocs';\n\nconst DECLARATIONS = [RxIfBasicComponent];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    CommonModule,\n    VisualizerModule,\n    UnpatchEventsModule,\n    MatButtonModule,\n    DirtyChecksModule,\n    ValueModule,\n    GhostElementsModule,\n    ValueProvidersModule,\n    StrategySelectModule,\n    RouterModule.forChild(ROUTES),\n    RxIfModule\n  ],\n  exports: DECLARATIONS,\n})\nexport class RxIfDemoModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","export {VisualizerModule} from './visualizer.module';\nexport {VisualizerComponent} from './visualizer/visualizer.component';\n","import { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'rxa-rx-if-poc',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h2>rxIf POC</h2>\n        <rxa-strategy-select\n          (strategyChange)=\"strategy = $event\"\n        ></rxa-strategy-select>\n        <rxa-value-provider\n          #v=\"rxaValueProvider\"\n          [buttons]=\"true\"\n        ></rxa-value-provider>\n        <button mat-raised-button (click)=\"v.next()\" class=\"mr-1\">\n          toggle\n        </button>\n        <button mat-raised-button [unpatch] (click)=\"v.next()\">\n          toggle (unpatched)\n        </button>\n      </div>\n      <div class=\"row w-100\">\n        <div class=\"col-sm-3\">\n          <h3>RxIf</h3>\n          <strong *rxLet=\"rendered$; let rendered\"\n            >Rendercallback: {{ rendered }}</strong\n          >\n          <ng-template #elseTpl>\n            <div class=\"dh-embedded-view\">\n              <rxa-dirty-check></rxa-dirty-check>\n              FALSE TEMPLATE\n            </div>\n          </ng-template>\n          <div\n            class=\"dh-embedded-view\"\n            *rxIf=\"\n              v.boolean$;\n              let value;\n              renderCallback: renderCallback;\n              strategy: strategy\n            \"\n          >\n            <rxa-dirty-check></rxa-dirty-check>\n            TRUE TEMPLATE\n          </div>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: environment.changeDetection,\n})\nexport class RxIfBasicComponent {\n  private _renderCalled = 0;\n  readonly renderCallback = new Subject();\n\n  rendered$ = this.renderCallback.pipe(map(() => this._renderCalled++));\n\n  strategy;\n}\n"],"sourceRoot":"webpack:///"}