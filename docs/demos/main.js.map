{"version":3,"sources":["./apps/demos/src/app/app-component/app.menu.ts","./apps/demos/src/app/shared/debug-helper/dirty-checks/dirty-checks.module.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/browser/requestIdleCallback.ts","./apps/demos/src/app/shared/rx-effects.service.ts","./libs/state/src/lib/cdk/accumulation-observable.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/animation-frame/AnimationFrameScheduler.ts","./apps/demos/src/app/app-shell/side-nav/side-nav.component.ts","./apps/demos/src/app/app-shell/side-nav/side-nav.component.html","./apps/demos/src/app/rx-angular-pocs/template/directives/unpatch/unpatch-events.module.ts","./libs/cdk/src/lib/utils/coalescingManager.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/memo/memo-map.ts","./apps/demos/src/app/features/template/strategies/concurrent-strategies.menu.ts","./apps/demos/src/app/rx-angular-pocs/template/components/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/index.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/index.ts","./libs/cdk/src/lib/state/accumulateObservables.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/queue/QueueAction.ts","./libs/cdk/src/lib/zone-less/rxjs/observable/timer.ts","./apps/demos/src/app/rx-angular-pocs/state/rx-effects/index.ts","./apps/demos/src/app/features/experiments/state/rx-state.menu.ts","./libs/cdk/src/lib/zone-less/rxjs/operators/index.ts","./apps/demos/src/app/features/template/rx-for/rx-for.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/ngInputFlatten.ts","./apps/demos/src/app/app-component/app-control-panel/app-control-panel.module.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/select.ts","./libs/state/src/lib/transformation-helpers/array/remove.ts","./libs/state/src/lib/rxjs/operators/selectSlice.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/animation-frame/animationFrame.ts","./libs/cdk/src/lib/zone-less/index.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if/index.ts","./libs/cdk/src/lib/render-strategies/strategy-provider.service.ts","./libs/cdk/src/lib/utils/notification-transforms.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/memoization.ts","./libs/cdk/src/lib/template-management/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/browser/requestAnimationFrame.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/operators/fromEvent.ts","./apps/demos/src/app/features/integrations/integrations-shell.menu.ts","./apps/demos/src/app/rx-angular-pocs/state/rx-effects/until-destroy.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/tick-idleCallback.ts","./libs/cdk/src/lib/utils/strategy-handling.ts","./libs/cdk/src/lib/zone-configuration/convenience-methods.ts","./libs/state/src/lib/cdk/side-effect-observable.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/distinctUntilSomeChanged.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/stateful.ts","./apps/demos/src/app/rx-angular-pocs/template/components/context/rx-context.component.ts","./libs/state/src/lib/index.ts","./libs/cdk/src/lib/render-strategies/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/safe-pluck.ts","./apps/demos/src/app/shared/viewport.service.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/browser/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/hooks/utils.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/pipe/pipe.pipe.ts","./libs/cdk/src/lib/template-management/render-error.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/async/async.ts","./libs/template/src/lib/experimental/viewport-prio/viewport-prio.module.ts","./apps/demos/src/app/shared/debug-helper/strategy-select/strategy-select.module.ts","./libs/template/src/lib/push/push.module.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/let/model/index.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/memo/memo.module.ts","./libs/cdk/src/lib/utils/coerceDistinctObservableWith.ts","./apps/demos/src/app/shared/ripple/rxa-responsive-meter.ts","./libs/cdk/src/lib/template-management/list-view-context.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/unpatch/index.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/queue/queue.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/animation-frame/AnimationFrameScheduler.ts","./libs/template/src/lib/core/utils/zone-checks.ts","./libs/state/src/lib/core/utils/pipe-from-array.ts","./libs/template/src/lib/core/render-aware/index.ts","./libs/cdk/src/lib/zone-configuration/event-names.ts","./libs/cdk/src/lib/zone-less/rxjs/observable/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/index.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/pipe/pipe.module.ts","./libs/state/src/lib/rxjs/operators/stateful.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if-visible/index.ts","./apps/demos/src/app/shared/environment.token.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if/rx-if.directive.ts","./libs/cdk/src/lib/zone-configuration/index.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/memo/memo.pipe.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/selectSlice.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/util/index.ts","./apps/demos/src/app/features/performance/performance-shell.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/render-aware/render-aware.ts","./libs/template/src/lib/core/utils/unpatched-resolved-promise.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/browser/queueMicrotask.ts","./libs/cdk/src/lib/render-strategies/scheduler/schedulerMinHeap.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/observable/index.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/async/AsyncAction.ts","./libs/cdk/src/lib/template-management/utils.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if/if.module.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/async/AsyncAction.ts","./libs/cdk/src/lib/template-management/template-manager.ts","./libs/cdk/src/lib/zone-less/utils.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/pipe/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/pipe-from-array.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/queue/QueueScheduler.ts","./libs/template/src/lib/experimental/viewport-prio/viewport-prio.experimental.directive.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/index.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/let/let.module.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/queue/queue.ts","./libs/state/src/lib/transformation-helpers/object/toggle.ts","./apps/demos/src/app/app-component/app-control-panel/app-control-panel.component.ts","./libs/state/src/lib/core/utils/safe-pluck.ts","./apps/demos/src/app/rx-angular-pocs/cdk/decorators/index.ts","./apps/demos/src/app/rx-angular-pocs/template/index.ts","./apps/demos/src/app/app-shell/app-shell.module.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/async/AsyncScheduler.ts","./apps/demos/src/app/shared/utils/measure.ts","./libs/state/src/lib/transformation-helpers/array/toDictionary.ts","./libs/state/src/lib/transformation-helpers/object/deleteProp.ts","./libs/cdk/src/lib/render-strategies/concurrent-strategies.ts","./libs/cdk/src/lib/render-strategies/scheduler/scheduler.ts","./libs/state/src/lib/transformation-helpers/array/update.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/index.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/for/rx-for.directive.ts","./apps/demos/src/app/features/home/home.component.ts","./libs/state/src/lib/core/utils/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/operators/index.ts","./apps/demos/src/app/features/concepts/fundamentals.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/hooks/hooks.ts","./libs/cdk/src/lib/render-strategies/native-strategies.ts","./libs/template/src/lib/core/utils/properties-weakmap.ts","./libs/cdk/src/lib/template-management/list-template-manager.ts","./libs/state/src/lib/rx-state.service.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/Action.ts","./apps/demos/src/app/app-component/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/render-aware/index.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/unpatch/unpatch-events.directive.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/let/model/template-names.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/tick-setInterval.ts","./libs/cdk/src/lib/utils/onStrategy.ts","./libs/template/src/lib/core/render-aware/render-aware_creator.ts","./libs/state/src/lib/transformation-helpers/array/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/intersection-observer.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/async/AsyncScheduler.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/push/index.ts","./libs/template/src/lib/experimental/unpatch/events/unpatch-events.experimental.directive.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/index.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/switch/rx-switch.directive.ts","./libs/cdk/src/lib/zone-configuration/model/configurations.types.ts","./libs/state/src/lib/transformation-helpers/object/dictionaryToArray.ts","./apps/demos/src/app/rx-angular-pocs/template/components/context/context.module.ts","./libs/cdk/src/lib/zone-less/rxjs/operators/fromEvent.ts","./apps/demos/src/app/features/performance/rx-let-vs-push/rx-let-vs-push.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/get-resolved-promise.ts","./libs/state/src/lib/transformation-helpers/_internals/valuesComparer.util.ts","./libs/state/src/lib/rxjs/operators/select.ts","./libs/template/src/lib/core/utils/rx-materialize.ts","./libs/cdk/src/lib/utils/rxMaterialize.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if-visible/if-visible.module.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/queue/QueueAction.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if/model/template-names.ts","./apps/demos/src/app/rx-angular-pocs/template/components/context/rx-context.directive.ts","./libs/state/src/lib/transformation-helpers/object/patch.ts","./libs/state/src/lib/cdk/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/zone-checks.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/asap/AsapAction.ts","./apps/demos/src/app/rx-angular-pocs/state/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/browser/Promise.ts","./apps/demos/src/app/features/integrations/dynamic-counter/dynamic-counter.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/hooks/index.ts","./libs/template/src/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/coalesceWith.ts","./libs/cdk/src/lib/utils/template-trigger-handling.ts","./apps/demos/src/main.ts","./libs/template/src/lib/core/utils/index.ts","./apps/demos/src/app/features/template/template-shell.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/get-global-this.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/switch/rx-swich.module.ts","./libs/state/src/lib/rxjs/operators/index.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/let/rx-let.directive.ts","./libs/cdk/src/lib/render-strategies/scheduler/schedulerFeatureFlags.ts","./apps/demos/src/app/shared/debug-helper/hooks.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/Notification.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/switch/index.ts","./libs/state/src/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/tick-animationFrame.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/asap/AsapAction.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if-visible/model/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/tick-setTimeout.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/async/async.ts","./apps/demos/src/app/features/tutorials/basics/tutorial-basics.menu.ts","./libs/cdk/src/lib/utils/templateNotifier.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/queue/QueueScheduler.ts","./apps/demos/src/app/rx-angular-pocs/cdk/index.ts","./apps/demos/src/app/features/template/viewport-prio/viewport-prio.menu.ts","./apps/demos/src/environments/environment.ts","./apps/demos/src/app/rx-angular-pocs/template/components/context/model/template-names.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/properties-weakmap.ts","./libs/cdk/src/lib/zone-less/browser/index.ts","./libs/cdk/src/index.ts","./apps/demos/src/app/rx-angular-pocs/index.ts","./libs/template/src/lib/let/let.directive.ts","./apps/demos/src/app/app-component/app.routes.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/for/index.ts","./apps/demos/src/app/features/experiments/strategies/strategies.menu.ts","./apps/demos/src/app/app-component/app-component.module.ts","./apps/demos/src/app/app-shell/app-shell-component/app-shell.component.ts","./apps/demos/src/app/app-shell/app-shell-component/app-shell.component.html","./libs/template/src/lib/push/push.pipe.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if-visible/if-visible.directive.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/push/push.pipe.ts","./apps/demos/src/app/app-component/app.component.ts","./apps/demos/src/app/app-component/app.component.html","./apps/demos/src/app/shared/debug-helper/strategy-select/index.ts","./libs/cdk/src/lib/template-management/list-view-handler.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/Scheduler.ts","./libs/state/src/lib/transformation-helpers/object/setProp.ts","./apps/demos/src/app/features/performance/alphas-compare/alphas-compare.menu.ts","./apps/demos/src/app/features/tutorials/tutorials-shell.menu.ts","./apps/demos/src/app/features/experiments/experiments-shell.menu.ts","./libs/template/src/lib/experimental/unpatch/events/unpatch-event-list.experimental.ts","./libs/cdk/src/lib/render-strategies/scheduler/schedulerPriorities.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/animation-frame/animationFrame.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/index.ts","./libs/template/src/lib/core/index.ts","./libs/cdk/src/lib/cdk-config.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/animation-frame/AnimationFrameAction.ts","./apps/demos/src/app/rx-angular-pocs/template/components/context/index.ts","./apps/demos/src/app/features/experiments/structural-directives/structural-directives.menu.ts","./apps/demos/src/app/rx-angular-pocs/state/rx-effects/effects.service.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/index.ts","./libs/state/src/lib/core/utils/guards.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/util/isSubscription.ts","./apps/demos/src/app/app-shell/side-nav/side-nav-item.directive.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/tick-promise.ts","./libs/state/src/lib/core/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/asap/AsapScheduler.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/push/push.module.ts","./libs/cdk/src/lib/zone-configuration/zone-cfg.ts","./libs/cdk/src/lib/zone-less/rxjs/observable/interval.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/guards.ts","./apps/demos/src/app/app-component/app-presenter.service.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/browser/setInterval.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/animation-frame/AnimationFrameAction.ts","./libs/template/src/lib/experimental/unpatch/events/unpatch-events.experimental.module.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if-visible/model/template-names.ts","./libs/cdk/src/lib/utils/hotFlatten.ts","./libs/cdk/src/lib/utils/coalesceWith.ts","./apps/demos/src/app/app-shell/side-nav/utils.ts","./libs/cdk/src/lib/model.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/let/index.ts","./apps/demos/src/app/shared/debug-helper/dirty-checks/dirty-checks-work.component.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/schedulers/asap/asap.ts","./apps/demos/src/app/shared/debug-helper/dirty-checks/dirty-checks.component.ts","./libs/cdk/src/lib/utils/coerceDistinctObservable.ts","./libs/template/src/lib/let/let.module.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/rx-materialize.ts","./libs/cdk/src/lib/utils/index.ts","./apps/demos/src/app/app.module.ts","./libs/cdk/src/lib/utils/coerceObservable.ts","./apps/demos/src/app/features/experiments/input-bindings/input-bindings.menu.ts","./libs/cdk/src/lib/zone-less/browser/browser.ts","./apps/demos/src/app/rx-angular-pocs/template/components/context/model/index.ts","./libs/cdk/src/lib/template-management/model.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/asap/asap.ts","./libs/cdk/src/lib/state/index.ts","./apps/demos/src/app/rx-angular-pocs/template/pipes/memo/index.ts","./libs/state/src/lib/transformation-helpers/array/insert.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/asap/AsapScheduler.ts","./apps/demos/src/app/features/template/pipes/pipes.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/coalescing-manager.ts","./apps/demos/src/app/app-shell/index.ts","./libs/state/src/lib/transformation-helpers/object/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/view-constants.ts","./apps/demos/src/app/app-config.service.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/switch/rx-switch-case.directive.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/Action.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/for/rx-for.module.ts","./apps/demos/src/app/features/experiments/decorators/decorators.menu.ts","./apps/demos/src/app/shared/debug-helper/dirty-checks/index.ts","./apps/demos/src/app/features/template/rx-let/rx-let.menu.ts","./libs/cdk/src/lib/zone-less/rxjs/observable/utils.ts","./apps/demos/src/app/app-component/app-control-panel/index.ts","./apps/demos/src/app/features/template/rx-context/rx-context.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/stateful-observable.ts","./apps/demos/src/app/app-shell/app-shell-content.directives.ts","./apps/demos/src/app/rx-angular-pocs/template/directives/if/model/index.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/Scheduler.ts","./libs/state/src/lib/rxjs/operators/distinctUntilSomeChanged.ts","./libs/cdk/src/lib/utils/coerceObservableWith.ts","./libs/template/src/lib/core/utils/coalescing-manager.ts","./apps/demos/src/app/features/template/rx-if/rx-if.menu.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/rxjs/observable/interval.ts","./libs/cdk/src/lib/render-strategies/scheduler/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/decorators/stateful.ts","./apps/demos/src/app/shared/debug-helper/strategy-select/strategy-select/strategy-select.component.ts","./libs/cdk/src/lib/zone-less/rxjs/scheduler/index.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/zone-agnostic/browser/setTimeout.ts","./$_lazy_route_resource lazy namespace object","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/operators/observable-to-rx-template-name.ts","./apps/demos/src/app/rx-angular-pocs/cdk/utils/rxjs/observable/side-effect-observable.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { FUNDAMENTALS_MENU } from '../features/concepts/fundamentals.menu';\nimport { TEMPLATE_MENU } from '../features/template/template-shell.menu';\nimport { TUTORIALS_MENU } from '../features/tutorials/tutorials-shell.menu';\nimport { INTEGRATIONS_MENU_ITEMS } from '../features/integrations/integrations-shell.menu';\nimport { EXPERIMENTS_MENU as EXPERIMENTS_MENU_ITEMS } from '../features/experiments/experiments-shell.menu';\nimport { MENU_ITEMS as PERFORMANCE_MENU_ITEMS } from '../features/performance/performance-shell.menu';\n\nexport const MENU_ITEMS = [\n  {\n    label: '🧰 Template',\n    link: 'template',\n    children: TEMPLATE_MENU\n  },\n  {\n    label: '🏁 Concepts',\n    link: 'concepts',\n    children: FUNDAMENTALS_MENU\n  },\n  {\n    label: '📋 Tutorials',\n    link: 'tutorials',\n    children: TUTORIALS_MENU\n  },\n  {\n    label: '🧮 Integrations',\n    link: 'integrations',\n    children: INTEGRATIONS_MENU_ITEMS\n  },\n  {\n    label: '🔬 Experiments',\n    link: 'experiments',\n    children: EXPERIMENTS_MENU_ITEMS\n  },\n  {\n    label: '🏎️ Performance',\n    link: 'performance',\n    children: PERFORMANCE_MENU_ITEMS\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { DirtyChecksWorkComponent } from './dirty-checks-work.component';\nimport { DirtyChecksComponent } from './dirty-checks.component';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\n\nconst DEPRECATIONS = [DirtyChecksComponent, DirtyChecksWorkComponent];\n\n@NgModule({\n  declarations: [...DEPRECATIONS],\n  imports: [\n    CommonModule,\n    MatRippleModule\n  ],\n  exports: [...DEPRECATIONS]\n})\nexport class DirtyChecksModule {\n\n}\n","import { getZoneUnPatchedApi } from '../zone-checks';\n\nexport type IdleId = ReturnType<typeof setTimeout>;\n\nexport type RequestIdleCallbackHandle = any;\n\nexport interface RequestIdleCallbackOptions {\n  timeout: number;\n}\n\nexport interface RequestIdleCallbackDeadline {\n  readonly didTimeout: boolean;\n  timeRemaining: () => number;\n}\n\nexport type RequestIdleCallback = (\n  callback: (deadline: RequestIdleCallbackDeadline) => void,\n  opts?: RequestIdleCallbackOptions\n) => RequestIdleCallbackHandle;\n\nexport type CancelIdleCallback = (idleId: IdleId) => void;\n\nexport const cancelIdleCallback: CancelIdleCallback =\n  typeof window !== 'undefined'\n    ? ((window as any).cancelIdleCallback ? getZoneUnPatchedApi('cancelIdleCallback') : false) ||\n    function(idleId: IdleId): void {\n      console.warn('cancelIdleCallback not implemented. Use clearTimeout as fallback');\n      clearTimeout(idleId);\n    }\n    : () => {\n    };\n\nexport const requestIdleCallback: RequestIdleCallback =\n  typeof window !== 'undefined'\n    ? ((window as any).requestIdleCallback ? getZoneUnPatchedApi('requestIdleCallback') : false) ||\n    function(cb: Function) {\n      console.warn('requestIdleCallback not implemented. Use setTimeout as fallback');\n      const start = Date.now();\n      return setTimeout(function() {\n        cb({\n          didTimeout: false,\n          timeRemaining() {\n            return Math.max(0, 50 - (Date.now() - start));\n          }\n        });\n      }, 1);\n    }\n    : () => {\n    };\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { createSideEffectObservable } from '@rx-angular/state';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class RxEffects implements OnDestroy {\n  private readonly subscription;\n  private readonly effectObservable = createSideEffectObservable();\n\n  constructor() {\n    this.subscription = this.effectObservable.subscribe()\n  }\n\n\n  /**\n   * @description\n   * Manages side-effects of your state. Provide an `Observable<any>` **side-effect** and an optional\n   * `sideEffectFunction`.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * // Directly pass an observable side-effect\n   * const localStorageEffect$ = changes$.pipe(\n   *  tap(changes => storeChanges(changes))\n   * );\n   * state.hold(localStorageEffect$);\n   *\n   * // Pass an additional `sideEffectFunction`\n   *\n   * const localStorageEffectFn = changes => storeChanges(changes);\n   * state.hold(changes$, localStorageEffectFn);\n   *\n   * @param {Observable<S>} obsOrObsWithSideEffect\n   * @param {function} [sideEffectFn]\n   */\n  hold<S>(\n    obsOrObsWithSideEffect: Observable<S>,\n    sideEffectFn?: (arg: S) => void\n  ): void {\n    if (typeof sideEffectFn === 'function') {\n      this.effectObservable.nextEffectObservable(\n        obsOrObsWithSideEffect.pipe(tap(sideEffectFn))\n      );\n      return;\n    }\n    this.effectObservable.nextEffectObservable(obsOrObsWithSideEffect);\n  }\n\n  ngOnDestroy() {\n    // tslint:disable-next-line:no-unused-expression\n    this.subscription && this.subscription.unsubscribe()\n  }\n\n}\n","import {\n  BehaviorSubject,\n  ConnectableObservable,\n  EMPTY,\n  merge,\n  Observable,\n  queueScheduler,\n  Subject,\n  Subscribable,\n  Subscription\n} from 'rxjs';\nimport {\n  catchError,\n  distinctUntilChanged,\n  mergeAll,\n  observeOn,\n  publish,\n  publishReplay,\n  scan,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\n\nexport type AccumulationFn = <T>(st: T, sl: Partial<T>) => T;\n\nconst defaultAccumulator: AccumulationFn = <T>(st: T, sl: Partial<T>): T => {\n  return { ...st, ...sl };\n};\n\ninterface Accumulator<T> extends Subscribable<T> {\n  state: T;\n  state$: Observable<T>;\n  signal$: Observable<T>;\n  nextSlice: (stateSlice: Partial<T>) => void;\n  nextSliceObservable: (state$: Observable<Partial<T>>) => void;\n  nextAccumulator: (fn: AccumulationFn) => void;\n}\n\nexport function createAccumulationObservable<T extends object>(\n  stateObservables = new Subject<Observable<Partial<T>>>(),\n  stateSlices = new Subject<Partial<T>>(),\n  accumulatorObservable = new BehaviorSubject(defaultAccumulator)\n): Accumulator<T> {\n  const signal$ = merge(\n    stateObservables.pipe(\n      distinctUntilChanged(),\n      mergeAll(),\n      observeOn(queueScheduler)\n    ),\n    stateSlices.pipe(observeOn(queueScheduler))\n  ).pipe(\n    withLatestFrom(accumulatorObservable.pipe(observeOn(queueScheduler))),\n    scan(\n      (state, [slice, stateAccumulator]) => stateAccumulator(state, slice),\n      {} as T\n    ),\n    tap(\n      (newState) => (compositionObservable.state = newState),\n      (error) => console.error(error)\n    ),\n    // @Notice We catch the error here as it get lost in between `publish` and `publishReplay`. We return empty to\n    catchError((e) => EMPTY),\n    publish()\n  );\n  const state$: Observable<T> = signal$.pipe(publishReplay(1));\n  const compositionObservable: Accumulator<T> = {\n    state: {} as T,\n    signal$,\n    state$,\n    nextSlice,\n    nextSliceObservable,\n    nextAccumulator,\n    subscribe\n  };\n\n  // ======\n\n  return compositionObservable;\n\n  // ======\n\n  function nextAccumulator(accumulatorFn: AccumulationFn): void {\n    accumulatorObservable.next(accumulatorFn);\n  }\n\n  function nextSlice(stateSlice: Partial<T>): void {\n    stateSlices.next(stateSlice);\n  }\n\n  function nextSliceObservable(stateObservable: Observable<Partial<T>>): void {\n    stateObservables.next(stateObservable);\n  }\n\n  function subscribe(): Subscription {\n    const sub = (compositionObservable.signal$ as ConnectableObservable<T>).connect();\n    sub.add(\n      (compositionObservable.state$ as ConnectableObservable<T>).connect()\n    );\n    sub.add(() => {\n      accumulatorObservable.complete();\n      stateObservables.complete();\n      stateSlices.complete();\n    });\n    return sub;\n  }\n}\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { AsyncScheduler } from '../async/AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this.active = true;\n    this.scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if ((error = action!.execute(action!.state, action!.delay))) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { NestedTreeControl } from '@angular/cdk/tree';\nimport { ChangeDetectionStrategy, Component, Input, Output } from '@angular/core';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { RxState } from '@rx-angular/state';\nimport { Subject } from 'rxjs';\nimport { AppShellNavItem } from '../app-shell.models';\nimport { generateRoutes } from './utils';\n\ninterface SideNavState {\n  navItems: AppShellNavItem[];\n}\n\n@Component({\n  selector: 'rxa-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RxState],\n})\nexport class AppShellSideNavComponent {\n  readonly navItemDataSource = new MatTreeNestedDataSource<AppShellNavItem>();\n  readonly treeControl = new NestedTreeControl<AppShellNavItem>(\n    (node) => node.children,\n  );\n\n  @Input() set navItems(navItems: AppShellNavItem[]) {\n    this.navItemDataSource._data.next(generateRoutes(navItems) || []);\n  }\n\n  @Output() readonly navItemSelected = new Subject<AppShellNavItem>();\n\n  readonly viewState$ = this.state.select();\n\n  constructor(private state: RxState<SideNavState>) {}\n\n  hasChild = (_: number, node: AppShellNavItem) =>\n    !!node.children && node.children.length > 0;\n\n  trackNavItem(i: number, navItem: AppShellNavItem): string | any[] {\n    return navItem.link;\n  }\n}\n","<cdk-tree\n  class=\"rxa-app-shell-tree\"\n  [dataSource]=\"navItemDataSource\"\n  [treeControl]=\"treeControl\"\n>\n  <!-- This is the tree node template for leaf nodes -->\n  <cdk-nested-tree-node\n    *cdkTreeNodeDef=\"let navItem; let level = level\"\n    class=\"app-shell-tree-node app-shell-leaf-node\"\n  >\n    <a\n      mat-flat-button\n      (click)=\"navItemSelected.next(navItem)\"\n      [routerLink]=\"navItem.link\"\n      routerLinkActive=\"active\"\n      rxaAppShellSideNavItem\n      [rxaAppShellSideNavItemLevel]=\"level\"\n      class=\"w-100 text-left\"\n    >\n      <mat-icon\n        *ngIf=\"navItem.icon\"\n        class=\"mr-1\"\n        [svgIcon]=\"navItem.icon.svgIcon\"\n      >\n        {{ navItem.icon.matIcon }}\n      </mat-icon>\n      {{ navItem.label }}\n    </a>\n  </cdk-nested-tree-node>\n  <!-- This is the tree node template for expandable nodes -->\n  <cdk-nested-tree-node\n    *cdkTreeNodeDef=\"let navItem; let level = level; when: hasChild\"\n    class=\"app-shell-tree-node app-shell-expandable-node\"\n  >\n    <a\n      mat-flat-button\n      rxaAppShellSideNavItem\n      [rxaAppShellSideNavItemLevel]=\"level\"\n      cdkTreeNodeToggle\n      class=\"w-100 text-left\"\n    >\n      <mat-icon\n        *ngIf=\"navItem.icon\"\n        class=\"mr-1\"\n        [svgIcon]=\"navItem.icon.svgIcon\"\n      >\n        {{ navItem.icon.matIcon }}\n      </mat-icon>\n      <strong>{{ navItem.label }}</strong>\n    </a>\n    <div [hidden]=\"!treeControl.isExpanded(navItem)\">\n      <ng-container cdkTreeNodeOutlet></ng-container>\n    </div>\n  </cdk-nested-tree-node>\n</cdk-tree>\n","import { NgModule } from '@angular/core';\nimport { UnpatchEventsDirective } from './unpatch-events.directive';\n\nconst DECLARATIONS = [UnpatchEventsDirective];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  exports: DECLARATIONS\n})\nexport class UnpatchEventsModule {\n}\n","interface CoalescingContextProps {\n  numCoalescingSubscribers: number;\n}\n\ninterface CoalescingManager {\n  remove: (scope: object) => void;\n  add: (scope: object) => void;\n  isCoalescing: (scope: object) => boolean;\n}\n\nexport const coalescingManager: CoalescingManager = createCoalesceManager();\ntype KeyOf<O> = keyof O & string & symbol & number;\n/*\n * createPropertiesWeakMap\n *\n * @param getDefaults: (o: O) => P\n * Example:\n *\n * export interface Properties {\n *   isCoalescing: boolean;\n * }\n *\n * const obj: object = {\n *   foo: 'bar',\n *   isCoalescing: 'weakMap version'\n * };\n *\n * const getDefaults = (ctx: object): Properties => ({isCoalescing: false});\n * const propsMap = createPropertiesWeakMap<object, Properties>(getDefaults);\n *\n * console.log('obj before:', obj);\n * // {foo: \"bar\", isCoalescing: \"weakMap version\"}\n * console.log('props before:', propsMap.getProps(obj));\n * // {isCoalescing: \"weakMap version\"}\n *\n * propsMap.setProps(obj, {isCoalescing: true});\n * console.log('obj after:', obj);\n * // {foo: \"bar\", isCoalescing: \"weakMap version\"}\n * console.log('props after:', propsMap.getProps(obj));\n * // {isCoalescing: \"true\"}\n * */\nfunction createPropertiesWeakMap<O extends object, P extends object>(\n  getDefaults: (o: O) => P\n) {\n  type K = KeyOf<P>;\n  const propertyMap = new WeakMap<O, P>();\n\n  return {\n    getProps: getProperties,\n    setProps: setProperties,\n  };\n\n  function getProperties(ctx: O): P {\n    const defaults = getDefaults(ctx);\n    const propertiesPresent: P | undefined = propertyMap.get(ctx);\n    let properties: P;\n\n    if (propertiesPresent !== undefined) {\n      properties = propertiesPresent;\n    } else {\n      properties = {} as P;\n\n      (Object.entries(defaults) as [K, P[K]][]).forEach(\n        ([prop, value]): void => {\n          properties[prop] = hasKey(ctx, prop) ? ctx[prop] : value;\n        }\n      );\n\n      propertyMap.set(ctx, properties);\n    }\n    return properties;\n  }\n\n  function setProperties(ctx: O, props: Partial<P>): P {\n    const properties: P = getProperties(ctx);\n    (Object.entries(props) as [K, P[K]][]).forEach(([prop, value]) => {\n      properties[prop] = value;\n    });\n    propertyMap.set(ctx, properties);\n    return properties;\n  }\n\n  function hasKey(ctx: O, property: K): ctx is K {\n    return ctx[property] != null;\n  }\n}\nconst coalescingContextPropertiesMap = createPropertiesWeakMap<\n  object,\n  CoalescingContextProps\n>((ctx) => ({\n  numCoalescingSubscribers: 0,\n}));\n/**\n * @describe createCoalesceManager\n *\n * returns a\n * Maintains a weak map of component references ans flags\n * them if the coalescing process is already started for them.\n *\n * Used in render aware internally.\n */\nfunction createCoalesceManager(): CoalescingManager {\n  return {\n    remove: removeWork,\n    add: addWork,\n    isCoalescing,\n  };\n\n  // Increments the number of subscriptions in a scope e.g. a class instance\n  function removeWork(scope: object): void {\n    const numCoalescingSubscribers =\n      coalescingContextPropertiesMap.getProps(scope).numCoalescingSubscribers -\n      1;\n    coalescingContextPropertiesMap.setProps(scope, {\n      numCoalescingSubscribers:\n        numCoalescingSubscribers >= 0 ? numCoalescingSubscribers : 0,\n    });\n  }\n\n  // Decrements the number of subscriptions in a scope e.g. a class instance\n  function addWork(scope: object): void {\n    const numCoalescingSubscribers =\n      coalescingContextPropertiesMap.getProps(scope).numCoalescingSubscribers +\n      1;\n    coalescingContextPropertiesMap.setProps(scope, {\n      numCoalescingSubscribers,\n    });\n  }\n\n  // Checks if anybody else is already coalescing atm\n  function isCoalescing(scope: object): boolean {\n    return (\n      coalescingContextPropertiesMap.getProps(scope).numCoalescingSubscribers >\n      0\n    );\n  }\n}\n","import { memo } from '../../../cdk';\n\nexport const memoFac = memo(500);\nexport const memoFnMap = new Map<Function, Function>();\n\nexport function getMemoizedFn(fn: any): Function  {\n  if (memoFnMap.has(fn)) {\n    return memoFnMap.get(fn);\n  } else {\n    const f = memoFac(fn)\n    memoFnMap.set(fn, f);\n    return f;\n  }\n}\n","export const MENU_ITEMS = [\n  {\n    label: 'Comparison',\n    link: 'comparison'\n  },\n  {\n    label: 'Pixel Priority',\n    link: 'pixel-priority'\n  }\n];\n","export * from './context';\n\n\n","export * from './observable';\nexport * from './operators';\nexport * from './schedulers';\n","export * from './let';\nexport * from './if';\nexport * from './switch';\nexport * from './for';\nexport * from './unpatch';\nexport * from './if-visible';\n\n\n","import { combineLatest, from, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay } from 'rxjs/operators';\nimport {\n  ArrayReducerFn,\n  ExtractObservableValue,\n  PropName,\n  PropType,\n} from '../utils/model';\nimport { NotEmpty, ObservableMap } from './model';\nimport { Promise } from '../zone-less';\nimport { coalesceWith } from '../utils';\n\nconst resolvedPromise = Promise.resolve();\nconst resolvedPromise$ = from(resolvedPromise);\n\n/**\n * @internal\n *\n * Used for typing\n */\nfunction getEntriesToObjectReducerFn<T extends Record<string, any>>(\n  keys: PropName<T>[]\n): ArrayReducerFn<T> {\n  return (\n    accumulator: T,\n    currentValue?: PropType<T>,\n    currentIndex?: number\n  ): T => {\n    return {\n      ...accumulator,\n      [keys[currentIndex]]: currentValue,\n    };\n  };\n}\n\n/**\n * This Observable creation function helps to accumulate an object of key & Observable of values to\n * an Observable of objects of key & value.\n * This comes in handy if you quickly want to create subsets as objects/state-slices of different Observables.\n *\n * The resulting Observable filters out undefined values forwards only distinct values and shared the aggregated output.\n *\n * @example\n *\n * Default usage:\n *\n * const object$: Observable<{\n *   prop1: number,\n *   prop2: string,\n *   prop3: string\n * }> = accumulateObservables({\n *   prop1: interval(42),\n *   prop2: of('lorem'),\n *   prop3: 'test'\n * });\n *\n * Usage with custom duration selector:\n *\n * const object$: Observable<{\n *   prop1: number,\n *   prop2: string,\n *   prop3: string\n * }> = accumulateObservables({\n *   prop1: interval(42),\n *   prop2: of('lorem'),\n *   prop3: 'test'\n * }, timer(0, 20));\n *\n * @param obj - An object of key & Observable values pairs\n * @param durationSelector - An Observable determining the duration for the internal coalescing method\n */\nexport function accumulateObservables<T extends ObservableMap & NotEmpty<T>>(\n  // @TODO type static or Observable to enable mixing of imperative and reatctive values\n  obj: T,\n  durationSelector: Observable<any> = resolvedPromise$\n): Observable<{ [K in keyof T]: ExtractObservableValue<T[K]> }> {\n  const keys = Object.keys(obj) as (keyof T)[];\n  // @TODO better typing to enable static values => coerceObservable(obj[key])\n  const observables = keys.map((key) =>\n    obj[key].pipe(\n      // we avoid using the nullish operator later ;)\n      filter((v) => v !== undefined),\n      // state \"changes\" differ from each other, this operator ensures distinct values\n      distinctUntilChanged()\n    )\n  );\n  return combineLatest(observables).pipe(\n    // As combineLatest will emit multiple times for a change in multiple properties we coalesce those emissions together\n    coalesceWith(durationSelector),\n    // mapping array of values to object\n    map((values) =>\n      values.reduce(getEntriesToObjectReducerFn(keys), {} as any)\n    ),\n    // by using shareReplay we share the last composition work done to create the accumulated object\n    shareReplay(1)\n  );\n}\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { Subscription } from 'rxjs';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(\n    protected scheduler: QueueScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    // @ts-ignore\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed\n      ? super.execute(state, delay)\n      : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(\n    scheduler: QueueScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    // @ts-ignore\n    return scheduler.flush(this);\n  }\n}\n","import { Observable, SchedulerAction, SchedulerLike, Subscriber } from 'rxjs';\nimport { async } from '../scheduler/async/async';\nimport { isNumeric, isScheduler } from './utils';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(\n  dueTime: number | Date = 0,\n  periodOrScheduler?: number | SchedulerLike,\n  scheduler?: SchedulerLike\n): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = (Number(periodOrScheduler) < 1 && 1) || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable((subscriber) => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : +dueTime - scheduler.now();\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0,\n      period,\n      subscriber,\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","export * from './effects.service';\nexport * from './until-destroy';\n","export const MENU_ITEMS = [\n  {\n    link: 'rx-base-state',\n    label: 'State Problems',\n    children: [\n      {\n        link: 'subscription',\n        label: 'Subscription',\n      },\n      {\n        link: 'composition',\n        label: 'Composition',\n      },\n      {\n        link: 'selections',\n        label: 'Selections',\n      },\n      {\n        link: 'connect',\n        label: 'Connecting',\n      },\n      {\n        link: 'selectslice',\n        label: 'SelectSlice',\n      },\n    ],\n  },\n];\n","export { fromEvent } from './fromEvent';\n","export const MENU_ITEMS = [\n  {\n    label: 'List Actions',\n    link: 'list-actions'\n  },\n  {\n    label: 'Nested Lists',\n    link: 'nested-lists'\n  },\n  {\n    label: 'Error handling',\n    link: 'error-handling'\n  },\n  {\n    label: 'Route Change',\n    link: 'route-change'\n  }\n];\n","import { distinctUntilChanged, map, switchAll } from 'rxjs/operators';\nimport { isObservable, of } from 'rxjs';\n\nexport function ngInputFlatten() {\n  return o$ => o$.pipe(\n    map(o => isObservable(o) ? o : of(o)),\n    distinctUntilChanged(),\n    switchAll(),\n    distinctUntilChanged()\n  );\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppControlPanelComponent } from './app-control-panel.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { LetModule } from '@rx-angular/template';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { StrategySelectModule } from '../../shared/debug-helper/strategy-select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [AppControlPanelComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatChipsModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    LetModule,\n    MatListModule,\n    MatCheckboxModule,\n    StrategySelectModule,\n    MatSlideToggleModule\n  ],\n  exports: [AppControlPanelComponent]\n})\nexport class AppControlPanelModule { }\n","import { MonoTypeOperatorFunction, Observable, OperatorFunction } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { isOperateFnArrayGuard, isStringArrayGuard} from '../../guards';\nimport { pipeFromArray } from '../../pipe-from-array';\nimport { stateful } from './stateful';\n\n/**\n * @description\n * returns the state as shared, replayed and distinct `Observable<T>`. This way you don't have to think about late\n * subscribers, multiple subscribers or multiple emissions of the same value.\n *\n * @example\n * const state$ = state.pipe(select());\n * state$.subscribe(state => doStuff(state));\n *\n * @returns Observable<T>\n */\n\nexport function select<T>(): MonoTypeOperatorFunction<T>;\n\n/**\n * @description\n * returns the state as cached and distinct `Observable<A>`. Accepts arbitrary\n * [rxjs operators](https://rxjs-dev.firebaseapp.com/guide/operators) to enrich the selection with reactive composition.\n *\n * @example\n * const profilePicture$ = state.pipe(\n *   select(\n *    pluck('profilePicture'),\n *    switchMap(profilePicture => mapImageAsync(profilePicture))\n *   )\n * );\n * @param  { OperatorFunction<T, A> } op\n * @returns Observable<A>\n *\n * @docsPage select\n * @docsCategory operators\n */\nexport function select<T, A>(\n  op: OperatorFunction<T, A>\n): OperatorFunction<T, A>;\n/**\n * @internal\n */\nexport function select<T, A, B>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>\n): OperatorFunction<T, B>;\n/**\n * @internal\n */\nexport function select<T, A, B, C>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>\n): OperatorFunction<T, C>;\n/**\n * @internal\n */\nexport function select<T, A, B, C, D>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>\n): OperatorFunction<T, D>;\n/**\n * @internal\n */\nexport function select<T, A, B, C, D, E>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>,\n  op5: OperatorFunction<D, E>\n): OperatorFunction<T, E>;\n\n/**\n * @description\n * Access a single property of the state by providing keys.\n * Returns a single property of the state as cached and distinct `Observable<T[K1]>`.\n *\n * @example\n *  // Access a single property\n * const bar$ = state$.pipe(select('bar'));\n *\n * // Access a nested property\n * const foo$ = state$.pipe(select('bar', 'foo'));\n *\n * @return Observable<T[K1]>\n */\nexport function select<T, K1 extends keyof T>(\n  k1: K1\n): OperatorFunction<T, T[K1]>;\n/**\n * @internal\n */\nexport function select<T, K1 extends keyof T, K2 extends keyof T[K1]>(\n  k1: K1,\n  k2: K2\n): OperatorFunction<T, T[K1][K2]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): OperatorFunction<T, T[K1][K2][K3]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5\n): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5,\n  k6: K6\n): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n\n/**\n * @internal\n */\nexport function select<T>(\n  ...opOrMapFn: OperatorFunction<T, any>[] | string[]\n): OperatorFunction<T, any> {\n  return (state$: Observable<T>) => {\n    if (!opOrMapFn || opOrMapFn.length === 0) {\n      return state$.pipe(stateful());\n    } else if (isStringArrayGuard(opOrMapFn)) {\n      return state$.pipe(stateful(pluck(...opOrMapFn)));\n    } else if (isOperateFnArrayGuard(opOrMapFn)) {\n      return state$.pipe(stateful(pipeFromArray(opOrMapFn)));\n    } else {\n      throw new Error('wrong params passed to select');\n    }\n  };\n}\n","import { ComparableData } from '../interfaces/comparable-data-type';\nimport { isDefined } from '../../core';\nimport { valuesComparer } from '../_internals/valuesComparer.util';\n\n/**\n * @description\n * Removes one or multiple items from an array T[].\n * For comparison you can provide a key, an array of keys or a custom comparison function that should return true if items match.\n * If no comparison data is provided, an equality check is used by default.\n * Returns a shallow copy of the updated array T[], and does not mutate the original one.\n *\n * @example\n * // Removing value without comparison data\n *\n * const items = [1,2,3,4,5];\n *\n * const updatedItems = remove(items, [1,2,3]);\n *\n * // updatedItems will be: [4,5];\n *\n * @example\n * // Removing values with comparison function\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const nonExistingCreatures = [{id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const realCreatures = remove(creatures, nonExistingCreatures, (a, b) => a.id === b.id);\n *\n * // realCreatures will be: [{id: 1, type: 'cat'}];\n *\n * @example\n * // Removing values with key\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const nonExistingCreatures = [{id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const realCreatures = remove(creatures, nonExistingCreatures, 'id');\n *\n * // realCreatures will be: [{id: 1, type: 'cat'}];\n *\n * @example\n * // Removing values with array of keys\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const nonExistingCreatures = [{id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const realCreatures = remove(creatures, nonExistingCreatures, ['id', 'type']);\n *\n * // realCreatures will be: [{id: 1, type: 'cat'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *\n *    readonly removeCreature$ = new Subject<Creature>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.removeCreature$,\n *        ({ creatures }, creatureToRemove) => {\n *            return remove(creatures, creatureToRemove, (a, b) => a.id === b.id);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    removeCreature(creatureToRemove: Creature): void {\n *        this.state.set({ creatures: remove(this.state.get().creatures, creatureToRemove, (a, b) => a.id === b.id)});\n *    }\n * }\n *\n * @returns T[]\n *\n * @docsPage remove\n * @docsCategory transformation-helpers\n */\nexport function remove<T>(\n  source: T[],\n  scrap: Partial<T>[] | Partial<T>,\n  compare?: ComparableData<T>\n): T[] {\n  const scrapAsArray = isDefined(scrap)\n    ? Array.isArray(scrap)\n      ? scrap\n      : [scrap]\n    : [];\n  const invalidInput = !Array.isArray(source);\n\n  if (invalidInput) {\n    console.warn(`Remove: original value (${source}) is not an array`);\n    return source;\n  }\n\n  return source.filter((existingItem) => {\n    return !scrapAsArray.some((item) =>\n      valuesComparer(item as T, existingItem, compare)\n    );\n  });\n}\n","import { KeyCompareMap } from '../interfaces';\nimport { Observable, OperatorFunction } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { distinctUntilSomeChanged } from './distinctUntilSomeChanged';\n\n/**\n * @description\n *\n * Returns an Observable that emits only the provided `keys` emitted by the source Observable. Each key will get\n * filtered to only emit _defined_ values as well as checked for distinct emissions.\n * Comparison will be done for each set key in the `keys` array.\n *\n * `selectSlice` will only emit _valid_ selections. A selection is _valid_ if every\n * selected key exists and is defined in the source Observable. This ensures that the `selectSlice`\n * operator will always return a complete slice with all values defined.\n *\n * You can fine grain your distinct checks by providing a `KeyCompareMap` with those keys you want to compute\n * explicitly different\n *\n * @example\n *\n * // An example with a custom comparison applied to each key\n * import { of } from 'rxjs';\n * import { selectSlice } from 'rx-angular/state';\n *\n *\n * const state$: Observable<MyState> = of(\n *  { title: 'myTitle', panelOpen: true},\n *  { title: 'myTitle2', panelOpen: true},\n *  { title: 'newTitle', panelOpen: true},\n *  { title: 'newTitle', panelOpen: false}\n * )\n * .pipe(\n *     selectSlice(['title', 'panelOpen']),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * //  { title: 'myTitle', panelOpen: true },\n * //  { title: 'myTitle2', panelOpen: true },\n * //  { title: 'newTitle', panelOpen: true },\n * //  { title: 'newTitle', panelOpen: false }\n *\n * @example\n *\n * import { of, Observable } from 'rxjs';\n * import { tap } from 'rxjs/operators';\n * import { selectSlice } from 'rx-angular/state';\n *\n * interface MyState {\n *    title: string;\n *    items: string[];\n *    panelOpen: boolean;\n * }\n * // Select items and title.\n * // apply custom compare logic for the items array\n * const customComparison: KeyCompareMap<MyState> = {\n *   items: (oldItems, newItems) => compareItems(oldItems, newItems)\n * };\n * const state$: Observable<MyState> = of(\n * { title: 'myTitle', items: ['foo', 'bar'], panelOpen: true },\n * { title: 'myTitle', items: ['foo', 'bar'], panelOpen: false },\n * { title: 'nextTitle', items: ['foo', 'baR'], panelOpen: true },\n * { title: 'nextTitle', items: ['fooRz', 'boo'], panelOpen: false },\n * );\n * const slice$ = state$.pipe(selectSlice(['title', 'items'], customComparison), tap(console.log)).subscribe();\n *\n * // displays:\n * // { title: 'myTitle', items: ['foo', 'bar'] }\n * // { title: 'nextTitle', items: ['foo', 'baR'] }\n * // { title: 'nextTitle', items: ['fooRz', 'boo'] }\n *\n * @param {(K)[]} keys - the array of keys which should be selected\n * @param {KeyCompareMap<{ [P in K]: T[P] }>} [keyCompareMap] Optional KeyCompareMap to provide custom compare logic\n * for some the keys\n * @docsPage selectSlice\n * @docsCategory operators\n */\nexport function selectSlice<T extends object, K extends keyof T>(\n  keys: K[],\n  keyCompareMap?: KeyCompareMap<{ [P in K]: T[P] }>\n): OperatorFunction<T, PickSlice<T, K>> {\n  return (o$: Observable<T>): Observable<PickSlice<T, K>> =>\n    o$.pipe(\n      filter((state) => state !== undefined),\n      map((state) => {\n        // forward null\n        if (state === null) {\n          return null;\n        }\n        // an array of all keys which exist and are _defined_ in the state object\n        const definedKeys = keys\n          // filter out undefined properties e. g. {}, { str: undefined }\n          .filter((k) => state.hasOwnProperty(k) && state[k] !== undefined);\n\n        // we want to ensure to only emit _valid_ selections\n        // a selection is _valid_ if every selected key exists and has a value:\n\n        // {} => selectSlice(['foo']) => no emission\n        // {str: 'test'} => selectSlice([]) => no emission\n        // {str: 'test'} => selectSlice(['notPresent']) => no emission\n        // {str: 'test'} => state.select(selectSlice([])) => no emission\n        // {str: 'test'} => state.select(selectSlice(['notPresent'])) => no emission\n        // {str: undefined} => state.select(selectSlice(['str'])) => no emission\n        // {str: 'test', foo: undefined } => state.select(selectSlice(['foo'])) => no emission\n        if (definedKeys.length < keys.length) {\n          return undefined;\n        }\n\n        // create the selected slice\n        return definedKeys\n          .reduce((vm, key) => {\n            vm[key] = state[key];\n            return vm;\n          }, {} as PickSlice<T, K>);\n      }),\n      filter((v) => v !== undefined),\n      distinctUntilSomeChanged(keys, keyCompareMap)\n    );\n}\n\ntype PickSlice<T extends object, K extends keyof T> = Pick<T,\n  { [I in K]: I }[K]>;\n","// tslint:disable file-name-casing\nimport { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * NOTE: This is a zone un-patched version of rxjs animationFrameScheduler\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from '@cu/perf-utils';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","export { getZoneUnPatchedApi } from './utils';\nexport * from './browser';\nexport * from './rxjs/scheduler';\nexport * from './rxjs/observable';\nexport * from './rxjs/operators';\n","export {RxIfViewContext, rxIfTemplateNames, RxIfTemplateNames} from './model';\nexport {RxIf} from './rx-if.directive';\nexport {RxIfModule} from './if.module';\n","import {\n  ChangeDetectorRef,\n  Inject,\n  Injectable,\n  NgZone,\n  Optional,\n} from '@angular/core';\nimport {\n  BehaviorSubject,\n  fromEvent,\n  MonoTypeOperatorFunction,\n  Observable,\n} from 'rxjs';\nimport { map, shareReplay, switchMap, takeUntil } from 'rxjs/operators';\nimport { mergeDefaultConfig, RX_ANGULAR_CONFIG } from '../cdk-config';\nimport {\n  RxAngularConfig,\n  RxStrategies,\n  RxStrategyNames,\n  RxStrategyCredentials,\n} from '../model';\nimport { onStrategy } from '../utils/onStrategy';\nimport { ScheduleOnStrategyOptions } from './model';\n\n/**\n *\n *\n * @docsCategory RenderStrategies\n * @docsPage RenderStrategies\n * @publicApi\n */\n@Injectable({ providedIn: 'root' })\nexport class RxStrategyProvider<T extends string = string> {\n  private _strategies$ = new BehaviorSubject<RxStrategies<T>>(undefined);\n  private _primaryStrategy$ = new BehaviorSubject<\n    RxStrategyCredentials<RxStrategyNames<T>>\n  >(undefined);\n\n  private _cfg: Required<RxAngularConfig<T>>;\n  get config(): Required<RxAngularConfig<T>> {\n    return this._cfg;\n  }\n\n  get strategies(): RxStrategies<T> {\n    return this._strategies$.getValue();\n  }\n\n  get strategyNames(): string[] {\n    return Object.values(this.strategies).map((s) => s.name);\n  }\n\n  get primaryStrategy(): RxStrategyNames<T> {\n    return this._primaryStrategy$.getValue().name;\n  }\n\n  set primaryStrategy(strategyName: RxStrategyNames<T>) {\n    this._primaryStrategy$.next(\n      <RxStrategyCredentials<RxStrategyNames<T>>>this.strategies[strategyName]\n    );\n  }\n\n  readonly primaryStrategy$: Observable<RxStrategyCredentials> = this._primaryStrategy$.asObservable();\n  readonly strategies$ = this._strategies$.asObservable();\n\n  readonly strategyNames$ = this.strategies$.pipe(\n    map((strategies) => Object.values(strategies).map((s) => s.name)),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  constructor(\n    @Optional()\n    @Inject(RX_ANGULAR_CONFIG)\n    cfg: RxAngularConfig<T>\n  ) {\n    this._cfg = mergeDefaultConfig(cfg);\n    this._strategies$.next(this._cfg.customStrategies as any);\n    this.primaryStrategy = this.config.primaryStrategy;\n  }\n\n  scheduleWith<R>(\n    work: (v?: R) => void,\n    options?: ScheduleOnStrategyOptions\n  ): MonoTypeOperatorFunction<R> {\n    const strategy = this.strategies[options?.strategy || this.primaryStrategy];\n    const scope = options?.scope || {};\n    const _work = getWork(work, options?.patchZone);\n    return (o$) =>\n      o$.pipe(\n        switchMap((v) =>\n          onStrategy(\n            v,\n            strategy,\n            (_v) => {\n              _work(_v);\n            },\n            { scope }\n          )\n        )\n      );\n  }\n\n  schedule<R>(\n    work: () => R,\n    options?: ScheduleOnStrategyOptions\n  ): Observable<R> {\n    const strategy = this.strategies[options?.strategy || this.primaryStrategy];\n    const scope = options?.scope || {};\n    const _work = getWork(work, options?.patchZone);\n    let returnVal: R;\n    return onStrategy(\n      null,\n      strategy,\n      () => {\n        returnVal = _work();\n      },\n      { scope }\n    ).pipe(map(() => returnVal));\n  }\n\n  scheduleCD(\n    cdRef: ChangeDetectorRef,\n    options?: ScheduleOnStrategyOptions & {\n      afterCD?: () => void;\n      abortCtrl?: AbortController;\n    }\n  ): AbortController {\n    const strategy = this.strategies[options?.strategy || this.primaryStrategy];\n    const scope = options?.scope || cdRef;\n    const abC = options?.abortCtrl || new AbortController();\n    const work = getWork(() => {\n      strategy.work(cdRef, scope);\n      if (options?.afterCD) {\n        options.afterCD();\n      }\n    }, options.patchZone);\n    onStrategy(\n      null,\n      strategy,\n      () => {\n        work();\n      },\n      { scope }\n    )\n      .pipe(takeUntil(fromEvent(abC.signal, 'abort')))\n      .subscribe();\n    return abC;\n  }\n}\n\nfunction getWork<T>(\n  work: (args?: any) => T,\n  patchZone?: false | NgZone\n): (args?: any) => T {\n  let _work = work;\n  if (patchZone) {\n    _work = (args?: any) => patchZone.run(() => work(args));\n  }\n  return _work;\n}\n","import {\n  RxSuspenseNotification,\n  RxNotificationKind,\n  RxErrorNotification,\n  RxCompleteNotification,\n} from '../model';\n\nexport function toRxErrorNotification<T>(\n  error?: any,\n  value?: T\n): RxErrorNotification<T> {\n  return {\n    kind: RxNotificationKind.error,\n    hasValue: !!value || false,\n    value: value,\n    complete: false,\n    error: error || true,\n  };\n}\nexport function toRxSuspenseNotification<T>(\n  value?: T\n): RxSuspenseNotification<T> {\n  return {\n    kind: RxNotificationKind.suspense,\n    hasValue: !!value || false,\n    value,\n    complete: false,\n    error: false,\n  };\n}\nexport function toRxCompleteNotification<T>(\n  value?: T\n): RxCompleteNotification<T> {\n  return {\n    kind: RxNotificationKind.complete,\n    hasValue: !!value || false,\n    value,\n    complete: true,\n    error: false,\n  };\n}\n","// Source https://github.com/thinkloop/memoizerific/blob/master/src/memoizerific.js\n\n// tslint:ignore-file\nexport function memo(limit): (fn: (...args: any[]) => any) => any {\n  const cache = new Map(),\n    lru = [];\n\n  // returns memoize factory\n  return (fn: (...args: any[]) => any) => {\n    const memoize = function() {\n      const argsLengthMinusOne = arguments.length - 1,\n        lruPath = Array(argsLengthMinusOne + 1);\n      let currentCache = cache,\n        newMap,\n        isMemoized = true,\n        fnResult,\n        i;\n\n      // @ts-ignore\n      if ((memoize.numArgs || memoize.numArgs === 0) && memoize.numArgs !== argsLengthMinusOne + 1) {\n        throw new Error('Memoize functions should always be called with the same number of arguments');\n      }\n\n      // loop through each argument to traverse the map tree\n      for (i = 0; i < argsLengthMinusOne; i++) {\n        lruPath[i] = {\n          cacheItem: currentCache,\n          arg: arguments[i]\n        };\n\n        // climb through the hierarchical map tree until the second-last argument has been found, or an argument is missing.\n        // if all arguments up to the second-last have been found, this will potentially be a cache hit (determined later)\n        if (currentCache.has(arguments[i])) {\n          currentCache = currentCache.get(arguments[i]);\n          continue;\n        }\n\n        isMemoized = false;\n\n        // make maps until last value\n        newMap = new Map();\n        currentCache.set(arguments[i], newMap);\n        currentCache = newMap;\n      }\n\n      // we are at the last arg, check if it is really memoized\n      if (isMemoized) {\n        if (currentCache.has(arguments[argsLengthMinusOne])) {\n          fnResult = currentCache.get(arguments[argsLengthMinusOne]);\n        } else {\n          isMemoized = false;\n        }\n      }\n\n      // if the result wasn't memoized, compute it and cache it\n      if (!isMemoized) {\n        fnResult = fn.apply(null, arguments);\n        currentCache.set(arguments[argsLengthMinusOne], fnResult);\n      }\n\n      // if there is a cache limit, purge any extra results\n      if (limit > 0) {\n        lruPath[argsLengthMinusOne] = {\n          cacheItem: currentCache,\n          arg: arguments[argsLengthMinusOne]\n        };\n\n        if (isMemoized) {\n          moveToMostRecentLru(lru, lruPath);\n        } else {\n          lru.push(lruPath);\n        }\n\n        if (lru.length > limit) {\n          removeCachedResult(lru.shift());\n        }\n      }\n\n      memoize.wasMemoized = isMemoized;\n      // @ts-ignore\n      memoize.numArgs = argsLengthMinusOne + 1;\n\n      return fnResult;\n    };\n\n    memoize.limit = limit;\n    memoize.wasMemoized = false;\n    memoize.cache = cache;\n    memoize.lru = lru;\n\n    return memoize;\n  };\n};\n\n// move current args to most recent position\nfunction moveToMostRecentLru(lru, lruPath) {\n  const lruLen = lru.length,\n    lruPathLen = lruPath.length;\n  let isMatch,\n    i, ii;\n\n  for (i = 0; i < lruLen; i++) {\n    isMatch = true;\n    for (ii = 0; ii < lruPathLen; ii++) {\n      if (!isEqual(lru[i][ii].arg, lruPath[ii].arg)) {\n        isMatch = false;\n        break;\n      }\n    }\n    if (isMatch) {\n      break;\n    }\n  }\n\n  lru.push(lru.splice(i, 1)[0]);\n}\n\n// remove least recently used cache item and all dead branches\nfunction removeCachedResult(removedLru) {\n  const removedLruLen = removedLru.length;\n  let tmp, currentLru = removedLru[removedLruLen - 1],\n    i;\n\n  currentLru.cacheItem.delete(currentLru.arg);\n\n  // walk down the tree removing dead branches (size 0) along the way\n  for (i = removedLruLen - 2; i >= 0; i--) {\n    currentLru = removedLru[i];\n    tmp = currentLru.cacheItem.get(currentLru.arg);\n\n    if (!tmp || !tmp.size) {\n      currentLru.cacheItem.delete(currentLru.arg);\n    } else {\n      break;\n    }\n  }\n}\n\n// check if the numbers are equal, or whether they are both precisely NaN (isNaN returns true for all non-numbers)\nfunction isEqual(val1, val2) {\n  return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n","export { templateHandling } from './utils';\nexport {\n  RxBaseTemplateNames,\n  RxRenderAware,\n  RxViewContext,\n  rxBaseTemplateNames,\n} from './model';\nexport {\n  RxTemplateManager,\n  createTemplateManager,\n  RxNotificationTemplateNameMap,\n} from './template-manager';\nexport {\n  RxListManager,\n  createListTemplateManager,\n} from './list-template-manager';\nexport {\n  RxListViewComputedContext,\n  RxDefaultListViewContext,\n  RxListViewContext,\n} from './list-view-context';\n","import { getZoneUnPatchedApi } from '../zone-checks';\n\nexport function requestAnimationFrame(cb: () => void): number {\n  return getZoneUnPatchedApi('requestAnimationFrame')(cb);\n}\n\nexport function cancelAnimationFrame(id: number): void {\n   getZoneUnPatchedApi('cancelAnimationFrame')(id);\n}\n","import { Observable, Subscriber } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { getZoneUnPatchedApi } from '../../zone-checks';\n\nconst isFunction = fn => typeof fn === 'function';\nconst isArray = Array.isArray;\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\n/* tslint:disable:unified-signatures */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(\n  target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>, eventName: string, options: EventListenerOptions,\n  resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n/* tslint:enable:unified-signatures */\n\n\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    // @ts-ignore\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    getZoneUnPatchedApi('addEventListener', sourceObj).call(sourceObj,\n      eventName,\n      handler,\n      options\n    );\n    unsubscribe = () => getZoneUnPatchedApi('removeEventListener', source).call(source,\n      eventName,\n      handler,\n      options\n    );\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { MENU_ITEMS as DYNAMIC_COUNTER_MENU } from './dynamic-counter/dynamic-counter.menu';\n\nexport const INTEGRATIONS_MENU_ITEMS = [\n  {\n    label: 'Dynamic Counter',\n    link: 'dynamic-counter',\n    children: DYNAMIC_COUNTER_MENU,\n  },\n  {\n    label: 'Pokemon API w/ Pagination',\n    link: 'pokemon-pagination',\n  },\n];\n","import { MonoTypeOperatorFunction } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { OnDestroy$ } from '../../cdk/hooks/model';\n\nexport function untilDestroyed<V>(\n  instance: OnDestroy$\n): MonoTypeOperatorFunction<V> {\n  return (source) => source.pipe(takeUntil<V>(instance.onDestroy$));\n}\n","import { Observable } from 'rxjs';\nimport { cancelIdleCallback, requestIdleCallback } from '../../zone-agnostic';\n\nexport const idleCallbackTick = (work?: () => void) =>\n  new Observable<number>((subscriber) => {\n    const id = requestIdleCallback(() => {\n      work();\n      subscriber.next(0);\n      subscriber.complete();\n    });\n\n    return () => cancelIdleCallback(id);\n  });\n","import { RxStrategyCredentials, RxCustomStrategyCredentials } from '../model';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map, mergeAll, share, startWith, switchAll } from 'rxjs/operators';\nimport { hotFlatten } from './hotFlatten';\n\n/**\n * @internal\n *\n * A factory function returning an object to handle the process of turning strategy names into `RxStrategyCredentials`\n * You can next a strategy name as Observable or string and get an Observable of `RxStrategyCredentials`\n *\n * @param defaultStrategyName\n * @param strategies\n */\nexport function strategyHandling(\n  defaultStrategyName: string,\n  strategies: RxCustomStrategyCredentials<string>\n): {\n  strategy$: Observable<RxStrategyCredentials>;\n  next(name: string | Observable<string>): void;\n} {\n  const hotFlattened = hotFlatten(\n    () => new ReplaySubject<string | Observable<string>>(1),\n    switchAll()\n  );\n  return {\n    strategy$: hotFlattened.values$.pipe(\n      startWith(defaultStrategyName),\n      nameToStrategyCredentials(strategies, defaultStrategyName),\n      share()\n    ),\n    next(name: string | Observable<string>) {\n      hotFlattened.next(name);\n    },\n  };\n}\n\n/**\n * @internal\n */\nfunction nameToStrategyCredentials(\n  strategies: RxCustomStrategyCredentials<string>,\n  defaultStrategyName: string\n) {\n  return (\n    o$: Observable<string | null | undefined>\n  ): Observable<RxStrategyCredentials> =>\n    o$.pipe(\n      map((name) =>\n        name && Object.keys(strategies).includes(name)\n          ? strategies[name]\n          : strategies[defaultStrategyName]\n      )\n    );\n}\n","import {\n  ZoneConfigConfiguration,\n  ZoneConfigConvenienceMethods,\n} from './model/zone-cfg.types';\nimport { xhrEvents } from './event-names';\n\nexport const convenienceMethods = (\n  config: ZoneConfigConfiguration\n): ZoneConfigConvenienceMethods => ({\n  unpatchXHR: () => {\n    config.global.disable.XHR();\n    config.events.disable.UNPATCHED_EVENTS([...xhrEvents]);\n  },\n  useUnpatchedPassiveScrollEvents: () => {\n    config.events.disable.PASSIVE_EVENTS(['scroll']);\n    config.events.disable.UNPATCHED_EVENTS(['scroll']);\n  },\n});\n","import { merge, Observable, queueScheduler, Subject, Subscribable, Subscription } from 'rxjs';\nimport { mergeAll, observeOn } from 'rxjs/operators';\n\nexport function createSideEffectObservable<T>(\n  stateObservables = new Subject<Observable<T>>()\n): {\n  effects$: Observable<T>;\n  nextEffectObservable: (effect$: Observable<T>) => void;\n} & Subscribable<T> {\n  const effects$: Observable<T> = merge(\n    stateObservables.pipe(mergeAll(), observeOn(queueScheduler))\n  );\n\n  function nextEffectObservable(effect$: Observable<T>): void {\n    stateObservables.next(effect$);\n  }\n\n  function subscribe(): Subscription {\n    return effects$.subscribe();\n  }\n\n  return {\n    effects$,\n    nextEffectObservable,\n    subscribe\n  };\n}\n","import { MonoTypeOperatorFunction } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { CompareFn, KeyCompareMap } from '../interfaces';\nimport { safePluck } from '../../safe-pluck';\n\n\n/**\n * @internal\n */\nfunction defaultCompare<T>(oldVal: T, newVal: T): boolean {\n  return oldVal === newVal;\n}\n\n/**\n * @description\n *\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from\n * the previous item. Comparison will be done for each set key in the `keys` array.\n *\n * You can fine grain your distinct checks by providing a `KeyCompareMap` with those keys you want to compute\n * explicitly different\n *\n * The name `distinctUntilSomeChanged` was picked since it internally iterates over the `keys` and utilizes the\n * [some](https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Array/some) method in order to\n * compute if values are distinct or not.\n *\n * @example\n *\n * import { of } from 'rxjs';\n * import { distinctUntilSomeChanged } from 'rx-angular/state';\n *\n * interface Person {\n *    age: number;\n *    name: string;\n * }\n *\n * of(\n *   { age: 4, name: 'Hans'},\n *   { age: 7, name: 'Sophie'},\n *   { age: 5, name: 'Han Solo'},\n *   { age: 5, name: 'HanSophie'},\n * ).pipe(\n *   distinctUntilSomeChanged(['age', 'name']),\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Hans'}\n * // { age: 7, name: 'Sophie'}\n * // { age: 5, name: 'Han Solo'}\n * // { age: 5, name: 'HanSophie'}\n *\n * @example\n * // An example with `KeyCompareMap`\n * import { of } from 'rxjs';\n * import { distinctUntilSomeChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number;\n *     name: string;\n *  }\n * const customComparison: KeyCompareMap<Person> = {\n *   name: (oldName, newName) => oldName.substring(0, 2) === newName.substring(0, 2)\n * };\n *\n * of(\n *     { age: 4, name: 'Hans'},\n *     { age: 7, name: 'Sophie'},\n *     { age: 5, name: 'Han Solo'},\n *     { age: 5, name: 'HanSophie'},\n *   ).pipe(\n *     distinctUntilSomeChanged(['age', 'name'], customComparison),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Hans' }\n * // { age: 7, name: 'Sophie' }\n * // { age: 5, name: 'Han Solo' }\n *\n * @param {K[]} keys String key for object property lookup on each item.\n * @param {KeyCompareMap<T>} [compare] Optional KeyCompareMap to explicitly define comparisons for some of the keys\n * @docsPage distinctUntilSomeChanged\n * @docsCategory operators\n */\nexport function distinctUntilSomeChanged<T extends object, K extends keyof T>(\n  keys: K[],\n  keyCompareMap?: KeyCompareMap<T>\n): MonoTypeOperatorFunction<T> {\n  // default compare function applying === to every key\n  let distinctCompare: CompareFn<T> = (oldState, newState) =>\n    keys.some(\n      (key) =>\n        !defaultCompare(safePluck(oldState, [key]), safePluck(newState, [key]))\n    );\n\n  // generate compare function respecting every case of provided keyCompareMap\n  if (keyCompareMap !== undefined) {\n    const compare = (key: K) => {\n      return keyCompareMap.hasOwnProperty(key) &&\n      keyCompareMap[key] !== undefined\n        ? (keyCompareMap[key] as CompareFn<T[K]>)\n        : defaultCompare;\n    };\n    distinctCompare = (oldState, newState) => {\n      return keys.some(\n        (key) =>\n          !compare(key)(safePluck(oldState, [key]), safePluck(newState, [key]))\n      );\n    };\n  }\n  return distinctUntilChanged((oldV, newV) => !distinctCompare(oldV, newV));\n}\n","import { MonoTypeOperatorFunction, Observable, OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, filter, shareReplay } from 'rxjs/operators';\nimport { pipeFromArray } from '../../pipe-from-array';\nimport { isOperateFnArrayGuard } from '../../guards';\n\n/**\n * @description\n *\n * As the name `stateful` implies this operator is useful when you process an Observable which maintains state.\n *\n * Maintaining state as an `Observable` source comes with a handful of repetitive as well as use case specific tasks.\n *\n * It acts like the Observables `pipe` method.\n * It accepts RxJS operators and composes them like `Observable#pipe` and the standalone `pipe` method.\n *\n * Furthermore, it takes care of the above mentioned repetitive tasks as listed below.\n *\n * You will always (aka repetitive) want to ensure that:\n * - only distinct state changes are emitted\n * - only defined values are emitted (filter out undefined, which ensures lazy state)\n * - share and replay custom operations for multiple subscribers (saves performance)\n *\n * You will sometimes (aka situational) need:\n * - a subset of the state (derivations)\n * - compose the state with other Observables or change the Observables behaviour\n *\n *\n * @example\n * import { Observable } from 'rxjs';\n * import { map } from 'rxjs/operators';\n * import { stateful } from 'rx-angular/state';\n *\n * const state$: Observable<{ name: string; items: string[] }>;\n * const derivation$ = state$.pipe(\n *   stateful(\n *     map(state => state.list.length),\n *     filter(length => length > 3)\n *   )\n * );\n *\n * @param {OperatorFunction<T, A>} op - one or multiple passed operator comma separated\n * @return OperatorFunction<T, A>\n *\n * @docsPage stateful\n * @docsCategory operators\n */\nexport function stateful<T>(): MonoTypeOperatorFunction<T>;\n/**\n * @internal\n */\nexport function stateful<T, A>(\n  op: OperatorFunction<T, A>\n): OperatorFunction<T, A>;\n/**\n * @internal\n */\nexport function stateful<T, A, B>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>\n): OperatorFunction<T, B>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>\n): OperatorFunction<T, C>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C, D>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>\n): OperatorFunction<T, D>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C, D, E>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>,\n  op5: OperatorFunction<D, E>\n): OperatorFunction<T, E>;\n/**\n * @description\n *\n * As it acts like the Observables `pipe` method, it accepts one or many RxJS operators as params.\n *\n * @example\n * import { Observable } from 'rxjs';\n * import { map } from 'rxjs/operators';\n * import { stateful } from 'rx-angular/state';\n *\n * const state$: Observable<{ name: string; items: string[] }>;\n * const derivation$ = state$.pipe(\n *   stateful(\n *     map(state => state.list.length),\n *     filter(length => length > 3)\n *   )\n * );\n *\n * @param {OperatorFunction<T, A>} op - one or multiple passed operator comma separated\n *\n * @docsPage stateful\n * @docsCategory operators\n */\nexport function stateful<T, R>(\n  ...optionalDerive: OperatorFunction<T, R>[]\n): OperatorFunction<T, T | R> {\n  return (s: Observable<T>): Observable<T | R> => {\n    return s.pipe(\n      // distinct same base-state objects (e.g. a default emission of default switch cases, incorrect mutable handling\n      // of data) @TODO evaluate benefits vs. overhead\n      distinctUntilChanged(),\n      // CUSTOM LOGIC HERE\n      (o: Observable<T>): Observable<T | R> => {\n        if (isOperateFnArrayGuard(optionalDerive)) {\n          return o.pipe(pipeFromArray(optionalDerive));\n        }\n        return o;\n      },\n      // initial emissions, undefined is no base-state, pollution with skip(1)\n      filter((v) => v !== undefined),\n      // distinct same derivation value\n      distinctUntilChanged(),\n      // reuse custom operations result for multiple subscribers and reemit the last calculated value.\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  };\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { RxStrategyProvider } from '@rx-angular/cdk';\n\nimport { isObservable, Observable, of } from 'rxjs';\nimport { Hooks, RxNotificationKind } from '../../../cdk';\nimport { mapTo } from 'rxjs/operators';\nimport { RxState } from '@rx-angular/state';\nimport { observableToRxTemplateName } from '../../../cdk/utils/rxjs/operators/observable-to-rx-template-name';\n\n@Component({\n  // tslint:disable-next-line:directive-selector component-selector\n  selector: '[rxContextContainer]',\n  template: `\n    <!-- Everything but content with selectors -->\n    <ng-content></ng-content>\n    <!-- Context information -->\n    <ng-container [rxSwitch]=\"templateName$\">\n      <ng-content\n        *rxSwitchCase=\"rxSuspenseTpl\"\n        select=\"[rxSuspense]\"\n      ></ng-content>\n      <ng-content *rxSwitchCase=\"rxErrorTpl\" select=\"[rxError]\"></ng-content>\n      <ng-content\n        *rxSwitchCase=\"rxCompleteTpl\"\n        select=\"[rxComplete]\"\n      ></ng-content>\n    </ng-container>\n    <!-- Content After the context information -->\n    <ng-content select=\"[rxAfterContext]\"> </ng-content>\n  `,\n  providers: [RxState],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class RxContextContainer<U> extends Hooks implements OnInit {\n  @Input('rxContextContainer')\n  set rxContextContainer(\n    potentialObservable: Observable<U> | null | undefined\n  ) {\n    this.rxState.connect(\n      'templateName',\n      potentialObservable.pipe(observableToRxTemplateName())\n    );\n  }\n\n  @Input('rxContextStrategy')\n  set strategy(strategyName$: string | Observable<string> | undefined) {\n    this.rxState.connect(\n      'strategyName',\n      isObservable(strategyName$) ? strategyName$ : of(strategyName$)\n    );\n  }\n\n  @Input('completeTrg')\n  set rxCompleteTrigger(complete$: Observable<any>) {\n    this.rxState.connect(\n      'templateName',\n      complete$.pipe(mapTo(RxNotificationKind.complete))\n    );\n  }\n\n  @Input('errorTrg')\n  set rxErrorTrigger(error$: Observable<any>) {\n    this.rxState.connect(\n      'templateName',\n      error$.pipe(mapTo(RxNotificationKind.error))\n    );\n  }\n\n  @Input('suspenseTrg')\n  set rxSuspenseTrigger(suspense$: Observable<any>) {\n    this.rxState.connect(\n      'templateName',\n      suspense$.pipe(mapTo(RxNotificationKind.suspense))\n    );\n  }\n\n  constructor(\n    private strategyProvider: RxStrategyProvider,\n    private readonly rxState: RxState<{\n      templateName: RxNotificationKind;\n      strategyName: string;\n    }>\n  ) {\n    super();\n  }\n\n  readonly templateName$ = this.rxState.select('templateName');\n  readonly strategyName$ = this.rxState.select('strategyName');\n  readonly rxSuspenseTpl = RxNotificationKind.suspense;\n  readonly rxErrorTpl = RxNotificationKind.error;\n  readonly rxCompleteTpl = RxNotificationKind.complete;\n\n  ngOnInit() {\n    if (!this.rxState.get('templateName')) {\n      this.rxState.set({ templateName: RxNotificationKind.suspense });\n    }\n  }\n}\n\n","export { createSideEffectObservable, createAccumulationObservable } from './cdk';\nexport { RxState } from './rx-state.service';\nexport {\n  select,\n  stateful,\n  distinctUntilSomeChanged,\n  selectSlice\n} from './rxjs/operators';\nexport {\n  insert,\n  remove,\n  toDictionary,\n  update\n} from './transformation-helpers/array/index';\nexport {\n  setProp,\n  patch,\n  deleteProp,\n  dictionaryToArray,\n  toggle\n} from './transformation-helpers/object/index';\nexport { KeyCompareMap, CompareFn } from './rxjs/interfaces';\n","export { RxStrategyProvider } from './strategy-provider.service';\nexport { ScheduleOnStrategyOptions } from './model';\nexport {\n  RX_CONCURRENT_STRATEGIES,\n  RxConcurrentStrategies,\n} from './concurrent-strategies';\nexport { RX_NATIVE_STRATEGIES, RxNativeStrategies } from './native-strategies';\n","import { isDefined, isKeyOf, isObjectGuard } from './guards';\n\nexport function safePluck<T extends object, K1 extends keyof T>(\n  stateObject: T,\n  keys: K1 | [K1]\n): T[K1];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1]>(stateObject: T, keys: [K1, K2]): T[K1][K2];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2]>(stateObject: T, keys: [K1, K2, K3]): T[K1][K2][K3];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3]>(stateObject: T, keys: [K1, K2, K3, K4]): T[K1][K2][K3][K4];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]>(stateObject: T, keys: [K1, K2, K3, K4, K5]): T[K1][K2][K3][K4][K5];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  stateObject: T,\n  keys:\n    | [K1]\n    | [K1, K2]\n    | [K1, K2, K3]\n    | [K1, K2, K3, K4]\n    | [K1, K2, K3, K4, K5]\n    | [K1, K2, K3, K4, K5, K6]\n): T[K1][K2][K3][K4][K5][K6];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  stateObject: T,\n  keys:\n    | [K1]\n    | [K1, K2]\n    | [K1, K2, K3]\n    | [K1, K2, K3, K4]\n    | [K1, K2, K3, K4, K5]\n    | [K1, K2, K3, K4, K5, K6]\n):\n  | T[K1]\n  | T[K1][K2]\n  | T[K1][K2][K3]\n  | T[K1][K2][K3][K4]\n  | T[K1][K2][K3][K4][K5]\n  | T[K1][K2][K3][K4][K5][K6]\n  | null\n  | undefined {\n  // needed to match null and undefined conventions of RxAngular core components\n  // safePluck(null) -> return null\n  // safePluck(undefined) -> return undefined\n  // safePluck(obj, ['wrongKey']) -> return undefined\n  // safePluck(obj, ['correctKey']) -> return value of key\n  // safePluck(obj, '') -> return undefined\n  // safePluck(obj, null) -> return undefined\n  if (!isDefined(stateObject)) {\n    return stateObject;\n  }\n  if (!isDefined(keys)) {\n    return undefined;\n  }\n  // sanitize keys -> keep only valid keys (string, number, symbol)\n  const keysArr = (Array.isArray(keys) ? keys : [keys]).filter(k =>\n    isKeyOf<T>(k)\n  );\n  if (\n    keysArr.length === 0 ||\n    !isObjectGuard(stateObject) ||\n    Object.keys(stateObject).length === 0\n  ) {\n    return undefined;\n  }\n  let prop = stateObject[keysArr.shift() as K1];\n\n  keysArr.forEach(key => {\n    if (isObjectGuard(prop) && isKeyOf(key)) {\n      prop = prop[key];\n    }\n  });\n  return prop;\n}\n","import { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport enum Viewport {\n  mobile = 'mobile',\n  tablet = 'tablet',\n  desktop = 'desktop',\n}\n\ninterface ViewportServiceState {\n  viewport: Viewport;\n  isMobile: boolean;\n  isDesktop: boolean;\n  isTablet: boolean;\n  isHandset: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ViewportService implements OnDestroy {\n  private readonly state = new RxState<ViewportServiceState>();\n\n  readonly viewport$ = this.state.select('viewport');\n  readonly isMobile$ = this.state.select('isMobile');\n  readonly isTablet$ = this.state.select('isTablet');\n  readonly isDesktop$ = this.state.select('isDesktop');\n  readonly isHandset$ = this.state.select('isHandset');\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n    const viewport$ = this.breakpointObserver\n      .observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge,\n      ])\n      .pipe(\n        map((result: BreakpointState) => {\n          if (result.breakpoints[Breakpoints.XSmall]) {\n            return Viewport.mobile;\n          }\n          if (result.breakpoints[Breakpoints.Small]) {\n            return Viewport.tablet;\n          }\n          return Viewport.desktop;\n        }),\n        distinctUntilChanged<Viewport>(),\n      );\n    this.state.connect(viewport$, (oldState, viewportChange) => ({\n      viewport: viewportChange,\n      isHandset:\n        viewportChange === 'mobile' || viewportChange === 'tablet',\n      isMobile: viewportChange === 'mobile',\n      isTablet: viewportChange === 'tablet',\n      isDesktop: viewportChange === 'desktop',\n    }));\n  }\n\n  ngOnDestroy() {\n    this.state.ngOnDestroy();\n  }\n}\n","export * from './setTimeout';\nexport * from './setInterval';\nexport * from './requestAnimationFrame';\nexport * from './requestIdleCallback';\nexport * from './Promise';\nexport * from './queueMicrotask';\n\n","export * from './rxjs';\nexport * from './zone-agnostic';\nexport * from './coalescing-manager';\nexport * from './get-global-this';\nexport * from './memoization';\nexport * from './properties-weakmap';\nexport * from './safe-pluck';\nexport * from './view-constants';\n","import { Observable } from 'rxjs';\nimport { filter, pluck, shareReplay, take } from 'rxjs/operators';\nimport { HookProps } from './model';\n\nexport function toHook<H extends keyof HookProps>(name: H) {\n  return (o$: Observable<HookProps>): Observable<HookProps[H]> =>\n    o$.pipe(\n      pluck(name),\n      filter((init) => !!init),\n      take(1),\n      shareReplay()\n    );\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Observable,OperatorFunction } from 'rxjs';\n\n@Pipe({ name: 'pipe', pure: true })\nexport class PipePipe<T, U> implements PipeTransform {\n\n  transform(\n    potentialObservable: Observable<T>,\n    operatorFn?: OperatorFunction<T, U>,\n  ): Observable<U> {\n    return potentialObservable.pipe(operatorFn)\n  }\n\n}\n","import { ErrorHandler } from '@angular/core';\n\n/** @internal **/\nexport type RxRenderError<T> = [Error, T];\n\n/** @internal **/\nexport type RxRenderErrorFactory<T, E> = (\n  error: Error,\n  value: T\n) => RxRenderError<E>;\n\n/** @internal **/\nexport function isRxRenderError<T>(e: any): e is RxRenderError<T> {\n  return (\n    e != null && Array.isArray(e) && e.length === 2 && e[0] instanceof Error\n  );\n}\n\n/** @internal **/\nexport function createErrorHandler(\n  _handler?: ErrorHandler\n): ErrorHandler {\n  const _handleError = _handler\n    ? (e) => _handler.handleError(e)\n    : console.error;\n  return {\n    handleError: (error) => {\n      if (isRxRenderError(error)) {\n        _handleError(error[0]);\n        console.error('additionalErrorContext', error[1]);\n      } else {\n        _handleError(error);\n      }\n    },\n  };\n}\n\n/** @internal **/\nexport function toRenderError<T>(e: Error, context: T): RxRenderError<T> {\n  return [e, context];\n}\n","// tslint:disable file-name-casing\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * NOTE: This is a zone un-patched version of rxjs asyncScheduler\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from '@cu/perf-utils';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from '@cu/perf-utils';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n","import { NgModule } from '@angular/core';\nimport { ViewportPrioDirective } from './viewport-prio.experimental.directive';\n\nconst DECLARATIONS = [ViewportPrioDirective];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  exports: DECLARATIONS\n})\nexport class ViewportPrioModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { LetModule, PushModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { RxForModule } from '../../../rx-angular-pocs/template/directives/for/rx-for.module';\nimport { StrategySelectComponent } from './strategy-select/strategy-select.component';\n\n@NgModule({\n  declarations: [StrategySelectComponent],\n  imports: [\n    CommonModule,\n    UnpatchEventsModule,\n    PushModule,\n    MatIconModule,\n    MatSelectModule,\n    RxForModule,\n    LetModule,\n  ],\n  exports: [StrategySelectComponent],\n})\nexport class StrategySelectModule {}\n","import { NgModule } from '@angular/core';\nimport { PushPipe } from './push.pipe';\n\nconst DECLARATIONS = [PushPipe];\n\n/**\n * @description\n * This module exports the PushPipe\n *\n * @example\n *\n * ```typescript\n * @NgModule({\n *  imports: [PushModule],\n *  //...\n * })\n * export class AppModule {}\n * ```\n *\n */\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [],\n  exports: DECLARATIONS\n})\nexport class PushModule {\n}\n","export * from './view-context';\nexport * from './template-names';\n","import { NgModule } from '@angular/core';\nimport { MemoPipe } from './memo.pipe';\n\nconst DECLARATIONS = [\n  MemoPipe\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [],\n  exports: DECLARATIONS\n})\nexport class MemoModule {\n}\n","import {\n  isObservable,\n  Observable,\n  ObservableInput,\n  of,\n  OperatorFunction,\n} from 'rxjs';\nimport { distinctUntilChanged, map, switchAll } from 'rxjs/operators';\nimport { coerceObservableWith } from './coerceObservableWith';\n\n/**\n * This operator takes an Observable of values ot Observables aof values and\n * It forwards only distinct values from distinct incoming Observables or values.\n * This comes in handy in any environment where you handle processing of incoming dynamic values and their state.\n *\n * Optionally you can pass a flatten strategy to get find grained control of the flattening process. E.g. mergeAll, switchAll\n *\n * @param flattenOperator - determines the flattening strategy e.g. mergeAll, concatAll, exhaust, switchAll. default is switchAll\n *\n */\nexport function coerceDistinctWith<T>(\n  flattenOperator?: OperatorFunction<ObservableInput<T>, T>\n) {\n  flattenOperator = flattenOperator || switchAll();\n  return (o$: Observable<Observable<T> | T>) =>\n    o$.pipe(\n      coerceObservableWith(),\n      distinctUntilChanged(),\n      flattenOperator,\n      distinctUntilChanged()\n    );\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {coerceElement} from '@angular/cdk/coercion';\nimport {setTimeout} from '../../rx-angular-pocs/cdk/utils/zone-agnostic/browser';\nimport { getZoneUnPatchedApi } from '../../rx-angular-pocs/cdk/utils/zone-agnostic';\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Possible states for a ripple element. */\nexport const enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\nexport interface RippleConfig {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  persistent?: boolean;\n  animation?: RippleAnimationConfig;\n  terminateOnPointerUp?: boolean;\n}\n\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n */\nexport interface RippleAnimationConfig {\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\n  enterDuration?: number;\n  /** Duration in milliseconds for the exit animation (fade-out). */\n  exitDuration?: number;\n}\n\n\n// let isTouch: boolean;\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: {fadeOutRipple(ref: RippleRef): void},\n    /** Reference to the ripple HTML element. */\n    public element: HTMLElement,\n    /** Ripple configuration used for the ripple. */\n    public config: RippleConfig\n  ) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nexport const defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({passive: true});\n\n/** Events that signal that the pointer is down. ['mousedown', 'touchstart']*/\nlet pointerDownEvents;\n\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer implements EventListenerObject {\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Latest non-persistent ripple that was triggered. */\n  private _mostRecentTransientRipple: RippleRef | null;\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /** Whether pointer-up event listeners have been registered. */\n  private _pointerUpEventsRegistered = false;\n\n  /**\n   * Cached dimensions of the ripple container. Set when the first\n   * ripple is shown and cleared once no more ripples are visible.\n   */\n  private _containerRect: ClientRect | null;\n\n  constructor(elementOrElementRef: HTMLElement | ElementRef<HTMLElement>, platform: Platform) {\n\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n\n    // detect touch support\n    if(pointerDownEvents === undefined) {\n      const s = touchOrMouseSupport(platform);\n      if(s === -1) {  // mouse only\n        pointerDownEvents = ['mousedown']\n      }\n      else if(s === 0) { // touch only\n        pointerDownEvents = ['touchstart']\n\n      }\n      else { // both (1)\n        pointerDownEvents = ['mousedown', 'touchstart']\n      }\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerRect =\n      this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    setTimeout(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n\n      rippleRef.state = RippleState.VISIBLE;\n\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    setTimeout(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      // tslint:disable-next-line:no-non-null-assertion\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef: HTMLElement | ElementRef<HTMLElement>) {\n    const element = coerceElement(elementOrElementRef);\n\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n\n    this._triggerElement = element;\n\n    this._registerEvents(pointerDownEvents);\n  }\n\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event: Event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event as MouseEvent);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event as TouchEvent);\n    } else {\n      this._onPointerUp();\n    }\n\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      this._registerEvents(pointerUpEvents);\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private _onMousedown(event: MouseEvent) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n      Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private _onTouchStart(event: TouchEvent) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY);\n      }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE ||\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Registers event listeners for a given list of events. */\n  private _registerEvents(eventTypes: string[]) {\n      eventTypes.forEach((type) => {\n        if(this._triggerElement) {\n          getZoneUnPatchedApi('addEventListener', this._triggerElement)(type, this, passiveEventOptions)\n          //this._triggerElement!.addEventListener(type, this, passiveEventOptions);\n        }\n      });\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      pointerDownEvents.forEach((type) => {\n        getZoneUnPatchedApi('removeEventListener', this._triggerElement)(type, this, passiveEventOptions);\n       // this._triggerElement!.removeEventListener(type, this, passiveEventOptions);\n      });\n\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach((type) => {\n          getZoneUnPatchedApi('removeEventListener', this._triggerElement)(type, this, passiveEventOptions)\n         // this._triggerElement!.removeEventListener(type, this, passiveEventOptions);\n        });\n      }\n    }\n  }\n\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n\n/**\n * Returns a 3 state value\n * only touch support: -1\n * only mouse support: 0\n * touch and mouse support: 1\n *\n * @param platform\n *\n * @return supported interaction\n */\nfunction touchOrMouseSupport(platform: Platform): -1 | 0 | 1 {\n  //if (window.PointerEvent && ('maxTouchPoints' in navigator)) {\n  if (platform.BLINK) {\n    // if Pointer Events are supported, just check maxTouchPoints\n    if (navigator.maxTouchPoints > 0) {\n      return 1;\n    }\n  } else {\n    // no Pointer Events...\n    if (window.matchMedia && window.matchMedia(\"(any-pointer:coarse)\").matches) {\n      // check for any-pointer:coarse which mostly means touchscreen\n      return 1;\n    } else if (window.TouchEvent || ('ontouchstart' in window)) {\n      // last resort - check for exposed touch events API / event handler\n      return 1;\n    }\n  }\n  return 0;\n}\n","import { NgIterable } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nexport interface RxListViewComputedContext {\n  index: number;\n  count: number;\n}\n\nexport interface RxListViewContext<T, U = RxListViewComputedContext>\n  extends RxListViewComputedContext {\n  $implicit: T;\n  item$: Observable<T>;\n  updateContext(newProps: Partial<U>): void;\n}\n\nconst computeFirst = ({ count, index }) => index === 0;\nconst computeLast = ({ count, index }) => index === count - 1;\nconst computeEven = ({ count, index }) => index % 2 === 0;\n\nexport class RxDefaultListViewContext<\n  T,\n  U extends NgIterable<T> = NgIterable<T>,\n  K = keyof T\n> implements RxListViewContext<T> {\n  readonly _item = new ReplaySubject<T>(1);\n  item$ = this._item.asObservable();\n  private _$implicit: T;\n  private _$complete: boolean;\n  private _$error: false | Error;\n  private _$suspense: any;\n  private readonly _context$ = new BehaviorSubject<RxListViewComputedContext>({\n    index: -1,\n    count: -1,\n  });\n\n  set $implicit($implicit: T) {\n    this._$implicit = $implicit;\n    this._item.next($implicit);\n  }\n\n  get $implicit(): T {\n    return this._$implicit;\n  }\n\n  get $complete(): boolean {\n    return this._$complete;\n  }\n\n  get $error(): false | Error {\n    return this._$error;\n  }\n\n  get $suspense(): any {\n    return this._$suspense;\n  }\n\n  get index(): number {\n    return this._context$.getValue().index;\n  }\n\n  get count(): number {\n    return this._context$.getValue().count;\n  }\n\n  get first(): boolean {\n    return computeFirst(this._context$.getValue());\n  }\n\n  get last(): boolean {\n    return computeLast(this._context$.getValue());\n  }\n\n  get even(): boolean {\n    return computeEven(this._context$.getValue());\n  }\n\n  get odd(): boolean {\n    return !this.even;\n  }\n\n  get index$(): Observable<number> {\n    return this._context$.pipe(pluck('index'), distinctUntilChanged());\n  }\n\n  get count$(): Observable<number> {\n    return this._context$.pipe(pluck('count'), distinctUntilChanged());\n  }\n\n  get first$(): Observable<boolean> {\n    return this._context$.pipe(map(computeFirst), distinctUntilChanged());\n  }\n\n  get last$(): Observable<boolean> {\n    return this._context$.pipe(map(computeLast), distinctUntilChanged());\n  }\n\n  get even$(): Observable<boolean> {\n    return this._context$.pipe(map(computeEven), distinctUntilChanged());\n  }\n\n  get odd$(): Observable<boolean> {\n    return this.even$.pipe(map((even) => !even));\n  }\n\n  constructor(private item: T, customProps?: { count: number; index: number }) {\n    // tslint:disable-next-line:no-unused-expression\n    this.$implicit = item;\n    if (customProps) {\n      this.updateContext(customProps);\n    }\n  }\n\n  updateContext(newProps: Partial<RxListViewComputedContext>): void {\n    this._context$.next({\n      ...this._context$.getValue(),\n      ...newProps,\n    });\n  }\n\n  select = (props: K[]): Observable<any> => {\n    return this.item$.pipe(pluck(...(props as any)));\n  };\n}\n","export * from './unpatch-events.directive';\nexport * from './unpatch-events.module';\n","// tslint:disable file-name-casing\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * NOTE: This is a zone un-patched version of rxjs queueScheduler\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from '@cu/perf-utils';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from '@cu/perf-utils';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\nexport const queue = new QueueScheduler(QueueAction);\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { AsyncScheduler } from '../async/AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this.active = true;\n    this.scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if ((error = action!.execute(action!.state, action!.delay))) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { ɵglobal } from '@angular/core';\n\n/**\n * getZoneUnPatchedApi\n *\n * @description\n *\n * This function returns the zone un-patched API for the a specific Browser API.\n * If no element is passed the window is used instead\n *\n * @param name {string} - The name of the API to check.\n * @param elem {any} - The elem to get un-patched API from.\n * @return {Function} - The zone un-patched API in question.\n *\n */\nexport function getZoneUnPatchedApi<T = Function>(\n  name: string,\n  elem: object = ɵglobal\n): T {\n  return isApiZonePatched(name, elem)\n    ? elem['__zone_symbol__' + name]\n    : elem[name];\n}\n\n/**\n * envZonePatched\n *\n * @description\n *\n * This function checks the window object `zone.js` was instantiated.\n * If so, the `window` object maintains a property named `Zone`.\n *\n * Here how Angular checks it: https://github.com/angular/angular/blob/master/packages/core/src/zone/ng_zone.ts#L123\n *\n * @return {boolean} - true if `zone.js` patched global APIs.\n *\n */\nexport function isEnvZonePatched(): boolean {\n  return ɵglobal.Zone !== undefined;\n}\n\n/**\n * apiZonePatched\n *\n * @description\n *\n * This function checks if a specific Browser API is patched by `zone.js`.\n *\n * @param name - The name of the API to check.\n * @param elem - The name of the API to check.\n * @return {boolean} - true if `zone.js` patched the API in question.\n *\n */\nexport function isApiZonePatched(name: string, elem: object): boolean {\n  // if symbol is present, zone patched the API\n  return elem['__zone_symbol__' + name] !== undefined;\n}\n\nconst zoneDetectionCache = new WeakMap<any, boolean>();\n\n/**\n * isNgZone\n *\n * @description\n *\n * This function takes an instance of a class which implements the NgZone interface and checks if\n * its `runOutsideAngular()` function calls `apply()` on the function passed as parameter. This\n * means the Angular application that instantiated this service assumes it runs in a ZoneLess\n * environment, and therefore it's change detection will not be triggered by zone related logic.\n *\n * However, keep in mind this does not mean `zone.js` is not present.\n * The environment could still run in ZoneFull mode even if Angular turned it off.\n * Consider the situation of a Angular element configured for ZoneLess\n * environments is used in an Angular application relining on the zone mechanism.\n *\n * @param instance {Class Instance} - The instance to check for constructor name of `NgZone`.\n * @return {boolean} - true if instance is of type `NgZone`.\n *\n */\nexport function isNgZone(instance: any): boolean {\n  const cachedValue = zoneDetectionCache.get(instance);\n\n  if (cachedValue !== undefined) {\n    return cachedValue;\n  }\n\n  let calledApply = false;\n\n  function fn() {}\n\n  fn.apply = () => (calledApply = true);\n\n  instance.runOutsideAngular(fn);\n  zoneDetectionCache.set(instance, calledApply);\n\n  return calledApply;\n}\n\n/**\n * isNoopNgZone\n *\n *@description\n *\n * This function takes any instance of a class and checks\n * if the constructor name is equal to `NoopNgZone`.\n *\n * For more detailed information read the description of [isNgZone](#isngzone).\n *\n * @param instance {Class Instance} - The instance to check for constructor name of `NoopNgZone`.\n * @return {boolean} - true if instance is of type `NoopNgZone`.\n *\n */\nexport function isNoopNgZone(instance: any): boolean {\n  return !isNgZone(instance);\n}\n","import { noop, UnaryFunction } from 'rxjs';\n\nexport function pipeFromArray<T, R>(\n  fns: Array<UnaryFunction<T, R>>\n): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce(\n      (prev: any, fn: UnaryFunction<T, R>) => fn(prev),\n      input as any\n    );\n  };\n}\n","export * from './render-aware_creator';\nexport * from './interfaces';\nexport { RxNotification } from '../model';\nexport { RxNotificationKind } from '../model';\nexport { notificationKindToRxNotificationKind } from '../utils/rx-materialize';\nexport { rxMaterialize } from '../utils/rx-materialize';\n","// Standard Events\n\n// Focus Events\nexport const focusEvents = ['blur', 'focus', 'focusin', 'focusout'];\n\n/**\n * Mouse Events\n * (MouseEvent)[https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent]\n */\nexport const mouseEvents: (keyof WindowEventMap)[] = [\n  'mousedown',\n  'dblclick',\n  'mouseenter',\n  'mouseleave',\n  'mousemove',\n  'mouseout',\n  'mouseover',\n  'mouseup',\n  'click',\n];\n\n/**\n * Wheel Events\n * (WheelEvent)[https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent]\n */\nexport const wheelEvents: (keyof WindowEventMap)[] = [\n  // (WheelEvent)[https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent]\n  'wheel',\n  'mousewheel',\n];\n\n// Input Events\nexport const inputEvents: (keyof WindowEventMap)[] = [\n  'input',\n  'invalid',\n  'change',\n  'reset',\n  'select',\n  'submit',\n];\n\n/**\n * @deprecated\n */\nexport const formControlsEvents: (keyof WindowEventMap)[] = inputEvents;\n\n// [KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)\nexport const keyboardEvents: (keyof WindowEventMap)[] = [\n  'keydown',\n  'keypress',\n  'keyup',\n];\n\n// [VR]()\nexport const vrEvents: (keyof WindowEventMap)[] = [\n  'vrdisplayactivate',\n  'vrdisplayblur',\n  'vrdisplayconnect',\n  'vrdisplaydeactivate',\n  'vrdisplaydisconnect',\n  'vrdisplayfocus',\n  'vrdisplaypointerrestricted',\n  'vrdisplaypointerunrestricted',\n  'vrdisplaypresentchange',\n];\n\n// [MSGesture]()\nexport const mSGestureEvents: (keyof WindowEventMap)[] = [\n  'MSGestureChange',\n  'MSGestureDoubleTap',\n  'MSGestureEnd',\n  'MSGestureHold',\n  'MSGestureStart',\n  'MSGestureTap',\n  'MSInertiaStart',\n  'MSPointerCancel',\n  'MSPointerDown',\n  'MSPointerEnter',\n  'MSPointerLeave',\n  'MSPointerMove',\n  'MSPointerOut',\n  'MSPointerOver',\n  'MSPointerUp',\n];\n\n// [xPrint](https://developer.mozilla.org/en-US/docs/Web/API/Window/afterprint_event)\nexport const printEvents: (keyof WindowEventMap)[] = [\n  'afterprint',\n  'beforeprint',\n];\n// [network]()\nexport const networkEvents: (keyof WindowEventMap)[] = ['offline', 'online'];\n\n// [network]()\nexport const audioEvents: (keyof WindowEventMap)[] = [\n  'canplay',\n  'canplaythrough',\n  'pause',\n  'play',\n  'playing',\n  'volumechange',\n];\n\n// Composition Events\nexport const compositionEvents = [\n  'compositionstart',\n  'compositionupdate',\n  'compositionend',\n];\n\n/**\n * Touch Events\n * [PointerEvent](https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent)\n * [TouchEvent](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent)\n */\nexport const touchEvents: (keyof WindowEventMap)[] = [\n  // [PointerEvent](https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent)\n  'pointerover',\n  'pointerenter',\n  'pointerdown',\n  'pointermove',\n  // 'pointerrawupdate',\n  'pointerup',\n  'pointercancel',\n  'pointerout',\n  'pointerleave',\n  'gotpointercapture',\n  'lostpointercapture',\n  'pointerup',\n\n  // [TouchEvent](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent)\n  'touchstart',\n  'touchend',\n  'touchmove',\n  'touchcancel',\n\n  // [DragEvent](https://developer.mozilla.org/en-US/docs/Web/API/DragEvent)\n  'drag',\n  'dragend',\n  'dragexit',\n  'dragenter',\n  'dragleave',\n  'dragover',\n  'dragstart',\n  'drop',\n];\n\nexport const globalEvents: (keyof WindowEventMap)[] = [\n  'contextmenu',\n  'resize',\n  'scroll',\n\n  'abort',\n  'load',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'unload',\n\n  'error',\n];\n\nexport const websocketEvents: (keyof WebSocketEventMap)[] = [\n  'close',\n  'error',\n  'message',\n  'open',\n];\n\n/**\n * Basic XHR Events\n * [Load](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event)\n * [Error](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/error_event)\n * There are more events you may want to unpatch https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\n// XHREvent (group is here to make it easier to target XHR in angular applications. It contains redundant events e.g. 'error')\nexport const xhrEvents = ['load', 'error'];\n\n// @TODO\nexport const windowEvents: (keyof WindowEventMap)[] = [\n  'compassneedscalibration',\n  'durationchange',\n  'emptied',\n  'ended',\n\n  'orientationchange',\n\n  'ratechange',\n\n  'seeked',\n  'seeking',\n  'stalled',\n\n  'suspend',\n  'timeupdate',\n  'waiting',\n];\n\n/**\n * All Events combined\n */\nexport const allEvents: string[] = Array.from(\n  new Set([\n    ...focusEvents,\n    ...mouseEvents,\n    ...wheelEvents,\n    ...inputEvents,\n    ...keyboardEvents,\n    ...inputEvents,\n    ...vrEvents,\n    ...mSGestureEvents,\n    ...printEvents,\n    ...networkEvents,\n    ...audioEvents,\n    ...compositionEvents,\n    ...touchEvents,\n    ...globalEvents,\n    ...websocketEvents,\n    ...xhrEvents,\n    ...windowEvents,\n  ])\n);\n","export { interval } from './interval';\nexport { timer } from './timer';\n","export {createAccumulationObservable} from './stateful-observable';\nexport {createSideEffectObservable} from './side-effect-observable';\nexport {intersectionObserver} from './intersection-observer';\nexport {animationFrameTick} from './tick-animationFrame';\nexport {idleCallbackTick} from './tick-idleCallback';\nexport {timeoutTick} from './tick-setTimeout';\nexport {intervalTick} from './tick-setInterval';\nexport {promiseTick} from './tick-promise';\n","import { NgModule } from '@angular/core';\nimport { PipePipe } from './pipe.pipe';\n\nconst DECLARATIONS = [\n  PipePipe\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [],\n  exports: DECLARATIONS\n})\nexport class PipeModule {\n}\n","import { MonoTypeOperatorFunction, Observable, OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, filter, shareReplay } from 'rxjs/operators';\nimport { isOperateFnArrayGuard, pipeFromArray } from '../../core/utils';\n\n/**\n * @description\n *\n * As the name `stateful` implies this operator is useful when you process an Observable which maintains state.\n *\n * Maintaining state as an `Observable` source comes with a handful of repetitive as well as use case specific tasks.\n *\n * It acts like the Observables `pipe` method.\n * It accepts RxJS operators and composes them like `Observable#pipe` and the standalone `pipe` method.\n *\n * Furthermore, it takes care of the above mentioned repetitive tasks as listed below.\n *\n * You will always (aka repetitive) want to ensure that:\n * - only distinct state changes are emitted\n * - only defined values are emitted (filter out undefined, which ensures lazy state)\n * - share and replay custom operations for multiple subscribers (saves performance)\n *\n * You will sometimes (aka situational) need:\n * - a subset of the state (derivations)\n * - compose the state with other Observables or change the Observables behaviour\n *\n *\n * @example\n * import { Observable } from 'rxjs';\n * import { map } from 'rxjs/operators';\n * import { stateful } from 'rx-angular/state';\n *\n * const state$: Observable<{ name: string; items: string[] }>;\n * const derivation$ = state$.pipe(\n *   stateful(\n *     map(state => state.list.length),\n *     filter(length => length > 3)\n *   )\n * );\n *\n * @param {OperatorFunction<T, A>} op - one or multiple passed operator comma separated\n * @return OperatorFunction<T, A>\n *\n * @docsPage stateful\n * @docsCategory operators\n */\nexport function stateful<T>(): MonoTypeOperatorFunction<T>;\n/**\n * @internal\n */\nexport function stateful<T, A>(\n  op: OperatorFunction<T, A>\n): OperatorFunction<T, A>;\n/**\n * @internal\n */\nexport function stateful<T, A, B>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>\n): OperatorFunction<T, B>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>\n): OperatorFunction<T, C>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C, D>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>\n): OperatorFunction<T, D>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C, D, E>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>,\n  op5: OperatorFunction<D, E>\n): OperatorFunction<T, E>;\n/**\n * @description\n *\n * As it acts like the Observables `pipe` method, it accepts one or many RxJS operators as params.\n *\n * @example\n * import { Observable } from 'rxjs';\n * import { map } from 'rxjs/operators';\n * import { stateful } from 'rx-angular/state';\n *\n * const state$: Observable<{ name: string; items: string[] }>;\n * const derivation$ = state$.pipe(\n *   stateful(\n *     map(state => state.list.length),\n *     filter(length => length > 3)\n *   )\n * );\n *\n * @param {OperatorFunction<T, A>} op - one or multiple passed operator comma separated\n *\n * @docsPage stateful\n * @docsCategory operators\n */\nexport function stateful<T, R>(\n  ...optionalDerive: OperatorFunction<T, R>[]\n): OperatorFunction<T, T | R> {\n  return (s: Observable<T>): Observable<T | R> => {\n    return s.pipe(\n      // distinct same base-state objects (e.g. a default emission of default switch cases, incorrect mutable handling\n      // of data) @TODO evaluate benefits vs. overhead\n      distinctUntilChanged(),\n      // CUSTOM LOGIC HERE\n      (o: Observable<T>): Observable<T | R> => {\n        if (isOperateFnArrayGuard(optionalDerive)) {\n          return o.pipe(pipeFromArray(optionalDerive));\n        }\n        return o;\n      },\n      // initial emissions, undefined is no base-state, pollution with skip(1)\n      filter((v) => v !== undefined),\n      // distinct same derivation value\n      distinctUntilChanged(),\n      // reuse custom operations result for multiple subscribers and reemit the last calculated value.\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  };\n}\n","export * from './if-visible.directive';\nexport * from './if-visible.module';\n","import { ChangeDetectionStrategy, InjectionToken } from '@angular/core';\n\nexport interface EnvironmentSettings {\n  production: boolean;\n  changeDetection: ChangeDetectionStrategy\n}\nexport const ENVIRONMENT_SETTINGS = new InjectionToken<EnvironmentSettings>('ENVIRONMENT_SETTINGS');\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NextObserver, Observable, ReplaySubject,\n  Subject,\n  Subscription,} from 'rxjs';\nimport { mergeAll } from 'rxjs/operators';\nimport { RxIfTemplateNames, rxIfTemplateNames, RxIfViewContext } from './model';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  coerceObservable,\n  createTemplateManager,\n  hotFlatten, RxNotification,\n  RxNotificationKind,\n  RxTemplateManager,\n  RxStrategyProvider, templateNotifier,\n} from '@rx-angular/cdk';\n\n@Directive({\n  selector: '[rxIf]',\n})\nexport class RxIf<U> implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  private _renderObserver: NextObserver<any>;\n  private templateManager: RxTemplateManager<U,\n    RxIfViewContext<U>,\n    rxIfTemplateNames\n    >;\n\n  @Input()\n  set rxIf(potentialObservable: Observable<U> | U | null | undefined) {\n    this.observablesHandler.next(coerceObservable(potentialObservable));\n  }\n\n  @Input('rxIfStrategy')\n  set strategy(strategyName: Observable<string> | string | null | undefined) {\n    this.strategyHandler.next(strategyName);\n  }\n\n  @Input('rxIfElse')\n  set else(templateRef: TemplateRef<any>) {\n    if (templateRef) {\n      this.templateManager.addTemplateRef(RxIfTemplateNames.else, templateRef);\n    }\n  }\n\n  @Input('rxIfParent') renderParent: boolean;\n\n  @Input('rxIfPatchZone') patchZone: boolean;\n\n  @Input('rxIfRenderCallback')\n  set renderCallback(callback: NextObserver<U>) {\n    this._renderObserver = callback;\n  }\n\n  /** @internal */\n  private observablesHandler = templateNotifier<U>();\n  private readonly strategyHandler = hotFlatten<string>(\n    () => new ReplaySubject<string | Observable<string>>(1),\n    mergeAll()\n  );\n  private readonly rendered$ = new Subject<void>();\n\n  constructor(\n    private strategyProvider: RxStrategyProvider,\n    private cdRef: ChangeDetectorRef,\n    private eRef: ElementRef<Comment>,\n    private ngZone: NgZone,\n    private readonly thenTemplateRef: TemplateRef<any>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.templateManager = createTemplateManager<\n      U,\n      RxIfViewContext<U>,\n      rxIfTemplateNames\n      >({\n      templateSettings: {\n        viewContainerRef: this.viewContainerRef,\n        createViewContext,\n        updateViewContext,\n        customContext: (rxIf) => ({ rxIf }),\n        patchZone: this.patchZone ? this.ngZone : false,\n      },\n      renderSettings: {\n        cdRef: this.cdRef,\n        eRef: this.eRef,\n        parent: coerceBooleanProperty(this.renderParent),\n        patchZone: this.patchZone ? this.ngZone : false,\n        defaultStrategyName: this.strategyProvider.primaryStrategy,\n        strategies: this.strategyProvider.strategies,\n      },\n      notificationToTemplateName: {\n        [RxNotificationKind.suspense]: () => RxIfTemplateNames.suspense,\n        [RxNotificationKind.next]: (value, templates) => {\n          return value ?\n            RxIfTemplateNames.then as rxIfTemplateNames\n            : templates.get(RxIfTemplateNames.else) ?\n              RxIfTemplateNames.then\n              : undefined\n        },\n        [RxNotificationKind.error]: () => RxIfTemplateNames.error,\n        [RxNotificationKind.complete]: () => RxIfTemplateNames.complete\n      }\n    });\n    this.templateManager.addTemplateRef(\n      RxIfTemplateNames.then,\n      this.thenTemplateRef\n    );\n    this.templateManager.nextStrategy(this.strategyHandler.values$);\n    this.subscription.add(\n      this.templateManager\n        .render(this.observablesHandler.values$)\n        .subscribe((n) => {\n          this.rendered$.next(n);\n          this._renderObserver?.next(n);\n        })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n\nfunction createViewContext<T>(value: T): RxIfViewContext<T> {\n  return {\n    rxIf: value,\n    rxElse: false,\n    $implicit: value,\n    $error: false,\n    $complete: false,\n    $suspense: false,\n  };\n}\n\nfunction updateViewContext<T>(\n  value: T,\n  view: EmbeddedViewRef<RxIfViewContext<T>>,\n  context: RxIfViewContext<T>\n): void {\n  Object.keys(context).forEach((k) => {\n    view.context[k] = context[k];\n  });\n}\n","import { ZoneFlagsHelperFunctions } from './model/configurations.types';\n\nexport * from './event-names';\nexport { EventTarget } from './model/zone.api.extensions';\nexport { ZoneFlagsHelperFunctions } from './model/configurations.types';\nexport {\n  ZoneGlobalConfigurations,\n  ZoneTestConfigurations,\n  ZoneRuntimeConfigurations,\n} from './model/zone.configurations.api';\nexport { zoneConfig } from './zone-cfg';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { getMemoizedFn } from './memo-map';\n\n@Pipe({ name: 'memo', pure: true })\nexport class MemoPipe<U> implements PipeTransform {\n\n  transform<T>(\n    args: null,\n    fn: (args: null) => unknown\n  ): unknown;\n  transform<T>(\n    // tslint:disable-next-line:unified-signatures\n    args: undefined,\n    fn: (args: undefined) => unknown\n  ): unknown;\n  transform<T>(\n    // tslint:disable-next-line:unified-signatures\n    args: any[],\n    fn: (...args: any[]) => unknown\n  ): unknown;\n  transform<T>(\n    args: T | undefined | null,\n    fn: (args) => unknown\n  ): unknown | null | undefined {\n    const momoizedFn = getMemoizedFn(fn);\n    return momoizedFn(args);\n  }\n}\n","import { KeyCompareMap } from '../interfaces';\nimport { Observable, OperatorFunction } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { distinctUntilSomeChanged } from './distinctUntilSomeChanged';\n\n/**\n * @description\n *\n * Returns an Observable that emits only the provided `keys` emitted by the source Observable. Each key will get\n * filtered to only emit _defined_ values as well as checked for distinct emissions.\n * Comparison will be done for each set key in the `keys` array.\n *\n * `selectSlice` will only emit _valid_ selections. A selection is _valid_ if every\n * selected key exists and is defined in the source Observable. This ensures that the `selectSlice`\n * operator will always return a complete slice with all values defined.\n *\n * You can fine grain your distinct checks by providing a `KeyCompareMap` with those keys you want to compute\n * explicitly different\n *\n * @example\n *\n * // An example with a custom comparison applied to each key\n * import { of } from 'rxjs';\n * import { selectSlice } from 'rx-angular/state';\n *\n *\n * const state$: Observable<MyState> = of(\n *  { title: 'myTitle', panelOpen: true},\n *  { title: 'myTitle2', panelOpen: true},\n *  { title: 'newTitle', panelOpen: true},\n *  { title: 'newTitle', panelOpen: false}\n * )\n * .pipe(\n *     selectSlice(['title', 'panelOpen']),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * //  { title: 'myTitle', panelOpen: true },\n * //  { title: 'myTitle2', panelOpen: true },\n * //  { title: 'newTitle', panelOpen: true },\n * //  { title: 'newTitle', panelOpen: false }\n *\n * @example\n *\n * import { of, Observable } from 'rxjs';\n * import { tap } from 'rxjs/operators';\n * import { selectSlice } from 'rx-angular/state';\n *\n * interface MyState {\n *    title: string;\n *    items: string[];\n *    panelOpen: boolean;\n * }\n * // Select items and title.\n * // apply custom compare logic for the items array\n * const customComparison: KeyCompareMap<MyState> = {\n *   items: (oldItems, newItems) => compareItems(oldItems, newItems)\n * };\n * const state$: Observable<MyState> = of(\n * { title: 'myTitle', items: ['foo', 'bar'], panelOpen: true },\n * { title: 'myTitle', items: ['foo', 'bar'], panelOpen: false },\n * { title: 'nextTitle', items: ['foo', 'baR'], panelOpen: true },\n * { title: 'nextTitle', items: ['fooRz', 'boo'], panelOpen: false },\n * );\n * const slice$ = state$.pipe(selectSlice(['title', 'items'], customComparison), tap(console.log)).subscribe();\n *\n * // displays:\n * // { title: 'myTitle', items: ['foo', 'bar'] }\n * // { title: 'nextTitle', items: ['foo', 'baR'] }\n * // { title: 'nextTitle', items: ['fooRz', 'boo'] }\n *\n * @param {(K)[]} keys - the array of keys which should be selected\n * @param {KeyCompareMap<{ [P in K]: T[P] }>} [keyCompareMap] Optional KeyCompareMap to provide custom compare logic\n * for some the keys\n * @docsPage selectSlice\n * @docsCategory operators\n */\nexport function selectSlice<T extends object, K extends keyof T>(\n  keys: K[],\n  keyCompareMap?: KeyCompareMap<{ [P in K]: T[P] }>\n): OperatorFunction<T, PickSlice<T, K>> {\n  return (o$: Observable<T>): Observable<PickSlice<T, K>> =>\n    o$.pipe(\n      filter((state) => state !== undefined),\n      map((state) => {\n        // forward null\n        if (state === null) {\n          return null;\n        }\n        // an array of all keys which exist and are _defined_ in the state object\n        const definedKeys = keys\n          // filter out undefined properties e. g. {}, { str: undefined }\n          .filter((k) => state.hasOwnProperty(k) && state[k] !== undefined);\n\n        // we want to ensure to only emit _valid_ selections\n        // a selection is _valid_ if every selected key exists and has a value:\n\n        // {} => selectSlice(['foo']) => no emission\n        // {str: 'test'} => selectSlice([]) => no emission\n        // {str: 'test'} => selectSlice(['notPresent']) => no emission\n        // {str: 'test'} => state.select(selectSlice([])) => no emission\n        // {str: 'test'} => state.select(selectSlice(['notPresent'])) => no emission\n        // {str: undefined} => state.select(selectSlice(['str'])) => no emission\n        // {str: 'test', foo: undefined } => state.select(selectSlice(['foo'])) => no emission\n        if (definedKeys.length < keys.length) {\n          return undefined;\n        }\n\n        // create the selected slice\n        return definedKeys\n          .reduce((vm, key) => {\n            vm[key] = state[key];\n            return vm;\n          }, {} as PickSlice<T, K>);\n      }),\n      filter((v) => v !== undefined),\n      distinctUntilSomeChanged(keys, keyCompareMap)\n    );\n}\n\ntype PickSlice<T extends object, K extends keyof T> = Pick<T,\n  { [I in K]: I }[K]>;\n","export * from './isSubscription';\n","import { RXLET_VS_PUSH_MENU_ITEMS } from './rx-let-vs-push/rx-let-vs-push.menu';\nimport { ALPHAS_COMPARE_MENU_ITEMS } from './alphas-compare/alphas-compare.menu';\n\nexport const MENU_ITEMS = [\n  ...RXLET_VS_PUSH_MENU_ITEMS,\n  ...ALPHAS_COMPARE_MENU_ITEMS,\n  {\n    label: 'Nested Component Structure',\n    link: 'nested-component-structure'\n  },\n  {\n    label: 'Sibling Component Structure',\n    link: 'sibling-component-structure'\n  }\n];\n","import { RxCustomStrategyCredentials, RxStrategyCredentials, strategyHandling } from '@rx-angular/cdk';\nimport { ConnectableObservable, EMPTY, isObservable, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  // @NOTICE in RxJS v7 it will be renamed to `mergeWith`\n  merge as mergeWith,\n  mergeAll,\n  publishReplay, shareReplay,\n  startWith,\n  switchAll,\n  tap\n} from 'rxjs/operators';\n\nimport { ChangeDetectorRef } from '@angular/core';\nimport { rxMaterialize } from '../utils/rxjs/operators/rx-materialize';\nimport { ngInputFlatten } from '../utils/rxjs/operators/ngInputFlatten';\nimport { RxNotification, RxTemplateObserver } from '../utils/rxjs/Notification';\n\nexport interface RenderAware<U> {\n  strategy$: Observable<RxStrategyCredentials>;\n  nextPotentialObservable: (value: any) => void;\n  nextStrategy: (config: string | Observable<string>) => void;\n  nextTemplateTrigger: (trigger$: Observable<RxNotification<U>>) => void;\n  rendered$: Observable<RxNotification<U>>;\n  subscribe: () => void;\n}\n\n/**\n * RenderAware\n *\n * @description\n * This function returns an object that holds all the shared logic for the push pipe and the let directive\n * responsible for change detection\n * If you extend this class you need to implement how the update of the rendered value happens.\n * Also custom behaviour is something you need to implement in the extending class\n */\nexport function createRenderAware<U>(cfg: {\n  templateObserver: RxTemplateObserver<U>;\n  defaultStrategyName: string;\n  strategies: RxCustomStrategyCredentials<string>;\n  getCdRef: (k: RxNotification<U>) => ChangeDetectorRef;\n  getContext: (k?: RxNotification<U>) => any;\n}): RenderAware<U | undefined | null> {\n\n  const strategyName$ = new ReplaySubject<Observable<string>>(1);\n  const strategyHandling$ = strategyHandling(\n    cfg.defaultStrategyName,\n    cfg.strategies\n  );\n  const templateTriggerSubject = new Subject<Observable<RxNotification<U>>>();\n  const templateTrigger$ = templateTriggerSubject.pipe(\n    mergeAll()\n  );\n\n  const observablesFromTemplate$ = new ReplaySubject<Observable<U>>(1);\n  const renderingEffect$ =\n    observablesFromTemplate$.pipe(\n      map(o => isObservable(o) ? o : of(o)),\n      distinctUntilChanged(),\n      switchAll(),\n      distinctUntilChanged(),\n      rxMaterialize(),\n      /* tslint:disable */\n      mergeWith(templateTrigger$ || EMPTY),\n      /* tslint:enable */\n      /*observeTemplateByNotificationKind(cfg.templateObserver),\n      applyStrategy(strategy$, cfg.getContext, cfg.getCdRef),*/\n      catchError(e => {\n        console.error(e);\n        return EMPTY;\n      }),\n      publishReplay()\n    );\n\n  return {\n    strategy$: strategyHandling$.strategy$,\n    nextPotentialObservable(value: Observable<U>): void {\n      observablesFromTemplate$.next(value);\n    },\n    nextStrategy(nextConfig: Observable<string>): void {\n      strategyName$.next(nextConfig);\n    },\n    nextTemplateTrigger(trigger$: Observable<RxNotification<U>>) {\n      templateTriggerSubject.next(trigger$);\n    },\n    subscribe: () => {\n      return (renderingEffect$ as ConnectableObservable<any>).connect();\n    },\n    rendered$: renderingEffect$ as any\n  };\n}\n","/** A shared promise instance to cause a delay of one microtask */\nimport { getZoneUnPatchedApi } from './zone-checks';\n\nlet resolvedPromise: Promise<void> | null = null;\n\nexport function getUnpatchedResolvedPromise(): Promise<void> {\n  resolvedPromise = resolvedPromise || getZoneUnPatchedApi<PromiseConstructor>('Promise').resolve();\n  return resolvedPromise;\n}\n","import { getZoneUnPatchedApi } from '../zone-checks';\nimport { Promise } from './Promise';\nimport { setTimeout } from './setTimeout';\n\n// Source: Feross Aboukhadijeh <https://feross.org/opensource>\nlet promise\nconst _queueMicrotask = typeof queueMicrotask === 'function'\n  ? getZoneUnPatchedApi('queueMicrotask').bind(globalThis)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n\nexport function queueMicrotask(cb: () => void): void {\n  return _queueMicrotask(cb);\n}\n","type Heap = Array<ReactSchedulerTask>;\n\nexport interface ReactSchedulerTask {\n  id: number;\n  sortIndex: number;\n  callback: () => void;\n  priorityLevel: any;\n  startTime: number;\n  expirationTime: number;\n  isQueued?: boolean;\n}\n\nexport function push(heap: Heap, node: ReactSchedulerTask): void {\n  const index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\n\nexport function peek(heap: Heap): ReactSchedulerTask | null {\n  const first = heap[0];\n  return first === undefined ? null : first;\n}\n\nexport function pop(heap: Heap): ReactSchedulerTask | null {\n  const first = heap[0];\n  if (first !== undefined) {\n    const last = heap.pop();\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  let index = i;\n  while (true) {\n    // tslint:disable-next-line:no-bitwise\n    const parentIndex = (index - 1) >>> 1;\n    const parent = heap[parentIndex];\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  let index = i;\n  const length = heap.length;\n  while (index < length) {\n    const leftIndex = (index + 1) * 2 - 1;\n    const left = heap[leftIndex];\n    const rightIndex = leftIndex + 1;\n    const right = heap[rightIndex];\n\n    // If the left or right node is smaller, swap with the smaller of those.\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n","export {interval} from './interval'\n","// tslint:disable\nimport { Subscription } from 'rxjs';\nimport { Action } from '../Action';\nimport { SchedulerAction } from '../types';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { setInterval, clearInterval } from '../../../browser/browser';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n  public id: any;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending = false;\n\n  constructor(\n    protected scheduler: AsyncScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(\n    scheduler: AsyncScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(\n    scheduler: AsyncScheduler,\n    id: any,\n    delay: number | null = 0\n  ): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = (!!e && e) || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    // @ts-ignore\n    const index = actions.indexOf(this);\n\n    this.work = null!;\n    this.state = null!;\n    this.pending = false;\n    this.scheduler = null!;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null!;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EmbeddedViewRef,\n  NgZone,\n  TemplateRef,\n  Type,\n  ViewContainerRef,\n  ɵdetectChanges as detectChanges,\n} from '@angular/core';\nimport {\n  combineLatest,\n  concat,\n  merge,\n  Observable,\n  of,\n  OperatorFunction,\n} from 'rxjs';\nimport { MonoTypeOperatorFunction } from 'rxjs';\nimport {\n  delay,\n  ignoreElements,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { asyncScheduler } from '../zone-less/rxjs/scheduler/index';\nimport { RxStrategyCredentials } from '../model';\nimport { onStrategy } from '../utils/onStrategy';\nimport { toRenderError } from './render-error';\n\n// Below are constants for LView indices to help us look up LView members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nconst TVIEW = 1;\nconst T_HOST = 6;\nconst L_CONTAINER_NATIVE = 7;\nconst CONTEXT = 8;\nconst HEADER_OFFSET = 20;\n\nexport type TNode = any;\n\n/**\n * @internal\n *\n * Returns the TNode of the passed node form TVIEW of passed cdRef\n *\n * @param cdRef\n * @param native\n */\nexport function getTNode(cdRef: ChangeDetectorRef, native: Node): TNode {\n  const lView = (cdRef as any)._cdRefInjectingView;\n  if (!lView) {\n    return undefined;\n  }\n  const tView = lView[TVIEW];\n  let i = HEADER_OFFSET;\n  let lContainer;\n  while (!lContainer && i <= tView['bindingStartIndex']) {\n    const candidate = lView[i];\n    if (candidate && candidate[L_CONTAINER_NATIVE] === native) {\n      lContainer = candidate;\n    }\n    i++;\n  }\n  return lContainer[T_HOST];\n}\n\n/**\n * @internal\n *\n * Returns a set of references to parent views\n *\n *\n * @param cdRef\n * @param tNode\n */\nexport function extractProjectionParentViewSet(\n  cdRef: ChangeDetectorRef,\n  tNode: TNode\n): Set<Type<Component>> {\n  const injectingLView = (cdRef as any)._cdRefInjectingView;\n  const injectingTView = injectingLView[1];\n  const components = new Set<number>(injectingTView['components']);\n  const parentElements = new Set<Type<Component>>();\n  let parent = tNode['parent'];\n  while (parent != null && components.size > 0) {\n    const idx = parent['index'];\n    if (components.has(idx)) {\n      // TODO: we should discuss about this. currently only the first Component will get returned, not a list of\n      //  components. Maybe we should make the parent notification configurable regarding the level of `deepness`?\n      // components.delete(idx);\n      components.clear();\n      parentElements.add(injectingLView[idx][CONTEXT]);\n    }\n    parent = parent['parent'];\n  }\n  return parentElements;\n}\n\nexport function extractProjectionViews(\n  cdRef: ChangeDetectorRef,\n  tNode: TNode\n): Type<any>[] {\n  return Array.from(extractProjectionParentViewSet(cdRef, tNode));\n}\n\n/**\n * A side effect operator similar to `tap` but with a static logic\n *\n *\n *\n * @param cdRef\n * @param tNode\n * @param strategy$\n */\nexport function renderProjectionParents(\n  cdRef: ChangeDetectorRef,\n  tNode: TNode,\n  strategy$: Observable<RxStrategyCredentials>\n): OperatorFunction<any, any> {\n  return (o$) =>\n    o$.pipe(\n      withLatestFrom(strategy$),\n      switchMap(([_, strategy]) => {\n        const parentElements = extractProjectionParentViewSet(cdRef, tNode);\n        const behaviors = [];\n        for (const el of parentElements.values()) {\n          behaviors.push(\n            onStrategy(\n              el,\n              strategy,\n              (value, work, options) => {\n                detectChanges(el);\n              },\n              { scope: el }\n            )\n          );\n        }\n        behaviors.push(\n          onStrategy(\n            null,\n            strategy,\n            (value, work, options) => work(cdRef, options.scope),\n            { scope: (cdRef as any).context || cdRef }\n          )\n        );\n        return merge(...behaviors);\n      })\n    );\n}\n\n/**\n * @internal\n * creates an embeddedViewRef\n *\n * @param viewContainerRef\n * @param templateRef\n * @param context\n * @param index\n * @return EmbeddedViewRef<C>\n */\nexport function createEmbeddedView<C>(\n  viewContainerRef: ViewContainerRef,\n  templateRef: TemplateRef<C>,\n  context: C,\n  index = 0\n): EmbeddedViewRef<C> {\n  const view = viewContainerRef.createEmbeddedView(templateRef, context, index);\n  view.detectChanges();\n  return view;\n}\n\n/**\n * @internal\n *\n * A factory function returning an object to handle `TemplateRef`'s.\n * You can add and get a `TemplateRef`.\n *\n */\nexport function templateHandling<N, C>(\n  viewContainerRef: ViewContainerRef\n): {\n  add(name: N, templateRef: TemplateRef<C>): void;\n  get(name: N): TemplateRef<C>;\n  createEmbeddedView(name: N, context?: C, index?: number): EmbeddedViewRef<C>;\n} {\n  const templateCache = new Map<N, TemplateRef<C>>();\n\n  const get = (name: N): TemplateRef<C> => {\n    return templateCache.get(name);\n  };\n  return {\n    add(name: N, templateRef: TemplateRef<C>): void {\n      assertTemplate(name, templateRef);\n      if (!templateCache.has(name)) {\n        templateCache.set(name, templateRef);\n      } else {\n        throw new Error(\n          'Updating an already existing Template is not supported at the moment.'\n        );\n      }\n    },\n    get,\n    createEmbeddedView: (name: N, context?: C) =>\n      createEmbeddedView(viewContainerRef, get(name), context),\n  };\n\n  //\n  function assertTemplate<T>(\n    property: any,\n    templateRef: TemplateRef<T> | null\n  ): templateRef is TemplateRef<T> {\n    const isTemplateRefOrNull = !!(\n      !templateRef || templateRef.createEmbeddedView\n    );\n    if (!isTemplateRefOrNull) {\n      throw new Error(\n        `${property} must be a TemplateRef, but received something else.`\n      );\n    }\n    return isTemplateRefOrNull;\n  }\n}\n\n/**\n * @internal\n *\n * A side effect operator similar to `tap` but with a static internal logic.\n * It calls detect changes on the 'VirtualParent' and the injectingViewCdRef.\n *\n * @param tNode\n * @param injectingViewCdRef\n * @param strategy\n * @param notifyNeeded\n */\nexport function notifyAllParentsIfNeeded<T>(\n  tNode: TNode,\n  injectingViewCdRef: ChangeDetectorRef,\n  strategy: RxStrategyCredentials,\n  notifyNeeded: () => boolean\n): MonoTypeOperatorFunction<T> {\n  return (o$) =>\n    o$.pipe(\n      delay(0, asyncScheduler),\n      switchMap((v) => {\n        const notifyParent = notifyNeeded();\n        if (!notifyParent) {\n          return of(v);\n        }\n        const behaviors = tNode\n          ? getVirtualParentNotifications$(tNode, injectingViewCdRef, strategy)\n          : [];\n        // @TODO remove this CD on injectingViewCdRef if possible\n        behaviors.push(\n          onStrategy(\n            null,\n            strategy,\n            (_v, work, options) => work(injectingViewCdRef, options.scope),\n            { scope: (injectingViewCdRef as any).context || injectingViewCdRef },\n            error => toRenderError(error, injectingViewCdRef)\n          )\n        );\n        if (behaviors.length === 1) {\n          return of(v);\n        }\n        return concat(of(v), combineLatest(behaviors).pipe(ignoreElements()));\n      })\n    );\n}\n\n/**\n * @internal\n *\n * returns an Observable executing a side effects for change detection of parents\n *\n * @param injectingViewCdRef\n * @param strategy\n * @param notify\n */\nexport function notifyInjectingParentIfNeeded(\n  injectingViewCdRef: ChangeDetectorRef,\n  strategy: RxStrategyCredentials,\n  notify: boolean\n): Observable<null> {\n  return concat(\n    of(null),\n    notify\n      ? onStrategy(\n          null,\n          strategy,\n          (value, work, options) => {\n            // console.log('notify injectingView', injectingViewCdRef);\n            work(injectingViewCdRef, options.scope);\n          },\n          {},\n          error => toRenderError(error, injectingViewCdRef)\n        ).pipe(ignoreElements())\n      : (([] as unknown) as Observable<never>)\n  );\n}\n\n/**\n * @internal\n *\n * Returns an array of observables triggering `detectChanges` on the __virtual parent__  (parent of the projected view)\n *\n * @param tNode - is a component that was projected into another component (virtual parent)\n * @param injectingViewCdRef - is needed to get the\n * @param strategy - the strategy to run the change detection\n */\nexport function getVirtualParentNotifications$(\n  tNode: TNode,\n  injectingViewCdRef: ChangeDetectorRef,\n  strategy: RxStrategyCredentials\n): Observable<Comment>[] {\n  const parentElements = extractProjectionParentViewSet(\n    injectingViewCdRef,\n    tNode\n  );\n  const behaviors = [];\n  for (const parentComponent of parentElements.values()) {\n    behaviors.push(\n      onStrategy(\n        parentComponent,\n        strategy,\n        // Here we CD the parent to update their projected views scenarios\n        (value, work, options) => {\n          // console.log('parentComponent', parentComponent);\n          detectChanges(parentComponent);\n        },\n        { scope: parentComponent },\n        error => toRenderError(error, injectingViewCdRef)\n      )\n    );\n  }\n  return behaviors;\n}\n","import { NgModule } from '@angular/core';\nimport { RxIf } from './rx-if.directive';\n\nconst DECLARATIONS = [RxIf];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [],\n  exports: DECLARATIONS\n})\nexport class RxIfModule {\n}\n","// tslint:disable\nimport { Subscription } from 'rxjs';\nimport { Action } from '../Action';\nimport { SchedulerAction } from '../types';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { setInterval, clearInterval } from '../../../browser';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n  public id: any;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending = false;\n\n  constructor(\n    protected scheduler: AsyncScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(\n    scheduler: AsyncScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(\n    scheduler: AsyncScheduler,\n    id: any,\n    delay: number | null = 0\n  ): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = (!!e && e) || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    // @ts-ignore\n    const index = actions.indexOf(this);\n\n    this.work = null!;\n    this.state = null!;\n    this.pending = false;\n    this.scheduler = null!;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null!;\n  }\n}\n","import { EmbeddedViewRef, TemplateRef } from '@angular/core';\nimport { EMPTY, merge, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  ignoreElements,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport {\n  RxCoalescingOptions,\n  RxCompleteNotification,\n  RxErrorNotification,\n  RxNextNotification,\n  RxNotification,\n  RxNotificationKind,\n  RxRenderWork,\n  RxSuspenseNotification,\n} from '../model';\nimport { onStrategy } from '../utils/onStrategy';\nimport { strategyHandling } from '../utils/strategy-handling';\nimport {\n  rxBaseTemplateNames,\n  RxRenderAware,\n  RxRenderSettings,\n  RxTemplateSettings,\n  RxViewContext,\n} from './model';\nimport { createErrorHandler } from './render-error';\nimport {\n  getTNode,\n  notifyAllParentsIfNeeded,\n  notifyInjectingParentIfNeeded,\n  templateHandling,\n  TNode,\n} from './utils';\n\nexport interface RxTemplateManager<\n  T,\n  C extends RxViewContext<T>,\n  N = rxBaseTemplateNames | string\n> extends RxRenderAware<T> {\n  addTemplateRef: (name: N, templateRef: TemplateRef<C>) => void;\n  // addTrigger: (trigger$: Observable<RxNotification<T>>) => void;\n  // activeTemplate: N;\n}\n\n/**\n * @internal\n *\n * A factory function that returns a map of projections to turn a notification of a Observable (next, error, complete)\n *\n * @param customNextContext - projection function to provide custom properties as well as override existing\n */\nexport function notificationKindToViewContext<T>(\n  customNextContext: (value: T) => object\n): RxViewContextMap<T> {\n  // @TODO rethink overrides\n  return {\n    suspense: (notification: RxSuspenseNotification<T>) => {\n      const $implicit: T | null | undefined = notification.value as T;\n      return {\n        $implicit,\n        $suspense: true,\n        $error: false,\n        $complete: false,\n        ...customNextContext($implicit),\n      };\n    },\n    next: (notification: RxNextNotification<T>) => {\n      const $implicit: T | null | undefined = notification.value as T;\n      return {\n        $implicit,\n        $suspense: false,\n        $error: false,\n        $complete: false,\n        ...customNextContext($implicit),\n      };\n    },\n    error: (notification: RxErrorNotification<T>) => {\n      const $implicit: T | null | undefined = notification.value as T;\n      return {\n        $implicit,\n        $complete: false,\n        $error: notification.error,\n        $suspense: false,\n        ...customNextContext($implicit),\n      };\n    },\n    complete: (notification: RxCompleteNotification<T>) => {\n      const $implicit: T | null | undefined = notification.value as T;\n      return {\n        $implicit,\n        $error: false,\n        $complete: true,\n        $suspense: false,\n        ...customNextContext($implicit),\n      };\n    },\n  };\n}\nexport type RxViewContextMap<T> = Record<\n  RxNotificationKind,\n  (value?: any) => Partial<RxViewContext<T>>\n>;\n\nexport type RxNotificationTemplateNameMap<T, C, N> = Record<\n  RxNotificationKind,\n  (value?: T, templates?: { get: (name: N) => TemplateRef<C> }) => N\n>;\n\nexport function createTemplateManager<\n  T,\n  C extends RxViewContext<T>,\n  N = rxBaseTemplateNames | string\n>(config: {\n  renderSettings: RxRenderSettings<T, C>;\n  templateSettings: RxTemplateSettings<T, C>;\n  templateTrigger$?: Observable<RxNotification<unknown>>;\n  notificationToTemplateName: RxNotificationTemplateNameMap<T, C, N>;\n}): RxTemplateManager<T, C, N> {\n  const {\n    renderSettings,\n    notificationToTemplateName,\n    templateSettings,\n  } = config;\n  const {\n    defaultStrategyName,\n    strategies,\n    cdRef: injectingViewCdRef,\n    patchZone,\n    parent,\n    eRef,\n  } = renderSettings;\n\n  const errorHandler = createErrorHandler(renderSettings.errorHandler);\n  const tNode: TNode = parent\n    ? getTNode(injectingViewCdRef, eRef.nativeElement)\n    : false;\n\n  let activeTemplate: N;\n\n  const strategyHandling$ = strategyHandling(defaultStrategyName, strategies);\n  const templates = templateHandling<N, C>(templateSettings.viewContainerRef);\n  const viewContainerRef = templateSettings.viewContainerRef;\n\n  const triggerHandling = config.templateTrigger$ || EMPTY;\n  const getContext = notificationKindToViewContext(\n    templateSettings.customContext || ((v) => {})\n  );\n\n  const workFactory = patchZone\n    ? (work: VoidFunction) => patchZone.run(work)\n    : (work: VoidFunction) => work();\n\n  return {\n    addTemplateRef: templates.add,\n    // addTrigger: triggerHandling.next,\n    nextStrategy: strategyHandling$.next,\n    render(values$: Observable<RxNotification<T>>): Observable<any> {\n      return values$.pipe(\n        /* tslint:disable */\n        // mergeWith(triggerHandling.trigger$ || EMPTY),\n        /* tslint:enable */\n        withLatestFrom(strategyHandling$.strategy$),\n        // Cancel old renders\n        switchMap(([notification, strategy]) => {\n          const kind: RxNotificationKind = notification.kind;\n          const value: T = notification.value as T;\n          const templateName = notificationToTemplateName[kind](\n            value,\n            templates\n          );\n\n          const template = templates.get(templateName);\n          const isNewTemplate = activeTemplate !== templateName;\n          const notifyParent = isNewTemplate && parent;\n          return merge(\n            onStrategy(\n              value,\n              strategy,\n              (v: T, work: RxRenderWork, options: RxCoalescingOptions) => {\n                const context = <C>getContext[kind](notification);\n                if (isNewTemplate) {\n                  // template has changed (undefined => next; suspense => next; ...)\n                  // handle remove & insert\n                  // remove current view if there is any\n                  if (viewContainerRef.length > 0) {\n                    // patch removal if needed\n                    workFactory(() => viewContainerRef.clear());\n                  }\n                  // create new view if any\n                  if (template) {\n                    // createEmbeddedView is already patched, no need for workFactory\n                    workFactory(() =>\n                      templates.createEmbeddedView(templateName, context)\n                    );\n                  }\n                } else if (template) {\n                  // template didn't change, update it\n                  // handle update\n                  const view = <EmbeddedViewRef<C>>viewContainerRef.get(0);\n                  Object.keys(context).forEach((k) => {\n                    view.context[k] = context[k];\n                  });\n                  // update view context, patch if needed\n                  workFactory(() => work(view, options.scope, notification));\n                }\n                activeTemplate = templateName;\n              }\n              // we don't need to specify any scope here. The template manager is the only one\n              // who will call `viewRef#detectChanges` on any of the templates it manages.\n              // whenever a new value comes in, any pre-scheduled work of this taskManager will\n              // be nooped before a new work will be scheduled. This happens because of the implementation\n              // of `StrategyCredential#behavior`\n            ).pipe(\n              notifyAllParentsIfNeeded(\n                tNode,\n                injectingViewCdRef,\n                strategy,\n                () => notifyParent\n              )\n            ),\n            notifyInjectingParentIfNeeded(\n              injectingViewCdRef,\n              strategy,\n              isNewTemplate\n            ).pipe(ignoreElements())\n          ).pipe(\n            catchError((e) => {\n              errorHandler.handleError(e);\n              return of(e);\n            })\n          );\n        })\n      );\n    },\n  };\n}\n","import { ɵglobal } from '@angular/core';\n\n/**\n * @description\n *\n * This function returns the zone un-patched API for the a specific Browser API.\n * If no target is passed the window is used instead\n *\n * @param name - The name of the API to check.\n * @param target - The target to get un-patched API from.\n * @return {Function} - The zone un-patched API in question.\n *\n */\nexport function getZoneUnPatchedApi<\n  N extends keyof (Window & typeof globalThis)\n>(name: N): (Window & typeof globalThis)[N];\nexport function getZoneUnPatchedApi<T extends object, N extends keyof T>(\n  name: N,\n  target: T\n): T[N];\nexport function getZoneUnPatchedApi<T extends object, N extends keyof T>(\n  name: N,\n  target: T = ɵglobal\n): T[N] {\n  return target['__zone_symbol__' + name] ?? target[name];\n}\n","export * from './pipe.pipe';\nexport * from './pipe.module';\n","import { noop, UnaryFunction } from 'rxjs';\n\nexport function pipeFromArray<T, R>(\n  fns: Array<UnaryFunction<T, R>>\n): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce(\n      (prev: any, fn: UnaryFunction<T, R>) => fn(prev),\n      input as any\n    );\n  };\n}\n","// tslint:disable\nimport { AsyncScheduler } from '../async/AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {}\n","import {\n  Directive,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { RxStrategyProvider } from '@rx-angular/cdk';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, mergeAll, tap, withLatestFrom } from 'rxjs/operators';\nimport { getZoneUnPatchedApi } from '../../core';\nimport { LetDirective } from '../../let/let.directive';\n\n/**\n *\n * @description\n *\n * This function takes an elem and event and re-applies the listeners from the passed event to the\n * passed element with the zone un-patched version of it.\n *\n * @param elem {HTMLElement} - The elem to re-apply the listeners to.\n * @param event {string} - The name of the event from which to re-apply the listeners.\n *\n * @returns void\n */\nfunction unpatchEventListener(elem: HTMLElement, event: string): void {\n  const eventListeners = (elem as any).eventListeners(event);\n  // Return if no event listeners are present\n  if (!eventListeners) {\n    return;\n  }\n\n  const addEventListener = getZoneUnPatchedApi('addEventListener', elem).bind(\n    elem\n  );\n  eventListeners.forEach((listener) => {\n    // Remove and reapply listeners with patched API\n    elem.removeEventListener(event, listener);\n    // Reapply listeners with un-patched API\n    addEventListener(event, listener);\n  });\n}\n\nfunction intersectionObserver(\n  options?: object\n): {\n  observe: (target: Element) => void;\n  unobserve: (target: Element) => void;\n  entries$: Observable<any>;\n} {\n  const subject = new Subject();\n  const observer = observerSupported()\n    ? new IntersectionObserver((entries) => {\n        entries.forEach((entry) => subject.next(entry));\n      }, options)\n    : null;\n\n  const entries$ = new Observable((subscriber) => {\n    subject.subscribe(subscriber);\n    return () => {\n      if (observer) {\n        observer.disconnect();\n      }\n    };\n  });\n\n  return {\n    entries$,\n    observe: observer.observe,\n    unobserve: observer.unobserve,\n  };\n}\n\nconst observerSupported = () =>\n  typeof window !== 'undefined'\n    ? !!(window as any).IntersectionObserver\n    : false;\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[viewport-prio]',\n})\nexport class ViewportPrioDirective implements OnInit, OnDestroy {\n  // Note that we're picking only the `intersectionRatio` property\n  // since this is the only property that we're intersted in.\n  entriesSubject = new Subject<\n    Pick<IntersectionObserverEntry, 'intersectionRatio'>[]\n  >();\n\n  entries$: Observable<\n    Pick<IntersectionObserverEntry, 'intersectionRatio'>\n  > = this.entriesSubject.pipe(mergeAll());\n\n  _viewportPrio = 'noop';\n  /* @Input('viewport-prio')\n  set viewportPrio(prio) {\n    if (prio) {\n      this._viewportPrio = prio || 'noop';\n    }\n  }*/\n\n  private observer: IntersectionObserver | null = observerSupported()\n    ? new IntersectionObserver(\n        (entries) => {\n          this.entriesSubject.next(entries);\n        },\n        {\n          threshold: 0,\n        }\n      )\n    : null;\n\n  visibilityEvents$ = this.entries$.pipe(\n    map((entry) => {\n      if (entry.intersectionRatio > 0) {\n        return 'visible';\n      } else {\n        return 'invisible';\n      }\n    })\n  );\n\n  constructor(\n    private readonly el: ElementRef<HTMLElement>,\n    private strategyProvider: RxStrategyProvider,\n    @Optional() private letDirective: LetDirective<any>\n  ) {}\n\n  ngOnInit() {\n    const letStrategyName$ = this.letDirective['strategyHandler'].values$.pipe(\n      filter((name) => name !== this._viewportPrio)\n    );\n\n    this.visibilityEvents$\n      .pipe(\n        withLatestFrom(letStrategyName$),\n        map(([visibility, strategyName]) =>\n          visibility === 'visible' ? strategyName : this._viewportPrio\n        )\n      )\n      .subscribe((strategyName) => {\n        this.letDirective.strategy = strategyName as string;\n        // render actual state on viewport enter\n        // @TODO this doesnt catch unsubscribe (cant be cancelled)\n        // @TODO: we need to fetch the current template of the letDirective here\n        // this.strategyProvider.scheduleCD()\n      });\n\n    // If the browser doesn't support the `IntersectionObserver` or we're inside\n    // the Node.js environment, then this will throw an exception that property\n    // `observe` doesn't exist on `null`.\n    if (this.observer !== null) {\n      this.observer.observe(this.el.nativeElement);\n    } else {\n      // If we're inside the Node.js environment then this should be\n      // rendered (e.g. for SEO purposes), and when running this code in browser\n      // it will decide itself to render it or not.\n      this.entriesSubject.next([{ intersectionRatio: 1 }]);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n}\n","export * from './memo';\nexport * from './pipe';\nexport * from './push';\n","import { NgModule } from '@angular/core';\nimport { RxLet } from './rx-let.directive';\n\nconst DECLARATIONS = [\n  RxLet\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [],\n  exports: DECLARATIONS\n})\nexport class RxLetModule {\n}\n","// tslint:disable file-name-casing\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * NOTE: This is a zone un-patched version of rxjs queueScheduler\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from '@cu/perf-utils';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from '@cu/perf-utils';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\nexport const queueScheduler = new QueueScheduler(QueueAction);\n","import { OnlyKeysOfSpecificType } from '../interfaces/only-keys-of-specific-type';\nimport { isDefined, isKeyOf, isObjectGuard } from '../../core';\n\n/**\n * @description\n * Toggles a boolean property in the object.\n * Accepts object of type T and key value of which is boolean.\n * Toggles the property and returns a shallow copy of an object, while not mutating the original one.\n *\n * @example\n *\n * const state = {items: [1,2,3], loading: true};\n *\n * const updatedState = toggle(state, 'loading');\n *\n * // updatedState will be:\n * // {items: [1,2,3], loading: false};\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *    readonly loadingChange$ = new Subject();\n *\n *    constructor(\n *      private state: RxState<ComponentState>\n *    ) {\n *      // Reactive implementation\n *      state.connect(\n *        this.api.loadingChange$,\n *        (state, _) => {\n *            return toggle(state, 'isLoading');\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    toggleLoading(): void {\n *      this.set(toggle(state, 'isLoading'));\n *    }\n * }\n *\n * @returns T\n *\n * @docsPage toggle\n * @docsCategory transformation-helpers\n */\n\nexport function toggle<T extends object>(\n  object: T,\n  key: OnlyKeysOfSpecificType<T, boolean>\n): T {\n  const objectIsObject = isObjectGuard(object);\n  const keyIsValid = isKeyOf<T>(key);\n  const initialObject = objectIsObject ? object : ({} as T);\n\n  if (!objectIsObject) {\n    console.warn(`Toggle: original value (${object}) is not an object.`);\n  }\n\n  if (!keyIsValid) {\n    console.warn(`Toggle: key argument (${key}) is invalid.`);\n  }\n\n  if (keyIsValid && typeof initialObject[key] !== 'boolean') {\n    console.warn(`Toggle: value of the key (${key}) is not a boolean.`);\n  }\n\n  if (!isDefined(object) && !keyIsValid) {\n    return object;\n  }\n\n  if (\n    keyIsValid &&\n    (typeof initialObject[key] === 'boolean' ||\n      !initialObject.hasOwnProperty(key))\n  ) {\n    return { ...initialObject, [key]: !initialObject[key] };\n  }\n\n  return { ...initialObject };\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component, ElementRef\n} from '@angular/core';\nimport { AppConfigService } from '../../app-config.service';\nimport { BehaviorSubject, EMPTY } from 'rxjs';\nimport { RippleRenderer } from '../../shared/ripple/rxa-responsive-meter';\nimport { Platform } from '@angular/cdk/platform';\nimport { filter, switchMap } from 'rxjs/operators';\n import { interval } from '../../rx-angular-pocs';\n\n@Component({\n  selector: 'rxa-config-panel',\n  template: `\n    <div class=\"d-flex align-items-center\">\n      <mat-chip-list>\n        <mat-chip color=\"primary\" [selected]=\"appConfig.hasZone\">\n          <mat-icon matChipAvatar>snooze</mat-icon>\n          {{ appConfig.zoneEnv }}</mat-chip\n        >\n        <mat-chip color=\"primary\" [selected]=\"appConfig.devMode\">\n          <mat-icon matChipAvatar>build_circle</mat-icon>\n          {{ appConfig.devMode ? 'Development' : 'Production' }}</mat-chip\n        >\n      </mat-chip-list>\n      <mat-slide-toggle\n        [checked]=\"rippleOn\"\n        *rxLet=\"rippleOn$; let rippleOn\"\n        (change)=\"toggleCdRipple$.next($event.checked)\"\n        >CD\n      </mat-slide-toggle>\n      <mat-slide-toggle\n        [checked]=\"rippleOn\"\n        *rxLet=\"rippleOn$; let rippleOn\"\n        (change)=\"toggleResponsiveRipple$.next($event.checked)\"\n        >non-blocking\n      </mat-slide-toggle>\n      <button class=\"mx-2\" unpatch mat-button (click)=\"tick()\">\n        <mat-icon>account_tree</mat-icon>\n        ApplicationRef.tick()\n      </button>\n    </div>\n  `,\n  styles: [\n    `\n      rxa-strategy-select {\n        font-size: 14px;\n        margin-top: 18px;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppControlPanelComponent implements AfterViewInit {\n  toggleCdRipple$ =  new BehaviorSubject<boolean>(false);\n  toggleResponsiveRipple$ = new BehaviorSubject<boolean>(false);\n  rippleOn$ = this.appConfig.select('rippleOn');\n  rp: RippleRenderer;\n\n  constructor(\n    public appConfig: AppConfigService,\n    private readonly elementRef: ElementRef,\n    private readonly platform: Platform\n  ) {\n    this.appConfig.connect('rippleOn', this.toggleCdRipple$);\n    this.appConfig.connect('rippleResponsiveOn', this.toggleResponsiveRipple$);\n    this.appConfig.hold(\n      this.appConfig.select('rippleResponsiveOn').pipe(\n        switchMap((isOn) => (isOn ? interval(300) : EMPTY)),\n        filter(() => !!this.rp)\n      ),\n      (v) => {\n        console.log('v', v);\n        this.rp.fadeInRipple(0, 0)\n      }\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.setupRipple();\n  }\n\n  tick() {\n    this.appConfig.appRef_tick();\n  }\n\n  setupRipple() {\n    this.rp = new RippleRenderer(this.elementRef, this.platform);\n  }\n}\n","import { isDefined, isKeyOf, isObjectGuard } from './guards';\n\nexport function safePluck<T extends object, K1 extends keyof T>(\n  stateObject: T,\n  keys: K1 | [K1]\n): T[K1];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1]>(stateObject: T, keys: [K1, K2]): T[K1][K2];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2]>(stateObject: T, keys: [K1, K2, K3]): T[K1][K2][K3];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3]>(stateObject: T, keys: [K1, K2, K3, K4]): T[K1][K2][K3][K4];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]>(stateObject: T, keys: [K1, K2, K3, K4, K5]): T[K1][K2][K3][K4][K5];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  stateObject: T,\n  keys:\n    | [K1]\n    | [K1, K2]\n    | [K1, K2, K3]\n    | [K1, K2, K3, K4]\n    | [K1, K2, K3, K4, K5]\n    | [K1, K2, K3, K4, K5, K6]\n): T[K1][K2][K3][K4][K5][K6];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  stateObject: T,\n  keys:\n    | [K1]\n    | [K1, K2]\n    | [K1, K2, K3]\n    | [K1, K2, K3, K4]\n    | [K1, K2, K3, K4, K5]\n    | [K1, K2, K3, K4, K5, K6]\n):\n  | T[K1]\n  | T[K1][K2]\n  | T[K1][K2][K3]\n  | T[K1][K2][K3][K4]\n  | T[K1][K2][K3][K4][K5]\n  | T[K1][K2][K3][K4][K5][K6]\n  | null\n  | undefined {\n  // needed to match null and undefined conventions of RxAngular core components\n  // safePluck(null) -> return null\n  // safePluck(undefined) -> return undefined\n  // safePluck(obj, ['wrongKey']) -> return undefined\n  // safePluck(obj, ['correctKey']) -> return value of key\n  // safePluck(obj, '') -> return undefined\n  // safePluck(obj, null) -> return undefined\n  if (!isDefined(stateObject)) {\n    return stateObject;\n  }\n  if (!isDefined(keys)) {\n    return undefined;\n  }\n  // sanitize keys -> keep only valid keys (string, number, symbol)\n  const keysArr = (Array.isArray(keys) ? keys : [keys]).filter(k =>\n    isKeyOf<T>(k)\n  );\n  if (\n    keysArr.length === 0 ||\n    !isObjectGuard(stateObject) ||\n    Object.keys(stateObject).length === 0\n  ) {\n    return undefined;\n  }\n  let prop = stateObject[keysArr.shift() as K1];\n\n  keysArr.forEach(key => {\n    if (isObjectGuard(prop) && isKeyOf(key)) {\n      prop = prop[key];\n    }\n  });\n  return prop;\n}\n","export * from './stateful';\n","export * from './directives';\nexport * from './components';\nexport * from './pipes';\n\n","import { CdkTreeModule } from '@angular/cdk/tree';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule } from '@angular/router';\nimport { AppShellHeaderContent, AppShellSidenavContent, AppShellSidenavTitle } from './app-shell-content.directives';\nimport { AppShellComponent } from './app-shell-component/app-shell.component';\nimport { AppShellSideNavItemDirective } from './side-nav/side-nav-item.directive';\nimport { AppShellSideNavComponent } from './side-nav/side-nav.component';\nimport { RxLetModule } from '../rx-angular-pocs/template/directives/let';\nimport { RxIfModule } from '../rx-angular-pocs/template/directives/if';\n\nconst exportedDeclarations = [\n  AppShellHeaderContent,\n  AppShellSidenavContent,\n  AppShellComponent,\n  AppShellSidenavTitle,\n  AppShellSideNavComponent,\n];\n\n@NgModule({\n  declarations: [...exportedDeclarations, AppShellSideNavItemDirective],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    RouterModule,\n    MatSelectModule,\n    CdkTreeModule,\n    RxLetModule,\n    RxIfModule,\n  ],\n  exports: exportedDeclarations,\n})\nexport class AppShellModule {}\n","// tslint:disable\nimport { AsyncAction } from './AsyncAction';\nimport { Action } from '../Action';\nimport { Scheduler } from '../Scheduler';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from 'rxjs';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(\n    SchedulerAction: typeof Action,\n    now: () => number = Scheduler.now\n  ) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(\n    work: (this: SchedulerAction<T>, state?: T) => void,\n    delay: number = 0,\n    state?: T\n  ): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n      // @ts-ignore\n    } while ((action = actions.shift())); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      // @ts-ignore\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","// tslint:disable:no-console\nimport { Observable } from 'rxjs';\n\n/**\n * @NOTICE GENERAL INFORMATION ON MEASUREMENT NOISE\n * Notes on measurement overhead console.time vs. performance.mark cn be found here:\n * https://gist.github.com/paulirish/2fad3834e2617fb199bc12e17058dde4\n */\n\nexport const PREFIX = 'RXA-MEASURE';\nconst POSTFIX_START = 'START';\nconst POSTFIX_END = 'END';\nlet i = 0;\n\nconst rxaDebug = {\n  getEntries,\n  measure\n};\n\n(window as any).rxaDebug = rxaDebug;\n\n\n/**\n * Used performance.mark to generate a TimingMark\n * @param label\n */\nexport function mark(label: string = ++i + ''): void {\n  performance.mark(`${PREFIX}-${label}`);\n}\n\n/**\n * Used performance.mark to generate a postfixes TimingMark for a starting mark\n * @param label\n * @return A function that marks the end of the respective measurement\n */\nexport function start(label: string = ++i + ''): () => () => void {\n  const startLabel = `${label}-${POSTFIX_START}`;\n  const endLabel = `${label}-${POSTFIX_END}`\n  mark(startLabel);\n  return () => {\n    end(label);\n    return () =>  {\n      measure(startLabel, endLabel)\n    }\n  }\n}\n\n/**\n * Used performance.mark to generate a postfixes TimingMark for a ending mark\n * @param label\n * @return A function that measures the start to end timing\n */\nexport function end(label: string = ++i + ''): void {\n  mark(`${label}-${POSTFIX_END}`);\n}\n\n/**\n * Used performance.measure to generate a measurement for 2 TimingMarks\n */\nexport function measure(startLabel: string, endLabel: string, measureName?: string): void {\n  measureName = measureName ? measureName : `${PREFIX}-${startLabel}--${endLabel}`;\n  performance.measure(measureName, `${PREFIX}-${startLabel}`, `${PREFIX}-${endLabel}`);\n  const { name, duration } = performance.getEntriesByName(measureName)[0];\n  console.log(`${name}: ${duration}`);\n}\n\nexport function getEntries(): { }[] {\n  return performance.getEntries().filter(e => e.name.indexOf(PREFIX) === 0);\n}\n\n/**\n * Measures the observable lifecycle based on the generated marks\n *\n * @example\n *\n * @param label\n */\nconst observableMarkerFactory = (label: string) => {\n  const observableMarks = {\n    subscribe: () => label + '$subscribe',\n    next:  (n) => label + '$next_'+n+'',\n    error:  (e) => label + '$error_'+e+'',\n    complete:  () => label + '$complete',\n    unsubscribe:  () => label + '$unsubscribe',\n    teardown:  () => label + '$teardown'\n  };\n\n  const observableMeasures = {\n    total: [label+'total', observableMarks.subscribe(), observableMarks.teardown()]\n  };\n\n  return ({\n    subscribe: () => {\n      mark(observableMarks.subscribe());\n    },\n    next: (v: any) => {\n      mark(observableMarks.next(v));\n    },\n    error: (e: Error) => {\n      mark(observableMarks.error(e));\n    },\n    complete: () => {\n      mark(observableMarks.complete());\n    },\n    unsubscribe: () => {\n      mark(observableMarks.unsubscribe());\n    },\n    teardown: () => {\n      mark(observableMarks.teardown());\n    },\n    eval: () => {\n      console.log('eval');\n      // @ts-ignore\n      measure(...observableMeasures.total);\n      const { name, duration } = performance.getEntriesByName(observableMeasures.total[0])[0];\n      console.log(`${name}: ${duration}`);\n    }\n  });\n}\n\n/**\n * Marks the observable lifecycle with TimingMarks\n *\n * @param label\n */\nexport function measure$(label: string = ++i + '') {\n  const marker = observableMarkerFactory(label);\n  return o$ => new Observable((subscriber) => {\n      marker.subscribe();\n\n      const sub = o$.subscribe(\n        (n) => {\n          marker.next(n);\n          subscriber.next(n);\n        },\n        (e) => {\n          marker.error(e);\n          subscriber.error(e);\n        },\n        () => {\n          marker.complete();\n          subscriber.complete();\n        }\n      );\n\n      return () => {\n        marker.teardown();\n        sub.unsubscribe();\n        marker.eval();\n      }\n\n    }\n  );\n}\n\nexport function promiseMarkerFactory(label: string) {\n  const promiseMarks = {\n    start: () => label+'-Pstart',\n    then: (r) =>  label+'-Pthen',\n    catch: (e) =>  label+'-Pcatch',\n    finally: () => label+'-Pfinally'\n  };\n  const promiseMeasures = {\n    total: [promiseMarks.start(), promiseMarks.finally(), label+'total']\n  };\n\n\n  function _then(r) {\n    mark(promiseMarks.then(r));\n  }\n\n  function _start() {\n    mark(promiseMarks.start());\n  }\n\n  function _catch(e: Error) {\n    mark(promiseMarks.catch(e));\n  }\n\n  function _finally() {\n    mark(promiseMarks.finally());\n  }\n\n  function _eval() {\n    // @ts-ignore\n    measure(...promiseMeasures.total);\n  }\n\n  return {\n    wrap: (p: Promise<any>): Promise<any> => {\n      _start();\n      return p\n        .then(r => {\n          _then(r);\n          return Promise.resolve(r);\n        })\n        .catch(e => {\n          _catch(e);\n          return Promise.reject(e);\n        })\n        .finally(() => {\n          _finally();\n          _eval();\n        });\n    }\n  };\n}\n","import { OnlyKeysOfSpecificType } from '../interfaces/only-keys-of-specific-type';\nimport { isDefined, isKeyOf } from '../../core';\n\n/**\n * @description\n * Converts an array of objects to a dictionary {[key: string]: T}.\n * Accepts array T[] and key of type string, number or symbol as inputs.\n *\n *\n * @example\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}, {id: 3, type: 'parrot'}];\n *\n * const creaturesDictionary = toDictionary(creatures, 'id');\n *\n * // creaturesDictionary will be:\n * // {\n * //  1: {id: 1, type: 'cat'},\n * //  2: {id: 2, type: 'dog'},\n * //  3: {id: 3, type: 'parrot'}\n * // };\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *\n *    readonly convertToDictionary$ = new Subject();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        'creaturesDictionary',\n *        this.convertToDictionary$,\n *        ({ creatures }) => {\n *            return toDictionary(creatures, 'id');\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    convertToDictionary(): void {\n *        this.state.set({ creaturesDictionary: toDictionary(this.state.get().creatures, 'id'});\n *    }\n * }\n *\n * @see {@link OnlyKeysOfSpecificType}\n * @param {OnlyKeysOfSpecificType<T, S>} key\n * @returns { [key: string]: T[] }\n * @docsPage toDictionary\n * @docsCategory transformation-helpers\n */\nexport function toDictionary<T extends object>(\n  source: T[],\n  key:\n    | OnlyKeysOfSpecificType<T, number>\n    | OnlyKeysOfSpecificType<T, string>\n    | OnlyKeysOfSpecificType<T, symbol>\n): { [key: string]: T } {\n  if (!isDefined(source)) {\n    return source;\n  }\n\n  const sourceEmpty = !source.length;\n\n  if (!Array.isArray(source) || sourceEmpty || !isKeyOf<T>(source[0][key])) {\n    if (!sourceEmpty) {\n      console.warn('ToDictionary: unexpected input params.');\n    }\n    return {};\n  }\n\n  return source.reduce(\n    (acc, entity) => ({\n      ...acc,\n      [entity[key] as any]: entity\n    }),\n    {}\n  );\n}\n","import { isDefined, isKeyOf, isObjectGuard } from '../../core';\n\n/**\n * @description\n * Accepts an object of type T and key of type K extends keyof T.\n * Removes property from an object and returns a shallow copy of the updated object without specified property.\n * If property not found returns copy of the original object.\n * Not mutating original object.\n *\n * @example\n *\n * const cat = {id: 1, type: 'cat', name: 'Fluffy'};\n *\n * const anonymusCat = deleteProp(cat, 'name');\n *\n * // anonymusCat will be:\n * // {id: 1, type: 'cat'};\n *\n * @example\n * // Usage with RxState\n *\n * export class ProfileComponent {\n *\n *    readonly removeName$ = new Subject();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        this.removeName$,\n *        (state) => {\n *            return deleteProp(state, 'name');\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    removeName(): void {\n *        this.state.set(remove(this.get(), 'name'));\n *    }\n * }\n *\n * @returns Omit<T, K>\n *\n * @docsPage deleteProp\n * @docsCategory transformation-helpers\n */\nexport function deleteProp<T extends object, K extends keyof T>(\n  object: T,\n  key: K\n): Omit<T, K> {\n  if (!isDefined(object) || !isObjectGuard(object)) {\n    console.warn(`DeleteProp: original value ${object} is not an object.`);\n    return object;\n  }\n\n  if (!isKeyOf<T>(key)) {\n    console.warn(`DeleteProp: provided key is not a string, number or symbol.`);\n    return { ...object };\n  }\n\n  const copy = { ...object };\n  delete copy[key];\n  return copy;\n}\n","import { MonoTypeOperatorFunction, Observable } from 'rxjs';\nimport { filter, mapTo, switchMap } from 'rxjs/operators';\nimport {\n  cancelCallback,\n  scheduleCallback,\n  forceFrameRate,\n  UserBlockingPriority,\n  ImmediatePriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n  PriorityLevel,\n  NoPriority,\n} from './scheduler';\nimport {\n  RxCustomStrategyCredentials,\n  RxConcurrentStrategyNames,\n  RxStrategyCredentials,\n} from '../model';\nimport { coalescingManager } from '../utils/coalescingManager';\n\nforceFrameRate(60);\n\nconst noPriorityStrategy: RxStrategyCredentials = {\n  name: 'noPriority',\n  work: (cdRef) => cdRef.detectChanges(),\n  behavior: (work: any, scope: any) => {\n    return (o$) =>\n      o$.pipe(scheduleOnQueue(work, { priority: NoPriority, scope }));\n  },\n};\n\nconst immediateStrategy: RxStrategyCredentials = {\n  name: 'immediate',\n  work: (cdRef) => cdRef.detectChanges(),\n  behavior: (work: any, scope: any) => {\n    return (o$) =>\n      o$.pipe(\n        scheduleOnQueue(work, {\n          priority: ImmediatePriority,\n          scope,\n        })\n      );\n  },\n};\n\nconst userBlockingStrategy: RxStrategyCredentials = {\n  name: 'userBlocking',\n  work: (cdRef) => cdRef.detectChanges(),\n  behavior: (work: any, scope: any) => {\n    return (o$) =>\n      o$.pipe(\n        scheduleOnQueue(work, {\n          priority: UserBlockingPriority,\n          scope,\n        })\n      );\n  },\n};\n\nconst normalStrategy: RxStrategyCredentials = {\n  name: 'normal',\n  work: (cdRef) => cdRef.detectChanges(),\n  behavior: (work: any, scope: any) => {\n    return (o$) =>\n      o$.pipe(scheduleOnQueue(work, { priority: NormalPriority, scope }));\n  },\n};\n\nconst lowStrategy: RxStrategyCredentials = {\n  name: 'low',\n  work: (cdRef) => cdRef.detectChanges(),\n  behavior: (work: any, scope: any) => {\n    return (o$) =>\n      o$.pipe(scheduleOnQueue(work, { priority: LowPriority, scope }));\n  },\n};\n\nconst idleStrategy: RxStrategyCredentials = {\n  name: 'idle',\n  work: (cdRef) => cdRef.detectChanges(),\n  behavior: (work: any, scope: any) => {\n    return (o$) =>\n      o$.pipe(scheduleOnQueue(work, { priority: IdlePriority, scope }));\n  },\n};\n\nfunction scheduleOnQueue<T>(\n  work: (...args: any[]) => void,\n  options: {\n    priority: PriorityLevel;\n    scope: object;\n    delay?: number;\n  }\n): MonoTypeOperatorFunction<T> {\n  return (o$: Observable<T>): Observable<T> =>\n    o$.pipe(\n      filter(() => !coalescingManager.isCoalescing(options.scope)),\n      switchMap((v) =>\n        new Observable<T>((subscriber) => {\n          coalescingManager.add(options.scope);\n          const task = scheduleCallback(\n            options.priority,\n            () => {\n              work();\n              coalescingManager.remove(options.scope);\n              subscriber.next(v);\n            },\n            { delay: options.delay }\n          );\n          return () => {\n            coalescingManager.remove(options.scope);\n            cancelCallback(task);\n          };\n        }).pipe(mapTo(v))\n      )\n    );\n}\n\nexport type RxConcurrentStrategies = RxCustomStrategyCredentials<RxConcurrentStrategyNames>;\nexport const RX_CONCURRENT_STRATEGIES: RxConcurrentStrategies = {\n  noPriority: noPriorityStrategy,\n  immediate: immediateStrategy,\n  userBlocking: userBlockingStrategy,\n  normal: normalStrategy,\n  low: lowStrategy,\n  idle: idleStrategy,\n};\n","// see https://raw.githubusercontent.com/facebook/react/master/packages/scheduler/src/forks/SchedulerDOM.js\n\nimport { push, pop, peek, ReactSchedulerTask } from './schedulerMinHeap';\nimport { ɵglobal } from '@angular/core';\n\n// TODO: Use symbols?\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from './schedulerPriorities';\n\nimport { enableIsInputPending } from './schedulerFeatureFlags';\n\nlet getCurrentTime;\nconst hasPerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  const localPerformance = performance;\n  getCurrentTime = () => localPerformance.now();\n} else {\n  const localDate = Date;\n  const initialTime = localDate.now();\n  getCurrentTime = () => localDate.now() - initialTime;\n}\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nconst maxSigned31BitInt = 1073741823;\n\n// Times out immediately\nconst IMMEDIATE_PRIORITY_TIMEOUT = -1;\n// Eventually times out\nconst USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nconst NORMAL_PRIORITY_TIMEOUT = 5000;\nconst LOW_PRIORITY_TIMEOUT = 10000;\n// Never times out\nconst IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\n\n// Tasks are stored on a min heap\nconst taskQueue = [];\nconst timerQueue = [];\n\n// Incrementing id counter. Used to maintain insertion order.\nlet taskIdCounter = 1;\n\n// Pausing the scheduler is useful for debugging.\nlet isSchedulerPaused = false;\n\nlet currentTask = null;\nlet currentPriorityLevel = NormalPriority;\n\n// This is set while performing work, to prevent re-entrancy.\nlet isPerformingWork = false;\n\nlet isHostCallbackScheduled = false;\nlet isHostTimeoutScheduled = false;\n\n// Capture local references to native APIs, in case a polyfill overrides them.\nconst setTimeout = ɵglobal.setTimeout;\nconst clearTimeout = ɵglobal.clearTimeout;\n\nif (typeof console !== 'undefined') {\n  // TODO: Scheduler no longer requires these methods to be polyfilled. But\n  // maybe we want to continue warning if they don't exist, to preserve the\n  // option to rely on it in the future?\n  const requestAnimationFrame = ɵglobal.requestAnimationFrame;\n  const cancelAnimationFrame = ɵglobal.cancelAnimationFrame;\n\n  if (typeof requestAnimationFrame !== 'function') {\n    // Using console['error'] to evade Babel and ESLint\n    console['error'](\n      \"This browser doesn't support requestAnimationFrame. \" +\n        'Make sure that you load a ' +\n        'polyfill in older browsers. https://reactjs.org/link/react-polyfills'\n    );\n  }\n  if (typeof cancelAnimationFrame !== 'function') {\n    // Using console['error'] to evade Babel and ESLint\n    console['error'](\n      \"This browser doesn't support cancelAnimationFrame. \" +\n        'Make sure that you load a ' +\n        'polyfill in older browsers. https://reactjs.org/link/react-polyfills'\n    );\n  }\n}\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  let timer = peek(timerQueue);\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      const firstTimer = peek(timerQueue);\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false;\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  const previousPriorityLevel = currentPriorityLevel;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n  while (currentTask !== null && !isSchedulerPaused) {\n    if (\n      currentTask.expirationTime > currentTime &&\n      (!hasTimeRemaining || shouldYieldToHost())\n    ) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n    const callback = currentTask.callback;\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      const continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n    currentTask = peek(taskQueue);\n  }\n  // Return whether there's additional work\n  if (currentTask !== null) {\n    return true;\n  } else {\n    const firstTimer = peek(timerQueue);\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n    return false;\n  }\n}\n\nfunction runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  const previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction next(eventHandler) {\n  let priorityLevel;\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  const previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction wrapCallback(callback) {\n  const parentPriorityLevel = currentPriorityLevel;\n  return () => {\n    // This is a fork of runWithPriority, inlined for performance.\n    const previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      // @ts-ignore\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction scheduleCallback(\n  priorityLevel,\n  callback,\n  options\n): ReactSchedulerTask {\n  const currentTime = getCurrentTime();\n\n  let startTime;\n  if (typeof options === 'object' && options !== null) {\n    const delay = options.delay;\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  let timeout;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  const expirationTime = startTime + timeout;\n\n  const newTask: ReactSchedulerTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      }\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction continueExecution() {\n  isSchedulerPaused = false;\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction cancelCallback(task) {\n  // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n  task.callback = null;\n}\n\nfunction getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nlet isMessageLoopRunning = false;\nlet scheduledHostCallback = null;\nlet taskTimeoutID = -1;\n\n// Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\nlet yieldInterval = 16;\nlet deadline = 0;\n\n// TODO: Make this configurable\n// TODO: Adjust this based on priority?\nconst maxYieldInterval = 300;\nlet needsPaint = false;\n\nfunction shouldYieldToHost() {\n  if (\n    enableIsInputPending &&\n    navigator !== undefined &&\n    (navigator as any).scheduling !== undefined &&\n    (navigator as any).scheduling.isInputPending !== undefined\n  ) {\n    const scheduling = (navigator as any).scheduling;\n    const currentTime = getCurrentTime();\n    if (currentTime >= deadline) {\n      // There's no time left. We may want to yield control of the main\n      // thread, so the browser can perform high priority tasks. The main ones\n      // are painting and user input. If there's a pending paint or a pending\n      // input, then we should yield. But if there's neither, then we can\n      // yield less often while remaining responsive. We'll eventually yield\n      // regardless, since there could be a pending paint that wasn't\n      // accompanied by a call to `requestPaint`, or other main thread tasks\n      // like network events.\n      if (needsPaint || scheduling.isInputPending()) {\n        // There is either a pending paint or a pending input.\n        return true;\n      }\n      // There's no pending input. Only yield if we've reached the max\n      // yield interval.\n      return currentTime >= maxYieldInterval;\n    } else {\n      // There's still time left in the frame.\n      return false;\n    }\n  } else {\n    // `isInputPending` is not available. Since we have no way of knowing if\n    // there's pending input, always yield at the end of the frame.\n    return getCurrentTime() >= deadline;\n  }\n}\n\nfunction requestPaint() {\n  if (\n    enableIsInputPending &&\n    navigator !== undefined &&\n    (navigator as any).scheduling !== undefined &&\n    (navigator as any).scheduling.isInputPending !== undefined\n  ) {\n    needsPaint = true;\n  }\n\n  // Since we yield every frame regardless, `requestPaint` has no effect.\n}\n\nfunction forceFrameRate(fps) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error'](\n      'forceFrameRate takes a positive int between 0 and 125, ' +\n        'forcing frame rates higher than 125 fps is not supported'\n    );\n    return;\n  }\n  if (fps > 0) {\n    yieldInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    yieldInterval = 5;\n  }\n}\n\nconst performWorkUntilDeadline = () => {\n  if (scheduledHostCallback !== null) {\n    const currentTime = getCurrentTime();\n    // Yield after `yieldInterval` ms, regardless of where we are in the vsync\n    // cycle. This means there's always time remaining at the beginning of\n    // the message event.\n    deadline = currentTime + yieldInterval;\n    const hasTimeRemaining = true;\n\n    // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\n    let hasMoreWork = true;\n    try {\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        // tslint:disable-next-line: no-unused-expression\n        port && port.postMessage(null);\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  }\n  // Yielding to the browser will give it a chance to paint, so we can\n  // reset this.\n  needsPaint = false;\n};\n\nconst channel = ɵglobal.MessageChannel && new ɵglobal.MessageChannel();\nconst port = channel && channel.port2;\n\nif (channel) {\n  channel.port1.onmessage = performWorkUntilDeadline;\n}\n\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    // tslint:disable-next-line: no-unused-expression\n    port && port.postMessage(null);\n  }\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = setTimeout(() => {\n    callback(getCurrentTime());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  clearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n}\n\nconst _requestPaint = requestPaint;\n\nexport {\n  ImmediatePriority as ImmediatePriority,\n  UserBlockingPriority as UserBlockingPriority,\n  NormalPriority as NormalPriority,\n  IdlePriority as IdlePriority,\n  LowPriority as LowPriority,\n  runWithPriority,\n  next,\n  scheduleCallback,\n  cancelCallback,\n  wrapCallback,\n  getCurrentPriorityLevel,\n  shouldYieldToHost as shouldYield,\n  _requestPaint as requestPaint,\n  continueExecution,\n  pauseExecution,\n  getFirstCallbackNode,\n  getCurrentTime as now,\n  forceFrameRate as forceFrameRate,\n};\n","import { ComparableData } from '../interfaces/comparable-data-type';\nimport { valuesComparer } from '../_internals/valuesComparer.util';\nimport { isDefined } from '../../core';\n\n/**\n * @description\n * Updates one or multiple items in an array T[].\n * For comparison you can provide key, array of keys or a custom comparison function that should return true if items match.\n * If no comparison is provided, an equality check is used by default.\n * Returns a shallow copy of the array T[] and updated items, does not mutate the original array.\n *\n * @example\n * // Update with comparison function\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}];\n *\n * const newCat = {id: 1, type: 'lion'};\n *\n * const updatedCreatures = update(creatures, newCat, (a, b) => a.id === b.id);\n *\n * // updatedCreatures will be:\n * // [{id: 1, type: 'lion'}, {id: 2, type: 'dog'}];\n *\n * @example\n * // Update with key\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}];\n *\n * const newCat = {id: 1, type: 'lion'};\n *\n * const updatedCreatures = update(creatures, newCat, 'id');\n *\n * // updatedCreatures will be:\n * // [{id: 1, type: 'lion'}, {id: 2, type: 'dog'}];\n *\n * @example\n * // Update with array of keys\n *\n * const creatures = [{id: 1, type: 'cat', name: 'Bella'}, {id: 2, type: 'dog', name: 'Sparky'}];\n *\n * const newCat = {id: 1, type: 'lion', name: 'Bella'};\n *\n * const updatedCreatures = update(creatures, newCat, ['id', 'name']);\n *\n * // updatedCreatures will be:\n * // [{id: 1, type: 'lion', name: 'Bella'}, {id: 2, type: 'dog', name: 'Sparky'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *\n *    readonly updateCreature$ = new Subject<Creature>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.updateCreature$,\n *        ({ creatures }, creatureToUpdate) => {\n *            return update(creatures, creatureToUpdate, (a, b) => a.id === b.id);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    updateCreature(creatureToUpdate: Creature): void {\n *        this.state.set({ creatures: update(this.state.get().creatures, creatureToUpdate, (a, b) => a.id === b.id)});\n *    }\n * }\n *\n * @returns T[]\n *\n * @docsPage update\n * @docsCategory transformation-helpers\n */\nexport function update<T extends object>(\n  source: T[],\n  updates: Partial<T>[] | Partial<T>,\n  compare?: ComparableData<T>\n): T[] {\n  const updatesAsArray = updates\n    ? Array.isArray(updates)\n      ? updates\n      : [updates]\n    : [];\n\n  const sourceDefined = isDefined(source);\n  const sourceIsArray = Array.isArray(source);\n  const invalidInput = !sourceIsArray && !isDefined(updates);\n\n  if (sourceDefined && !sourceIsArray) {\n    console.warn(`Update: Original value (${source}) is not an array.`);\n  }\n\n  if (invalidInput) {\n    return source;\n  }\n\n  if (!sourceDefined || !source.length || !sourceIsArray) {\n    return [...updatesAsArray] as T[];\n  }\n\n  return source.map((existingItem) => {\n    const match = updatesAsArray.find((item) =>\n      valuesComparer(item as T, existingItem, compare)\n    );\n\n    if (match) {\n      return { ...existingItem, ...match };\n    }\n\n    return existingItem;\n  });\n}\n","export * from './async/async';\nexport * from './asap/asap';\nexport * from './queue/queue';\nexport * from './animation-frame/animationFrame';\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef, EmbeddedViewRef, ErrorHandler,\n  Input,\n  IterableDiffers,\n  NgIterable,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  createListTemplateManager,\n  RxListManager,\n  RxListViewComputedContext, RxListViewContext, RxDefaultListViewContext, coerceDistinctWith, RxStrategyProvider\n} from '@rx-angular/cdk';\n\nimport { ReplaySubject, Subject, Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/**\n * @Directive RxFor\n *\n * @description\n *\n * The `*rxFor` structural directive provides a convenient and performant way for rendering\n * templates out of a list of items.\n * Input values can be provided either as `Observable`, `Promise` or `static` values. Just as the `*ngFor` directive, the\n * `*rxFor` is placed on an\n * element, which becomes the parent of the cloned templates.\n *\n * The `RxFor` implements `EmbeddedView Rendering`.\n * Compared to the `NgForOf`, `RxFor` treats each child template as single renderable entity. For each\n * change in the provided list of items it will apply and detect changes to only affected views.\n *\n * Under the hood, it leverages the power of the `StrategyCredential`s which in turn take care of scheduling and\n * prioritizing the change detection for each child template (aka item in the list).\n * This way the rendering behavior of each instance of `RxFor` can be configured individually.\n *\n * `RxStrategyCredentials` and `EmbeddedView Rendering` together build the basis for the `concurrent mode`. Based on\n * the configured strategy every template will get processed in an individual task, which enables chunked and\n * cancellable rendering of the list.\n *\n * As further improvement compared to the basic `*ngFor` implementation, `*rxFor` is able to take care of\n * `ChangeDetection` in situations which include `projected views` (aka `@ContentChild` or `@ViewChild`).\n * Learn more about this in the example section.\n *\n *\n * ### Context Variables\n *\n * The following context variables are available for each template:\n *\n * - $implicit: `T` // the default variable accessed by `let val`\n * - item$: `Observable<T>` // the same value as $implicit, but as `Observable`\n * - index: `number` // current index of the item\n * - count: `number` // count of all items in the list\n * - first: `boolean` // true if the item is the first in the list\n * - last: `boolean` // true if the item is the last in the list\n * - even: `boolean` // true if the item has on even index (index % 2 === 0)\n * - odd: `boolean` // the opposite of even\n * - index$: `Observable<number>` // index as `Observable`\n * - count$: `Observable<number>` // count as `Observable`\n * - first$: `Observable<boolean>` // first as `Observable`\n * - last$: `Observable<boolean>` // last as `Observable`\n * - even$: `Observable<boolean>` // even as `Observable`\n * - odd$: `Observable<boolean>` // odd as `Observable`\n * - select: `(keys: (keyof T)[], distinctByMap) => Observable<Partial<T>>` // returns a selection function which\n * accepts an array of properties to pluck out of every list item. The function returns the selected properties of\n * the current list item as distinct `Observable` key-value-pair. See the example below:\n *\n * This example showcases the `select` view-context function used for deeply nested lists.\n *\n *  ```html\n * <ul>\n *   <li *rxFor=\"let hero of heroes$; trackBy: trackItem; let select = select;\">\n *     <div>\n *       <strong>{{ hero.name }}</strong></br>\n *       Defeated enemies:\n *     </div>\n *      <span *rxFor=\"let enemy of select(['defeatedEnemies']); trackBy: trackEnemy;\">\n *        {{ enemy.name }}\n *      </span>\n *   </li>\n * </ul>\n *  ```\n *\n * ### Input properties\n *\n *  - trackBy: `(index: number, item: T) => any`\n *  - trackBy: `keyof T`\n *  - strategy: `string`\n *  - strategy: `Observable<string>`\n *  - parent: `boolean`;\n *  - renderCallback: `Subject<T[]>`\n *\n *\n * ### Features of `*rxFor`\n *\n * Included features for `*rxFor`:\n * - Push based architecture\n * - Immutable as well as mutable data structures (`trackBy`)\n * - Provide a comprehensive set of context variables for each view\n * - Provide a way to fix `ChangeDetection` issues in `Projected Views` scenarios\n * - automatically runs out of `NgZone`, provide an easy way to opt-in (`patchZone`)\n * - Notify about when rendering of child templates is finished (`renderCallback`)\n * - Reactive as well as imperative values in the template (`ngFor` drop-in replacement)\n * - `ListManager`: special logic for differ mechanism to avoid over-rendering; abstracts away low level logic\n * - render every `EmbeddedView` on its own while applying the configured `RxStrategyCredentials#behavior`\n * - cancel any scheduled work if a remove was triggered for a `trackById`\n * - cancel any update if a new update was triggered for the same `trackById`\n *\n *\n * ### Simple example using `*rxFor` with `Observable` values\n * ```html\n * <ul>\n *   <li *rxFor=\"let item of observableItems$; trackBy: trackItem\">\n *      {{ item }}\n *   </li>\n * </ul>\n * ```\n *\n * ### Simple example using `*rxFor` with simple static values\n * ```html\n * <ul>\n *   <li *rxFor=\"let item of items; trackBy: trackItem\">\n *      {{ item }}\n *   </li>\n * </ul>\n * ```\n *\n *\n * ### Using the context variables\n *\n * ```html\n * <ul>\n *   <li\n *     *rxFor=\"\n *       let item of observableItems$;\n *       let count = count;\n *       let index = index;\n *       let first = first;\n *       let last = last;\n *       let even = even;\n *       let odd = odd;\n *       trackBy: trackItem;\n *     \"\n *   >\n *     <div>{{ count }}</div>\n *     <div>{{ index }}</div>\n *     <div>{{ item }}</div>\n *     <div>{{ first }}</div>\n *     <div>{{ last }}</div>\n *     <div>{{ even }}</div>\n *     <div>{{ odd }}</div>\n *   </li>\n * </ul>\n * ```\n *\n * ### Projected Views (`parent`)\n *\n * Imagine the following situation:\n *\n * ```ts\n * \\@Component({\n *   selector: 'app-list-component',\n *   template: `\n *     <ng-content select=\"app-list-item\"></ng-content>\n *   `\n * })\n * export class AppListComponent {\n *  \\@ContentChildren(AppListItemComponent) appListItems: QueryList<AppListItemComponent>:\n * }\n * ```\n *\n * `AppListComponent` has a `contentOutlet` where it expects `AppListItemComponents` to be inserted into. In this case\n * `AppListComponent`s state is dependent on its `ContentChildren`.\n * This situation leads to the problem that `AppListComponent` needs to get informed about updates of its child views.\n * This is a known issue which has never been solved for `ngFor` (or other structural directives) especially in\n * combination with `CD OnPush` see here: (https://github.com/angular/angular/pull/35428)\n * `RxFor` solves this issue for you by providing a simple input parameter `parent: boolean`.\n * If set to `true`, `*rxFor` will automatically detect every other `Component` where its\n * `EmbeddedView`s were inserted into. Those components will get change detected as well in order to force\n * update their state accordingly.\n *\n * The usage of `AppListComponent` looks like this:\n *\n * ```html\n * <app-list-component>\n *   <app-list-item\n *     *rxFor=\"\n *       let item of observableItems$;\n *       parent: true;\n *     \"\n *   >\n *     <div>{{ item }}</div>\n *   </app-list-item>\n * </app-list-component>\n * ```\n * ### `NgZone` patch\n *\n * By default `*rxFor` will create it's `EmbeddedViews` outside of `NgZone` which drastically speeds up the\n * performance.\n * There are scenarios where you want to opt-in to `NgZone` though. If views are created out of `NgZone`, all\n * `EventListeners` attached to them run out `NgZone` as well.\n *\n * Take a look at the following example:\n *\n * ```ts\n * \\@Component({\n *   selector: 'app-root',\n *   template: `\n *     <!-- clickedHeroName won't get updated due to `NgZone` not noticing the click -->\n *     {{ clickedHeroName }}\n *     <ng-container *rxFor=\"let hero of heroes$; trackBy: trackHero\">\n *       <!-- click runs out of `NgZone` -->\n *       <button (click)=\"heroClicked(hero)\">{{ hero.name }}</button>\n *     </ng-container>\n *   `\n * })\n * export class AppComponent {\n *   clickedHeroName = '';\n *\n *   heroClicked(hero: Hero) {\n *     // this will run out of `NgZone` and thus not update the DOM\n *     this.clickedHeroName = hero.name;\n *   }\n * }\n * ```\n *\n * There are several ways to get around this issue.\n * `*rxFor` can be configured to create views inside of `NgZone` with the `patchZone` flag:\n *\n * ```html\n * <ng-container *rxFor=\"let hero of heroes$; trackBy: trackHero; patchZone: true\">\n *   <!-- click now gets detected by `NgZone` -->\n *   <button (click)=\"heroClicked(hero)\">{{ hero.name }}</button>\n * </ng-container>\n * ```\n *\n * However, `patchZone: true` can in some cases have a negative impact on the performance of the `*rxFor` Directive.\n * Since the creation of the `EmbeddedViews` will most likely happen in batches, every batch will result in one\n * `NgZone` cycle resulting in a possible re-rendering of many other `Components`.\n *\n * Another approach would be to manually detect changes coming from `unpatched` EventListeners or wrapping them in\n * `NgZone`.\n *\n * ```ts\n * export class AppComponent {\n *   clickedHeroName = '';\n *\n *   constructor(\n *     private cdRef: ChangeDetectorRef, // option1\n *     private ngZone: NgZone // option 2\n *   ) {}\n *\n *   heroClicked(hero: Hero) {\n *     // this will run out of `NgZone` and thus not update the DOM\n *     this.clickedHeroName = hero.name;\n *     this.cdRef.markForCheck(); // option 1\n *\n *     // option 2\n *     this.ngZone.run(() => this.clickedHeroName = hero.name);\n *   }\n * }\n * ```\n *\n *\n * @docsCategory RxFor\n * @docsPage RxFor\n * @publicApi\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[rxFor]'\n})\nexport class RxFor<T, U extends NgIterable<T> = NgIterable<T>>\n  implements OnInit, OnDestroy {\n  /** @internal */\n  static ngTemplateGuard_rxFor: 'binding';\n\n  /**\n   * @description\n   * The iterable input\n   *\n   * @example\n   * <ng-container *rxFor=\"heroes$; let hero\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   *\n   * @param potentialObservable\n   */\n  @Input()\n  set rxFor(\n    potentialObservable:\n      | Observable<NgIterable<T>>\n      | NgIterable<T>\n      | null\n      | undefined\n  ) {\n    this.observables$.next(potentialObservable);\n  }\n\n  /** @internal */\n  @Input()\n  set rxForOf(\n    potentialObservable:\n      | Observable<NgIterable<T>>\n      | NgIterable<T>\n      | null\n      | undefined\n  ) {\n    this.observables$.next(potentialObservable);\n  }\n\n  /**\n   * @description\n   * The rendering strategy to be used for each template of the list of items.\n   * Use it to dynamically manage your rendering strategy. You can switch the strategies\n   * imperatively (with a string) or by binding an Observable.\n   * The default strategy is `'normal'`.\n   *\n   * @example\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *     <ng-container *rxFor=\"let hero of heroes$; strategy: strategy\">\n   *       <app-hero [hero]=\"hero\"></app-hero>\n   *     </ng-container>\n   *   `\n   * })\n   * export class AppComponent {\n   *   strategy = 'low';\n   * }\n   *\n   * // OR\n   *\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *     <ng-container *rxFor=\"let hero of heroes$; strategy: strategy$\">\n   *       <app-hero [hero]=\"hero\"></app-hero>\n   *     </ng-container>\n   *   `\n   * })\n   * export class AppComponent {\n   *   strategy$ = new BehaviorSubject('immediate');\n   * }\n   *\n   * @param strategyName\n   * @see {@link strategies}\n   */\n  @Input('rxForStrategy')\n  set strategy(strategyName: string | Observable<string> | undefined) {\n    this.strategyInput$.next(strategyName);\n  }\n\n  /**\n   * @description\n   *  If `parent` is set to `true` (default to `false`), `*rxFor` will automatically detect every other `Component` where its\n   * `EmbeddedView`s were inserted into. Those components will get change detected as well in order to force\n   * update their state accordingly. In the given example, `AppListComponent` will get notified about which insert\n   * or remove any `AppListItemComponent`.\n   *\n   * @example\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *    <app-list-component>\n   *      <app-list-item\n   *        *rxFor=\"\n   *          let item of items$;\n   *          trackBy: trackItem;\n   *          parent: true;\n   *        \"\n   *      >\n   *        <div>{{ item.name }}</div>\n   *      </app-list-item>\n   *    </app-list-component>\n   *   `\n   * })\n   * export class AppComponent {\n   *   items$ = itemService.getItems();\n   * }\n   *\n   * @param renderParent\n   */\n    // tslint:disable-next-line:no-input-rename\n  @Input('rxForParent') renderParent = true;\n\n  /**\n   * @description\n   * A flag to control whether *rxFor templates are created within `NgZone` or not.\n   * By default `*rxFor` will create it's `EmbeddedViews` outside of `NgZone` which drastically speeds up the\n   * performance.\n   * If `patchZone` is set to `true` (defaults to `false`), `*rxFor` will create its EmbeddedViews inside of `NgZone`.\n   *\n   * @example\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *    <app-list-component>\n   *      <app-list-item\n   *        *rxFor=\"\n   *          let item of items$;\n   *          trackBy: trackItem;\n   *          patchZone: true;\n   *        \"\n   *      >\n   *        <div>{{ item.name }}</div>\n   *      </app-list-item>\n   *    </app-list-component>\n   *   `\n   * })\n   * export class AppComponent {\n   *   items$ = itemService.getItems();\n   * }\n   *\n   * @param patchZone\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('rxForPatchZone') patchZone = this.strategyProvider.config.patchZone;\n\n  /**\n   * @description\n   * A function or key that defines how to track changes for items in the iterable.\n   *\n   * When items are added, moved, or removed in the iterable,\n   * the directive must re-render the appropriate DOM nodes.\n   * To minimize churn in the DOM, only nodes that have changed\n   * are re-rendered.\n   *\n   * By default, rxFor assumes that the object instance identifies the node in the iterable (equality check `===`).\n   * When a function or key is supplied, rxFor uses the result to identify the item node.\n   *\n   * @example\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *    <app-list-component>\n   *      <app-list-item\n   *        *rxFor=\"\n   *          let item of items$;\n   *          trackBy: 'id';\n   *        \"\n   *      >\n   *        <div>{{ item.name }}</div>\n   *      </app-list-item>\n   *    </app-list-component>\n   *   `\n   * })\n   * export class AppComponent {\n   *   items$ = itemService.getItems();\n   * }\n   *\n   * // OR\n   *\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *    <app-list-component>\n   *      <app-list-item\n   *        *rxFor=\"\n   *          let item of items$;\n   *          trackBy: trackItem;\n   *        \"\n   *      >\n   *        <div>{{ item.name }}</div>\n   *      </app-list-item>\n   *    </app-list-component>\n   *   `\n   * })\n   * export class AppComponent {\n   *   items$ = itemService.getItems();\n   *   trackItem = (idx, item) => item.id;\n   * }\n   *\n   * @param trackByFnOrKey\n   */\n  @Input('rxForTrackBy')\n  set trackBy(trackByFnOrKey: string | ((idx: number, i: T) => any)) {\n    this._trackBy =\n      typeof trackByFnOrKey !== 'function'\n        ? (i, a) => a[trackByFnOrKey]\n        : trackByFnOrKey;\n  }\n\n  /**\n   * @internal\n   * A function that defines how to track `updates` of items.\n   * In addition to track when items are added, moved, or removed you can provide a function that determines if any\n   * updates happened to an item. Use this is if you want to have even more control about what changes lead to\n   * re-renderings of the DOM.\n   *\n   * By default, rxFor identifies if an update happens by doing an (equality check `===`).\n   * When a function supplied, rxFor uses the result to identify the item node.\n   *\n   * @internal\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *    <app-list-component>\n   *      <app-list-item\n   *        *rxFor=\"\n   *          let item of items$;\n   *          trackBy: trackItem;\n   *          distinctBy: distinctItem;\n   *        \"\n   *      >\n   *        <div>{{ item.name }}</div>\n   *      </app-list-item>\n   *    </app-list-component>\n   *   `\n   * })\n   * export class AppComponent {\n   *   items$ = itemService.getItems();\n   *   trackItem = (idx, item) => item.id;\n   *   // only changes to the name lead to a re-rendering of a child template\n   *   distinctItem = (itemA, itemB) => itemA.name === itemB.name;\n   * }\n   *\n   * @param distinctBy\n   */\n  /*@Input('rxForDistinctBy')*/\n  set distinctBy(distinctBy: (a: T, b: T) => boolean) {\n    this._distinctBy = distinctBy;\n  }\n\n  /**\n   * @description\n   * A `Subject` which emits whenever *rxFor finished rendering a set changes to the view.\n   * This enables developers to perform actions when a list has finished rendering.\n   * The `renderCallback` is useful in situations where you rely on specific DOM properties like the `height` a\n   * table after all items got rendered.\n   * It is also possible to use the renderCallback in order to determine if a view should be visible or not. This\n   * way developers can hide a list as long as it has not finished rendering.\n   *\n   * The result of the `renderCallback` will contain the currently rendered set of items in the iterable.\n   *\n   * @example\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *    <app-list-component>\n   *      <app-list-item\n   *        *rxFor=\"\n   *          let item of items$;\n   *          trackBy: trackItem;\n   *          renderCallback: itemsRendered;\n   *        \"\n   *      >\n   *        <div>{{ item.name }}</div>\n   *      </app-list-item>\n   *    </app-list-component>\n   *   `\n   * })\n   * export class AppComponent {\n   *   items$: Observable<Item[]> = itemService.getItems();\n   *   trackItem = (idx, item) => item.id;\n   *   // only changes to the name lead to a re-rendering of a child template\n   *   distinctItem = (itemA, itemB) => itemA.name === itemB.name;\n   *   // this emits whenever rxFor finished rendering changes\n   *   itemsRendered = new Subject<Item[]>();\n   * }\n   *\n   * @param renderCallback\n   */\n  @Input('rxForRenderCallback') set renderCallback(renderCallback: Subject<U>) {\n    this._renderCallback = renderCallback;\n  }\n\n  /** @internal */\n  constructor(\n    private iterableDiffers: IterableDiffers,\n    private cdRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private eRef: ElementRef,\n    private readonly templateRef: TemplateRef<RxDefaultListViewContext<T>>,\n    private readonly viewContainerRef: ViewContainerRef,\n    private strategyProvider: RxStrategyProvider,\n    private errorHandler: ErrorHandler\n  ) {}\n\n  /** @internal */\n  private strategyInput$ = new ReplaySubject<string | Observable<string>>(1);\n\n  /** @internal */\n  private observables$ = new ReplaySubject<\n    Observable<NgIterable<T>> | NgIterable<T>\n  >(1);\n\n  /** @internal */\n  private _renderCallback: Subject<any>;\n\n  /** @internal */\n  private readonly values$ = this.observables$.pipe(coerceDistinctWith());\n\n  /** @internal */\n  private readonly strategy$ = this.strategyInput$.pipe(coerceDistinctWith());\n\n  /** @internal */\n  private listManager: RxListManager<T>;\n\n  /** @internal */\n  private _subscription = Subscription.EMPTY;\n\n  /** @internal */\n  static ngTemplateContextGuard<U>(\n    dir: RxFor<U>,\n    ctx: unknown | null | undefined\n  ): ctx is RxDefaultListViewContext<U> {\n    return true;\n  }\n\n  /** @internal */\n  _trackBy: TrackByFunction<T> = (i, a) => a;\n  /** @internal */\n  _distinctBy = (a: T, b: T) => a === b;\n\n  /** @internal */\n  ngOnInit() {\n    this.listManager = createListTemplateManager<T, RxDefaultListViewContext<T>>({\n      iterableDiffers: this.iterableDiffers,\n      renderSettings: {\n        cdRef: this.cdRef,\n        eRef: this.eRef,\n        strategies: this.strategyProvider.strategies as any,  // TODO: move strategyProvider\n        defaultStrategyName: this.strategyProvider.primaryStrategy,\n        parent: coerceBooleanProperty(this.renderParent),\n        patchZone: this.patchZone ? this.ngZone : false,\n        errorHandler: this.errorHandler\n      },\n      templateSettings: {\n        viewContainerRef: this.viewContainerRef,\n        templateRef: this.templateRef,\n        createViewContext: this.createViewContext,\n        updateViewContext: this.updateViewContext,\n      },\n      trackBy: this._trackBy\n    });\n    this.listManager.nextStrategy(this.strategy$);\n    this._subscription = this.listManager.render(this.values$).subscribe(v => this._renderCallback?.next(v));\n  }\n  /** @internal */\n  createViewContext(item: T, computedContext: RxListViewComputedContext): RxDefaultListViewContext<T> {\n    return new RxDefaultListViewContext<T>(item, computedContext);\n  }\n\n  /** @internal */\n  updateViewContext(\n    item: T,\n    view: EmbeddedViewRef<RxListViewContext<T>>,\n    computedContext: RxListViewComputedContext\n  ): void {\n    view.context.updateContext(computedContext);\n    view.context.$implicit = item;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n    this.viewContainerRef.clear();\n  }\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'rxa-home',\n  template: `\n    <h1>Welcome to RxAngular Demos!</h1>\n    <h3>Explore various sections that will guide you through features of RxAngular.</h3>\n\n    <ul>\n      <li><h4>🏁 Fundamentals</h4></li>\n      Demos presenting fundamental rules and functionalities existing in Angular that are good to know before you start your journey with RxAngular.\n\n      <li><h4>🧰 Template</h4></li>\n      Playground for different functionalities of the <code>@rx-angular/template</code> package.\n\n      <li><h4>📋 Tutorials</h4></li>\n      Tutorials for features existing in the <code>@rx-angular</code> packages.\n\n      <li><h4>🧮 Integrations</h4></li>\n      <code>@rx-angular/state</code> integrated with different libraries and patterns.\n\n      <li><h4>🔬 Experiments</h4></li>\n      Experiments with features, that are still under development. ⚠️Warning! ⚠️Unstable or broken features may lay ahead!\n    </ul>\n  `,\n  styles: [`\n    code {\n      background: black;\n    }\n  `]\n})\nexport class HomeComponent {}\n","export { pipeFromArray } from './pipe-from-array';\nexport {\n  isIterableGuard,\n  isOperateFnArrayGuard,\n  isPromiseGuard,\n  isStringArrayGuard,\n  isKeyOf,\n  isObjectGuard,\n  isDefined\n} from './guards';\nexport { safePluck } from './safe-pluck';\n","export * from './fromEvent';\n","export const FUNDAMENTALS_MENU = [\n  {\n    link: 'nested-vs-injected',\n    label: 'Nested vs Projected'\n  },\n  {\n    link: 'projected-views',\n    label: 'Projected Views'\n  },\n  {\n    link: 'passing-values',\n    label: 'Passing Values'\n  },\n  {\n    link: 'zone-patched-apis',\n    label: 'Zone Patched APIs'\n  },\n  {\n    label: 'Scheduling',\n    link: 'scheduling'\n  },\n  {\n    label: 'Coalescing',\n    link: 'coalescing'\n  },\n  {\n    label: 'Global Order',\n    link: 'global-order'\n  },\n  {\n    link: 'view-vs-embedded-view',\n    label: 'Component vs EmbeddedView',\n  },\n];\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  Injectable,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  AfterContentChecked$,\n  AfterContentInit$,\n  AfterViewChecked$,\n  AfterViewInit$,\n  HookProps,\n  OnChanges$,\n  OnDestroy$,\n  OnInit$,\n} from './model';\nimport { toHook } from './utils';\n\n@Injectable()\nexport abstract class Hooks\n  implements\n    OnChanges,\n    OnChanges$,\n    OnInit,\n    OnInit$,\n    AfterViewInit,\n    AfterViewInit$,\n    AfterViewChecked,\n    AfterViewChecked$,\n    AfterContentInit,\n    AfterContentInit$,\n    AfterContentChecked,\n    AfterContentChecked$,\n    OnDestroy,\n    OnDestroy$ {\n  readonly _hooks$ = new Subject<Partial<HookProps>>();\n\n  onChanges$: Observable<SimpleChanges> = this._hooks$.pipe(toHook('changes'));\n  onInit$: Observable<boolean> = this._hooks$.pipe(toHook('init'));\n  onAfterViewInit$: Observable<boolean> = this._hooks$.pipe(\n    toHook('afterViewInit')\n  );\n  onAfterViewChecked$: Observable<boolean> = this._hooks$.pipe(\n    toHook('afterViewChecked')\n  );\n  onAfterContentInit$: Observable<boolean> = this._hooks$.pipe(\n    toHook('afterContentInit')\n  );\n  onAfterContentChecked$: Observable<boolean> = this._hooks$.pipe(\n    toHook('afterContentChecked')\n  );\n  onDestroy$: Observable<boolean> = this._hooks$.pipe(toHook('destroy'));\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._hooks$.next({ changes });\n  }\n\n  ngOnInit(): void {\n    this._hooks$.next({ init: true });\n  }\n\n  ngAfterViewInit(): void {\n    this._hooks$.next({ afterViewInit: true });\n  }\n\n  ngAfterViewChecked(): void {\n    this._hooks$.next({ afterViewChecked: true });\n  }\n\n  ngAfterContentInit(): void {\n    this._hooks$.next({ afterContentInit: true });\n  }\n\n  ngAfterContentChecked(): void {\n    this._hooks$.next({ afterContentChecked: true });\n  }\n\n  ngOnDestroy(): void {\n    this._hooks$.next({ destroy: true });\n    this._hooks$.complete();\n  }\n}\n","import { ɵmarkDirty as markDirty } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport {\n  RxCustomStrategyCredentials,\n  RxNativeStrategyNames,\n  RxStrategyCredentials,\n} from '../model';\nimport { coalesceWith } from '../utils/coalesceWith';\nimport {\n  cancelAnimationFrame,\n  requestAnimationFrame,\n} from '../zone-less/browser/browser';\n\nconst animationFrameTick = () =>\n  new Observable<number>((subscriber) => {\n    const id = requestAnimationFrame(() => {\n      subscriber.next(0);\n      subscriber.complete();\n    });\n    return () => {\n      cancelAnimationFrame(id);\n    };\n  });\n\nconst localCredentials: RxStrategyCredentials = {\n  name: 'local',\n  work: (cdRef, _, notification) => {\n    cdRef.detectChanges();\n  },\n  behavior: (work: any, scope) => (o$) =>\n    o$.pipe(\n      coalesceWith(animationFrameTick(), scope),\n      tap(() => work())\n    ),\n};\n\nconst globalCredentials: RxStrategyCredentials = {\n  name: 'global',\n  work: (_, context) => markDirty(context),\n  behavior: (work: any) => (o$) => o$.pipe(tap(() => work())),\n};\n\nconst noopCredentials: RxStrategyCredentials = {\n  name: 'noop',\n  work: () => void 0,\n  behavior: () => (o$) => o$,\n};\n\nconst nativeCredentials: RxStrategyCredentials = {\n  name: 'native',\n  work: (cdRef) => cdRef.markForCheck(),\n  behavior: (work: any) => (o$) => o$.pipe(tap(() => work())),\n};\n\nexport type RxNativeStrategies = RxCustomStrategyCredentials<RxNativeStrategyNames>;\nexport const RX_NATIVE_STRATEGIES: RxNativeStrategies = {\n  global: globalCredentials,\n  native: nativeCredentials,\n  noop: noopCredentials,\n  local: localCredentials,\n};\n","type KeyOf<O> = keyof O & string & symbol & number;\n\n/*\n * createPropertiesWeakMap\n *\n * @param getDefaults: (o: O) => P\n * Example:\n *\n * export interface Properties {\n *   isCoalescing: boolean;\n * }\n *\n * const obj: object = {\n *   foo: 'bar',\n *   isCoalescing: 'weakMap version'\n * };\n *\n * const getDefaults = (ctx: object): Properties => ({isCoalescing: false});\n * const propsMap = createPropertiesWeakMap<object, Properties>(getDefaults);\n *\n * console.log('obj before:', obj);\n * // {foo: \"bar\", isCoalescing: \"weakMap version\"}\n * console.log('props before:', propsMap.getProps(obj));\n * // {isCoalescing: \"weakMap version\"}\n *\n * propsMap.setProps(obj, {isCoalescing: true});\n * console.log('obj after:', obj);\n * // {foo: \"bar\", isCoalescing: \"weakMap version\"}\n * console.log('props after:', propsMap.getProps(obj));\n * // {isCoalescing: \"true\"}\n * */\nexport function createPropertiesWeakMap<O extends object, P extends object>(\n  getDefaults: (o: O) => P\n) {\n  type K = KeyOf<P>;\n  const propertyMap = new WeakMap<O, P>();\n\n  return {\n    getProps: getProperties,\n    setProps: setProperties\n  };\n\n  function getProperties(ctx: O): P {\n    const defaults = getDefaults(ctx);\n    const propertiesPresent: P | undefined = propertyMap.get(ctx);\n    let properties: P;\n\n    if (propertiesPresent !== undefined) {\n      properties = propertiesPresent;\n    } else {\n      properties = {} as P;\n\n      (Object.entries(defaults) as [K, P[K]][]).forEach(\n        ([prop, value]): void => {\n          properties[prop] = hasKey(ctx, prop) ? ctx[prop] : value;\n        }\n      );\n\n      propertyMap.set(ctx, properties);\n    }\n    return properties;\n  }\n\n  function setProperties(ctx: O, props: Partial<P>): P {\n    const properties: P = getProperties(ctx);\n    (Object.entries(props) as [K, P[K]][]).forEach(([prop, value]) => {\n      properties[prop] = value;\n    });\n    propertyMap.set(ctx, properties);\n    return properties;\n  }\n\n  function hasKey(ctx: O, property: K): ctx is K {\n    return ctx[property] != null;\n  }\n}\n","import {\n  EmbeddedViewRef,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  TemplateRef,\n  TrackByFunction,\n} from '@angular/core';\nimport { combineLatest, merge, Observable, of, OperatorFunction } from 'rxjs';\nimport {\n  catchError,\n  ignoreElements,\n  map,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { RxStrategyCredentials } from '../model';\nimport { onStrategy } from '../utils/onStrategy';\nimport { strategyHandling } from '../utils/strategy-handling';\nimport {\n  RxListViewComputedContext,\n  RxListViewContext,\n} from './list-view-context';\nimport { getTemplateHandler } from './list-view-handler';\nimport {\n  RxListTemplateChange,\n  RxListTemplateChangeType,\n  RxRenderSettings,\n  RxTemplateSettings,\n} from './model';\nimport { createErrorHandler, toRenderError } from './render-error';\nimport {\n  getTNode,\n  notifyAllParentsIfNeeded,\n  notifyInjectingParentIfNeeded,\n  TNode,\n} from './utils';\n\nexport interface RxListManager<T> {\n  nextStrategy: (config: string | Observable<string>) => void;\n\n  render(changes$: Observable<NgIterable<T>>): Observable<void>;\n}\n\nexport function createListTemplateManager<\n  T,\n  C extends RxListViewContext<T>\n>(config: {\n  renderSettings: RxRenderSettings<T, C>;\n  templateSettings: Omit<\n    RxTemplateSettings<T, C, RxListViewComputedContext>,\n    'patchZone'\n  > & {\n    templateRef: TemplateRef<C>;\n  };\n  //\n  trackBy: TrackByFunction<T>;\n  iterableDiffers: IterableDiffers;\n}): RxListManager<T> {\n  const { templateSettings, renderSettings, trackBy, iterableDiffers } = config;\n  const {\n    defaultStrategyName,\n    strategies,\n    cdRef: injectingViewCdRef,\n    patchZone,\n    parent,\n    eRef,\n  } = renderSettings;\n  const errorHandler = createErrorHandler(renderSettings.errorHandler);\n  const strategyHandling$ = strategyHandling(defaultStrategyName, strategies);\n  const differ: IterableDiffer<T> = iterableDiffers.find([]).create(trackBy);\n  //               type,  context\n  const tNode: TNode = parent\n    ? getTNode(injectingViewCdRef, eRef.nativeElement)\n    : false;\n  /* TODO (regarding createView): this is currently not in use. for the list-manager this would mean to provide\n   functions for not only create. developers than should have to provide create, move, remove,... the whole thing.\n   i don't know if this is the right decision for a first RC */\n  const listViewHandler = getTemplateHandler({\n    ...templateSettings,\n    initialTemplateRef: templateSettings.templateRef,\n    patchZone,\n  });\n  const viewContainerRef = templateSettings.viewContainerRef;\n\n  let notifyParent = false;\n  let changesArr: RxListTemplateChange[];\n  let partiallyFinished = false;\n\n  return {\n    nextStrategy(nextConfig: Observable<string>): void {\n      strategyHandling$.next(nextConfig);\n    },\n    render(values$: Observable<NgIterable<T>>): Observable<any> {\n      return values$.pipe(render());\n    },\n  };\n\n  function render(): OperatorFunction<NgIterable<T>, any> {\n    let count = 0;\n    return (o$: Observable<NgIterable<T>>): Observable<any> =>\n      o$.pipe(\n        // map iterable to latest diff\n        map((iterable) => {\n          if (partiallyFinished) {\n            const currentIterable = [];\n            for (let i = 0, ilen = viewContainerRef.length; i < ilen; i++) {\n              const viewRef = <EmbeddedViewRef<C>>viewContainerRef.get(i);\n              currentIterable[i] = viewRef.context.$implicit;\n            }\n            differ.diff(currentIterable);\n          }\n          return {\n            changes: differ.diff(iterable),\n            items: iterable != null && Array.isArray(iterable) ? iterable : [],\n          };\n        }),\n        withLatestFrom(strategyHandling$.strategy$),\n        // Cancel old renders\n        switchMap(([{ changes, items }, strategy]) => {\n          if (!changes) {\n            return of([]);\n          }\n          const listChanges = listViewHandler.getListChanges(changes, items);\n          changesArr = listChanges[0];\n          const insertedOrRemoved = listChanges[1];\n          const applyChanges$ = getObservablesFromChangesArray(\n            changesArr,\n            strategy,\n            count\n          );\n          partiallyFinished = true;\n          // @TODO we need to know if we need to notifyParent on move aswell\n          notifyParent = insertedOrRemoved && parent;\n          count = items.length;\n          return merge(\n            combineLatest(\n              // emit after all changes are rendered\n              applyChanges$.length > 0 ? applyChanges$ : [of(items)]\n            ).pipe(\n              tap(() => (partiallyFinished = false)),\n              // somehow this makes the strategySelect work\n              notifyAllParentsIfNeeded(\n                tNode,\n                injectingViewCdRef,\n                strategy,\n                () => notifyParent\n              )\n            ),\n            // emit injectingParent if needed\n            notifyInjectingParentIfNeeded(\n              injectingViewCdRef,\n              strategy,\n              insertedOrRemoved\n            ).pipe(ignoreElements())\n          ).pipe(\n            map(() => items),\n            catchError((e) => {\n              partiallyFinished = false;\n              errorHandler.handleError(e);\n              return of(e);\n            })\n          );\n        })\n      );\n  }\n\n  /**\n   * @internal\n   *\n   * returns an array of streams which process all of the view updates needed to reflect the latest diff to the\n   * viewContainer.\n   * I\n   *\n   * @param changes\n   * @param strategy\n   * @param count\n   */\n  function getObservablesFromChangesArray(\n    changes: RxListTemplateChange<T>[],\n    strategy: RxStrategyCredentials,\n    count: number\n  ): Observable<null | false | RxListTemplateChange<T>[]>[] {\n    return changes.length > 0\n      ? changes.map((change) => {\n          return onStrategy(\n            change[1],\n            strategy,\n            () => {\n              const type = change[0];\n              const payload = change[1];\n              switch (type) {\n                case RxListTemplateChangeType.insert:\n                  listViewHandler.insertView(payload[0], payload[1], count);\n                  break;\n                case RxListTemplateChangeType.move:\n                  listViewHandler.moveView(\n                    payload[2],\n                    payload[0],\n                    payload[1],\n                    count\n                  );\n                  break;\n                case RxListTemplateChangeType.remove:\n                  listViewHandler.removeView(payload[1]);\n                  break;\n                case RxListTemplateChangeType.update:\n                  listViewHandler.updateView(payload[0], payload[1], count);\n                  break;\n                case RxListTemplateChangeType.context:\n                  listViewHandler.updateUnchangedContext(payload[1], count);\n                  break;\n              }\n            },\n            {},\n            (e, v) => toRenderError(e, v[0])\n          );\n        })\n      : [of(null)];\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { EMPTY, isObservable, Observable, OperatorFunction, Subscribable, Subscription, Unsubscribable } from 'rxjs';\nimport { catchError, map, pluck, tap } from 'rxjs/operators';\nimport { isKeyOf, isOperateFnArrayGuard, isStringArrayGuard, pipeFromArray, safePluck } from './core';\nimport { AccumulationFn, createAccumulationObservable, createSideEffectObservable } from './cdk';\nimport { stateful } from './rxjs/operators';\n\ntype ProjectStateFn<T> = (oldState: T) => Partial<T>;\ntype ProjectValueFn<T, K extends keyof T> = (oldState: T) => T[K];\n\ntype ProjectStateReducer<T, V> = (oldState: T, value: V) => Partial<T>;\n\ntype ProjectValueReducer<T, K extends keyof T, V> = (\n  oldState: T,\n  value: V\n) => T[K];\n\n/**\n * @description\n * RxState is a light-weight reactive state management service for managing local state in angular.\n *\n * @example\n * Component({\n *   selector: 'app-stateful',\n *   template: `<div>{{ state$ | async | json }}</div>`,\n *   providers: [RxState]\n * })\n * export class StatefulComponent {\n *   readonly state$ = this.state.select();\n *\n *   constructor(private state: RxState<{ foo: string }>) {}\n * }\n *\n * @docsCategory RxState\n * @docsPage RxState\n */\n@Injectable()\nexport class RxState<T extends object> implements OnDestroy, Subscribable<T> {\n  private subscription = new Subscription();\n\n  private accumulator = createAccumulationObservable<T>();\n  private effectObservable = createSideEffectObservable();\n\n  /**\n   * @description\n   * The unmodified state exposed as `Observable<T>`. It is not shared, distinct or gets replayed.\n   * Use the `$` property if you want to read the state without having applied {@link stateful} to it.\n   */\n  readonly $: Observable<T> = this.accumulator.signal$;\n\n  /**\n   * @internal\n   */\n  constructor() {\n    this.subscription.add(this.subscribe());\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * @description\n   *\n   * Allows to customize state accumulation function.\n   * This can be helpful to implement deep updates and tackle other immutability problems in a custom way.\n   * @example\n   *\n   * ```typescript\n   * const myAccumulator = (state: MyState, slice: Partial<MyState>) => deepCopy(state, slice);\n   *\n   * this.state.setAccumulator(myAccumulator);\n   * ```\n   */\n  setAccumulator(accumulatorFn: AccumulationFn): void {\n    this.accumulator.nextAccumulator(accumulatorFn);\n  }\n\n  /**\n   * @description\n   * Read from the state in imperative manner. Returns the state object in its current state.\n   *\n   * @example\n   * const { disabled } = state.get();\n   * if (!disabled) {\n   *   doStuff();\n   * }\n   *\n   * @return T\n   */\n  get(): T;\n\n  /**\n   * @description\n   * Read from the state in imperative manner by providing keys as parameters.\n   * Returns the part of state object.\n   *\n   * @example\n   * // Access a single property\n   *\n   * const bar = state.get('bar');\n   *\n   * // Access a nested property\n   *\n   * const foo = state.get('bar', 'foo');\n   *\n   * @return T | T[K1] | T[K1][K2]\n   */\n\n  get<K1 extends keyof T>(k1: K1): T[K1];\n  /** @internal **/\n  get<K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): T[K1][K2];\n  /** @internal **/\n  get<K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n    k1: K1,\n    k2: K2,\n    k3: K3\n  ): T[K1][K2][K3];\n  /** @internal **/\n  get<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): T[K1][K2][K3][K4];\n  /** @internal **/\n  get<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): T[K1][K2][K3][K4][K5];\n  /** @internal **/\n  get<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): T[K1][K2][K3][K4][K5][K6];\n  /** @internal **/\n  get<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]>(\n    ...keys:\n      | [K1]\n      | [K1, K2]\n      | [K1, K2, K3]\n      | [K1, K2, K3, K4]\n      | [K1, K2, K3, K4, K5]\n      | [K1, K2, K3, K4, K5, K6]\n  ):\n    | T\n    | T[K1]\n    | T[K1][K2]\n    | T[K1][K2][K3]\n    | T[K1][K2][K3][K4]\n    | T[K1][K2][K3][K4][K5]\n    | T[K1][K2][K3][K4][K5][K6] {\n    const hasStateAnyKeys = Object.keys(this.accumulator.state).length > 0;\n    if (!!keys && keys.length) {\n      return safePluck(this.accumulator.state, keys);\n    } else {\n      return hasStateAnyKeys ?\n             this.accumulator.state :\n              undefined as unknown as T;\n    }\n  }\n\n  /**\n   * @description\n   * Manipulate one or many properties of the state by providing a `Partial<T>` state or a `ProjectionFunction<T>`.\n   *\n   * @example\n   * // Update one or many properties of the state by providing a `Partial<T>`\n   *\n   * const partialState = {\n   *   foo: 'bar',\n   *   bar: 5\n   * };\n   * state.set(partialState);\n   *\n   * // Update one or many properties of the state by providing a `ProjectionFunction<T>`\n   *\n   * const reduceFn = oldState => ({\n   *   bar: oldState.bar + 5\n   * });\n   * state.set(reduceFn);\n   *\n   * @param {Partial<T>|ProjectStateFn<T>} stateOrProjectState\n   * @return void\n   */\n  set(stateOrProjectState: Partial<T> | ProjectStateFn<T>): void;\n\n  /**\n   * @description\n   * Manipulate a single property of the state by the property name and a `ProjectionFunction<T>`.\n   *\n   * @example\n   * const reduceFn = oldState => oldState.bar + 5;\n   * state.set('bar', reduceFn);\n   *\n   * @param {K} key\n   * @param {ProjectValueFn<T, K>} projectSlice\n   * @return void\n   */\n  set<K extends keyof T, O>(key: K, projectSlice: ProjectValueFn<T, K>): void;\n  /**\n   * @internal\n   */\n  set<K extends keyof T>(\n    keyOrStateOrProjectState: Partial<T> | ProjectStateFn<T> | K,\n    stateOrSliceProjectFn?: ProjectValueFn<T, K>\n  ): void {\n    if (\n      typeof keyOrStateOrProjectState === 'object' &&\n      stateOrSliceProjectFn === undefined\n    ) {\n      this.accumulator.nextSlice(keyOrStateOrProjectState);\n      return;\n    }\n\n    if (\n      typeof keyOrStateOrProjectState === 'function' &&\n      stateOrSliceProjectFn === undefined\n    ) {\n      this.accumulator.nextSlice(\n        keyOrStateOrProjectState(this.accumulator.state)\n      );\n      return;\n    }\n\n    if (\n      isKeyOf<T>(keyOrStateOrProjectState) &&\n      typeof stateOrSliceProjectFn === 'function'\n    ) {\n      const state: Partial<T> = {};\n      state[keyOrStateOrProjectState] = stateOrSliceProjectFn(\n        this.accumulator.state\n      );\n      this.accumulator.nextSlice(state);\n      return;\n    }\n\n    throw new Error('wrong params passed to set');\n  }\n\n  /**\n   * @description\n   * Connect an `Observable<Partial<T>>` to the state `T`.\n   * Any change emitted by the source will get merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const sliceToAdd$ = interval(250).pipe(mapTo({\n   *   bar: 5,\n   *   foo: 'foo'\n   * });\n   * state.connect(sliceToAdd$);\n   * // every 250ms the properties bar and foo get updated due to the emission of sliceToAdd$\n   *\n   * // Additionally you can provide a `projectionFunction` to access the current state object and do custom mappings.\n   *\n   * const sliceToAdd$ = interval(250).pipe(mapTo({\n   *   bar: 5,\n   *   foo: 'foo'\n   * });\n   * state.connect(sliceToAdd$, (state, slice) => state.bar += slice.bar);\n   * // every 250ms the properties bar and foo get updated due to the emission of sliceToAdd$. Bar will increase by\n   * // 5 due to the projectionFunction\n   */\n  connect(inputOrSlice$: Observable<Partial<T>>): void;\n\n  /**\n   * @description\n   * Connect an `Observable<V>` to the state `T`.\n   * Any change emitted by the source will get forwarded to to project function and merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * You have to provide a `projectionFunction` to access the current state object and do custom mappings.\n   *\n   * @example\n   * const sliceToAdd$ = interval(250);\n   * state.connect(sliceToAdd$, (s, v) => ({bar: v}));\n   * // every 250ms the property bar get updated due to the emission of sliceToAdd$\n   *\n   */\n  connect<V>(\n    inputOrSlice$: Observable<V>,\n    projectFn: ProjectStateReducer<T, V>\n  ): void;\n  /**\n   *\n   * @description\n   * Connect an `Observable<T[K]>` source to a specific property `K` in the state `T`. Any emitted change will update\n   * this\n   * specific property in the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const myTimer$ = interval(250);\n   * state.connect('timer', myTimer$);\n   * // every 250ms the property timer will get updated\n   */\n  connect<K extends keyof T>(key: K, slice$: Observable<T[K]>): void;\n  /**\n   *\n   * @description\n   * Connect an `Observable<V>` source to a specific property in the state. Additionally you can provide a\n   * `projectionFunction` to access the current state object on every emission of your connected `Observable`.\n   * Any change emitted by the source will get merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const myTimer$ = interval(250);\n   * state.connect('timer', myTimer$, (state, timerChange) => state.timer += timerChange);\n   * // every 250ms the property timer will get updated\n   */\n  connect<K extends keyof T, V>(\n    key: K,\n    input$: Observable<V>,\n    projectSliceFn: ProjectValueReducer<T, K, V>\n  ): void;\n  /**\n   * @internal\n   */\n  connect<K extends keyof T, V>(\n    keyOrInputOrSlice$: K | Observable<Partial<T> | V>,\n    projectOrSlices$?: ProjectStateReducer<T, V> | Observable<T[K]>,\n    projectValueFn?: ProjectValueReducer<T, K, V>\n  ): void {\n    if (\n      isObservable<Partial<T>>(keyOrInputOrSlice$) &&\n      projectOrSlices$ === undefined &&\n      projectValueFn === undefined\n    ) {\n      this.accumulator.nextSliceObservable(keyOrInputOrSlice$);\n      return;\n    }\n\n    if (\n      isObservable<V>(keyOrInputOrSlice$) &&\n      typeof projectOrSlices$ === 'function' &&\n      !isObservable<T[K]>(projectOrSlices$) &&\n      projectValueFn === undefined\n    ) {\n      const project = projectOrSlices$;\n      const slice$ = keyOrInputOrSlice$.pipe(\n        map((v) => project(this.get(), v))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    if (\n      isKeyOf<T>(keyOrInputOrSlice$) &&\n      isObservable<T[K]>(projectOrSlices$) &&\n      projectValueFn === undefined\n    ) {\n      const key = keyOrInputOrSlice$;\n      const slice$ = projectOrSlices$.pipe(\n        map((value) => ({ ...{}, [key]: value }))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    if (\n      isKeyOf<T>(keyOrInputOrSlice$) &&\n      isObservable<V>(projectOrSlices$) &&\n      typeof projectValueFn === 'function'\n    ) {\n      const key = keyOrInputOrSlice$;\n      const slice$ = projectOrSlices$.pipe(\n        map((value) => ({ ...{}, [key]: projectValueFn(this.get(), value) }))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    throw new Error('wrong params passed to connect');\n  }\n\n  /**\n   * @description\n   * returns the state as cached and distinct `Observable<T>`. This way you don't have to think about **late\n   * subscribers**,\n   * **multiple subscribers** or **multiple emissions** of the same value\n   *\n   * @example\n   * const state$ = state.select();\n   * state$.subscribe(state => doStuff(state));\n   *\n   * @returns Observable<T>\n   */\n  select(): Observable<T>;\n\n  /**\n   * @description\n   * returns the state as cached and distinct `Observable<A>`. Accepts arbitrary\n   * [rxjs operators](https://rxjs-dev.firebaseapp.com/guide/operators) to enrich the selection with reactive composition.\n   *\n   * @example\n   * const profilePicture$ = state.select(\n   *  pluck('profilePicture'),\n   *  switchMap(profilePicture => mapImageAsync(profilePicture))\n   * );\n   * @param op { OperatorFunction<T, A> }\n   * @returns Observable<A>\n   */\n  select<A = T>(op: OperatorFunction<T, A>): Observable<A>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>\n  ): Observable<B>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>\n  ): Observable<C>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B, D = C>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B, D = C, E = D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  /**\n   * @description\n   * Access a single property of the state by providing keys.\n   * Returns a single property of the state as cached and distinct `Observable<T[K1]>`.\n   *\n   * @example\n   * // Access a single property\n   *\n   * const bar$ = state.select('bar');\n   *\n   * // Access a nested property\n   *\n   * const foo$ = state.select('bar', 'foo');\n   *\n   * @return Observable<T[K1]>\n   */\n  select<K1 extends keyof T>(k1: K1): Observable<T[K1]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T, K2 extends keyof T[K1]>(\n    k1: K1,\n    k2: K2\n  ): Observable<T[K1][K2]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): Observable<T[K1][K2][K3]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): Observable<T[K1][K2][K3][K4]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): Observable<T[K1][K2][K3][K4][K5]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]>(\n    k1: K1,\n    k2: K2,\n    k3: K3,\n    k4: K4,\n    k5: K5,\n    k6: K6\n  ): Observable<T[K1][K2][K3][K4][K5][K6]>;\n  /**\n   * @internal\n   */\n  select<R>(\n    ...opOrMapFn: OperatorFunction<T, R>[] | string[]\n  ): Observable<T | R> {\n    if (!opOrMapFn || opOrMapFn.length === 0) {\n      return this.accumulator.state$.pipe(stateful());\n    } else if (isStringArrayGuard(opOrMapFn)) {\n      return this.accumulator.state$.pipe(stateful(pluck(...opOrMapFn)));\n    } else if (isOperateFnArrayGuard(opOrMapFn)) {\n      return this.accumulator.state$.pipe(stateful(pipeFromArray(opOrMapFn)));\n    }\n    throw new Error('wrong params passed to select');\n  }\n\n  /**\n   * @description\n   * Manages side-effects of your state. Provide an `Observable<any>` **side-effect** and an optional\n   * `sideEffectFunction`.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * // Directly pass an observable side-effect\n   * const localStorageEffect$ = changes$.pipe(\n   *  tap(changes => storeChanges(changes))\n   * );\n   * state.hold(localStorageEffect$);\n   *\n   * // Pass an additional `sideEffectFunction`\n   *\n   * const localStorageEffectFn = changes => storeChanges(changes);\n   * state.hold(changes$, localStorageEffectFn);\n   *\n   * @param {Observable<S>} obsOrObsWithSideEffect\n   * @param {function} [sideEffectFn]\n   */\n  hold<S>(\n    obsOrObsWithSideEffect: Observable<S>,\n    sideEffectFn?: (arg: S) => void\n  ): void {\n    const sideEffect = obsOrObsWithSideEffect.pipe(catchError(e => EMPTY))\n    if (typeof sideEffectFn === 'function') {\n      this.effectObservable.nextEffectObservable(\n        sideEffect.pipe(tap(sideEffectFn))\n      );\n      return;\n    }\n    this.effectObservable.nextEffectObservable(sideEffect);\n  }\n\n  /**\n   * @internal\n   */\n  subscribe(): Unsubscribable {\n    const subscription = new Subscription();\n    subscription.add(this.accumulator.subscribe());\n    subscription.add(this.effectObservable.subscribe());\n    return subscription;\n  }\n}\n","// tslint:disable\nimport { Subscription } from 'rxjs';\nimport { Scheduler } from './Scheduler';\nimport { SchedulerAction } from './types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(\n    scheduler: Scheduler,\n    work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","export {AppComponent} from './app.component';\nexport {AppComponentModule} from './app-component.module';\n","export * from './interfaces';\nexport * from './render-aware';\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { unpatchAddEventListener, focusEvents, inputEvents, mouseEvents, formControlsEvents } from '@rx-angular/cdk';\n\n/**\n *\n * @description\n *\n * This function takes an elem and event and re-applies the listeners from the passed event to the\n * passed element with the zone un-patched version of it.\n *\n * @param elem {HTMLElement} - The elem to re-apply the listeners to.\n * @param event {string} - The name of the event from which to re-apply the listeners.\n *\n * @returns void\n */\nexport function unpatchEventListener(elem: HTMLElement, event: string): void {\n  const eventListeners = (elem as any).eventListeners(event);\n  // Return if no event listeners are present\n  if (!eventListeners) {\n    return;\n  }\n\n  eventListeners.forEach((listener) => {\n    // Remove and reapply listeners with patched API\n    elem.removeEventListener(event, listener);\n    // Reapply listeners with un-patched API\n    unpatchAddEventListener(event).addEventListener(listener);\n  });\n}\n\nconst eventsToUnpatch: string[] = [\n  ...mouseEvents, ...inputEvents, ...focusEvents, ...formControlsEvents\n];\n\n/**\n * @Directive UnpatchEventsDirective\n *\n * @description\n *\n * The `unpatch` directive helps in partially migrating to zone-less apps as well as getting rid\n * of unnecessary renderings through zones `addEventListener` patches.\n * It can be used on any element you apply event bindings.\n *\n * The current way of binding unpatch to the DOM is to use output bindings:\n *  ```html\n * <button (click)=\"doStuff($event)\">click me</button>\n * ```\n *\n * The problem is that every event registered over `()` syntax, e.g. `(click)`\n * marks the component and all its ancestors as dirty and re-renders the whole component tree.\n * This is because zone.js patches the native browser API and whenever one of the patched APIs is used it re-renders.\n *\n * So even if your button is not related to a change that needs a re-render the app will re-render completely.\n * This leads to bad performance. This is especially helpful if you work with frequently fired unpatch like 'mousemove'\n *\n * `unpatch` directive solves that problem.\n *\n * Included Features:\n *  - by default un-patch all registered listeners of the host it is applied on\n *  - un-patch only a specified set of registered event listeners\n *  - works zone independent (it directly checks the widow for patched APIs and un-patches them without the use of `runOutsideZone` which brings more performance)\n *  - Not interfering with any logic executed by the registered callback\n *\n * @usageNotes\n *\n * The `unpatch` directive can be used like shown here:\n * ```html\n * <button [unoatch] (click)=\"triggerSomeMethod($event)\">click me</button>\n * <button [unoatch]=\"['mousemove']\" (mousemove)=\"doStuff2($event)\" (click)=\"doStuff($event)\">click me</button>\n * ```\n *\n * @publicApi\n */\n// tslint:disable-next-line:directive-selector\n@Directive({ selector: '[unpatch]' })\nexport class UnpatchEventsDirective implements AfterViewInit, OnDestroy {\n\n  /**\n   * @description\n   * List of unpatch that the element should be unpatched from. When input is empty or undefined,\n   * the element is unpatched from all zone-patched unpatch.\n   *\n   * Full list of zone-patched browser unpatch can be found in\n   * [this document](https://github.com/angular/angular/blob/master/packages/zone.js/STANDARD-APIS.md#browser).\n   *\n   */\n  @Input('unpatch')\n  set events(events: string[]) {\n    if (events && Array.isArray(events)) {\n      this.events$.next(events);\n    } else {\n      this.events$.next(eventsToUnpatch);\n    }\n  }\n  subscription = new Subscription();\n  events$ = new BehaviorSubject<string[]>(eventsToUnpatch);\n\n  constructor(private el: ElementRef) {\n  }\n\n  reapplyEventListenersZoneUnPatched(events) {\n    events.forEach((ev) => {\n      unpatchEventListener(this.el.nativeElement, ev);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.subscription = this.events$\n      .pipe(\n        tap((eventList) => this.reapplyEventListenersZoneUnPatched(eventList))\n      )\n      .subscribe();\n  }\n}\n","import { RxBaseTemplateNames } from '@rx-angular/cdk';\n\nexport type rxLetTemplateNames = 'nextTpl' | RxBaseTemplateNames;\n\nexport const RxLetTemplateNames = {\n  ...RxBaseTemplateNames,\n  next: 'nextTpl',\n} as const;\n","import { Observable } from 'rxjs';\n\nexport const intervalTick = () =>\n  new Observable<number>((subscriber) => {\n    const id = (window as any).__zone_symbol__setInterval(() => {\n      subscriber.next(0);\n      subscriber.complete();\n    });\n\n    return () => {\n      (window as any).__zone_symbol__clearInterval(id);\n    };\n  });\n","import { switchMap } from 'rxjs/operators';\nimport {\n  RxRenderWork,\n  RxStrategyCredentials,\n  RxCoalescingOptions,\n} from '../model';\nimport { Observable, Observer, of, throwError } from 'rxjs';\nimport {\n  RxRenderError,\n  RxRenderErrorFactory,\n} from '../template-management/render-error';\n\n/**\n * @internal\n *\n * @param value\n * @param strategy\n * @param workFactory\n * @param options\n */\n/*export function onStrategy<T>(\n  value: T,\n  strategy: RxStrategyCredentials,\n  workFactory: (\n    value: T,\n    work: RxRenderWork,\n    options: RxCoalescingOptions\n  ) => void,\n  options: RxCoalescingOptions = {}\n): Observable<T> {\n  return of(value).pipe(\n    strategy.behavior(\n      () => workFactory(value, strategy.work, options),\n      options.scope || {}\n    )\n  );\n}*/\n\n/**\n * @internal\n *\n * @param value\n * @param strategy\n * @param workFactory\n * @param options\n * @param errorFactory\n */\nexport function onStrategy<T>(\n  value: T,\n  strategy: RxStrategyCredentials,\n  workFactory: (\n    value: T,\n    work: RxRenderWork,\n    options: RxCoalescingOptions\n  ) => void,\n  options: RxCoalescingOptions = {},\n  errorFactory: RxRenderErrorFactory<T, any> = (e, v) => [e, v]\n): Observable<T> {\n  let error: Error;\n  return of(value).pipe(\n    strategy.behavior(() => {\n      try {\n        workFactory(value, strategy.work, options);\n      } catch (e) {\n        error = e;\n      }\n    }, options.scope || {}),\n    switchMap(() =>\n      error ? throwError(errorFactory(error, value)) : of(value)\n    )\n  );\n}\n","import {\n  ConnectableObservable,\n  Observable,\n  concat,\n  NEVER,\n  of,\n  OperatorFunction,\n  ReplaySubject,\n  Subscribable,\n  Subscription\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  publish,\n  shareReplay,\n  startWith,\n  switchMap,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { RxNotification, RxTemplateObserver } from '../model';\nimport { rxMaterialize } from '../utils/rx-materialize';\nimport { RenderStrategy, StrategySelection } from './interfaces';\n\nexport interface RenderAware<U> extends Subscribable<U> {\n  nextPotentialObservable: (value: any) => void;\n  nextStrategy: (config: string | Observable<string>) => void;\n  activeStrategy$: Observable<RenderStrategy>;\n  rendered$: Observable<RxNotification<U>>;\n}\n\n/**\n * RenderAware\n *\n * @description\n * This function returns an object that holds all the shared logic for the push pipe and the let directive\n * responsible for change detection\n * If you extend this class you need to implement how the update of the rendered value happens.\n * Also custom behaviour is something you need to implement in the extending class\n */\nexport function createRenderAware<U>(cfg: {\n  strategies: StrategySelection;\n  templateObserver: RxTemplateObserver<U>;\n}): RenderAware<U | undefined | null> {\n  const strategyName$ = new ReplaySubject<string | Observable<string>>(1);\n  let currentStrategy: RenderStrategy;\n  const strategy$: Observable<RenderStrategy> = strategyName$.pipe(\n    distinctUntilChanged(),\n    switchMap((stringOrObservable) =>\n      typeof stringOrObservable === 'string'\n      ? of(stringOrObservable)\n      : stringOrObservable\n    ),\n    map((strategy: string): RenderStrategy => {\n        const s = cfg.strategies[strategy];\n        if (!!s) {\n          return s;\n        }\n        throw new Error(`Strategy ${ strategy } does not exist.`);\n      }\n    ),\n    tap((s) => (currentStrategy = s)),\n    // do not repeat the steps before for each subscriber\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  const observablesFromTemplate$ = new ReplaySubject<Observable<U>>(1);\n  const valuesFromTemplate$ = observablesFromTemplate$.pipe(\n    distinctUntilChanged()\n  );\n  let firstTemplateObservableChange = true;\n\n  const renderingEffect$ = valuesFromTemplate$.pipe(\n    // handle null | undefined assignment and new Observable reset\n    map((observable$) => {\n      if (observable$ === null) {\n        return of(null);\n      }\n      if (!firstTemplateObservableChange) {\n        cfg.templateObserver.suspense();\n        if (observable$ === undefined) {\n          return of(undefined);\n        }\n      }\n      firstTemplateObservableChange = false;\n      return observable$;\n    }),\n    // forward only observable values\n    filter((o$) => o$ !== undefined),\n    distinctUntilChanged(),\n    switchMap((o$) =>\n      o$\n        // Added behavior will get applied to the observable in `renderWithLatestStrategy`\n        .pipe(\n          // Forward only distinct values\n          distinctUntilChanged(),\n          // Update completion, error and next\n          tap(cfg.templateObserver),\n          renderWithLatestStrategy(strategy$)\n        )\n    ),\n    publish()\n  );\n\n  return {\n    nextPotentialObservable(value: any): void {\n      observablesFromTemplate$.next(value);\n    },\n    nextStrategy(nextConfig: string | Observable<string>): void {\n      strategyName$.next(nextConfig);\n    },\n    rendered$: renderingEffect$,\n    activeStrategy$: strategy$,\n    subscribe(): Subscription {\n      return new Subscription().add((renderingEffect$ as ConnectableObservable<U>).connect());\n    }\n  };\n}\n\nexport function renderWithLatestStrategy<T>(\n  strategyChanges$: Observable<RenderStrategy>\n): OperatorFunction<T, RxNotification<T>> {\n  const suspenseNotification: RxNotification<T> = {\n    kind: 'rxSuspense',\n    value: undefined,\n    hasValue: false,\n    error: undefined,\n  };\n  return (o$) => {\n    return o$.pipe(\n      rxMaterialize(),\n      withLatestFrom(strategyChanges$),\n      // always use latest strategy on value change\n      switchMap(([renderValue, strategy]) =>\n        concat(of(renderValue), NEVER).pipe(strategy.rxScheduleCD)\n      ),\n      startWith(suspenseNotification),\n    );\n  };\n}\n","export * from './insert';\nexport * from './remove';\nexport * from './toDictionary';\nexport * from './update';\n","import { Observable, Subject } from 'rxjs';\n\nconst observerSupported = () =>\n  typeof window !== 'undefined'\n    ? !!(window as any).IntersectionObserver\n    : false;\n\nexport function intersectionObserver(options?: object): {\n  observe: (target: Element) => void;\n  unobserve: (target: Element) => void;\n  entries$: Observable<any>;\n\n} {\n  const subject = new Subject();\n  const observer = observerSupported()\n    ? new IntersectionObserver((entries) => {\n        entries.forEach((entry) => subject.next(entry));\n      }, options)\n    : null;\n\n  const entries$ = new Observable((subscriber) => {\n    subject.subscribe(subscriber);\n    return () => {\n      if (observer) {\n        observer.disconnect();\n      }\n    };\n  });\n\n  return {\n    entries$,\n    observe: observer.observe,\n    unobserve: observer.unobserve,\n  };\n}\n","// tslint:disable\nimport { AsyncAction } from './AsyncAction';\nimport { Action } from '../Action';\nimport { Scheduler } from '../Scheduler';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from 'rxjs';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler = null;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(\n    SchedulerAction: typeof Action,\n    now: () => number = Scheduler.now\n  ) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(\n    work: (this: SchedulerAction<T>, state?: T) => void,\n    delay: number = 0,\n    state?: T\n  ): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n      // @ts-ignore\n    } while ((action = actions.shift())); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      // @ts-ignore\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","export * from './push.pipe';\nexport * from './push.module';\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n// @TODO use cdk/zone-configuration here\nimport { zonePatchedEvents } from './unpatch-event-list.experimental';\nimport { getZoneUnPatchedApi } from '../../../core/utils';\n\n/**\n *\n * @description\n *\n * This function takes an elem and event and re-applies the listeners from the passed event to the\n * passed element with the zone un-patched version of it.\n *\n * @param elem {HTMLElement} - The elem to re-apply the listeners to.\n * @param event {string} - The name of the event from which to re-apply the listeners.\n *\n * @returns void\n */\nexport function unpatchEventListener(\n  element: HTMLElement & {\n    eventListeners?: (event: string) => EventListenerOrEventListenerObject[];\n  },\n  event: string\n): void {\n  // `EventTarget` is patched only in the browser environment, thus\n  // running this code on the server-side will throw an exception:\n  // `TypeError: element.eventListeners is not a function`.\n  if (typeof element.eventListeners !== 'function') {\n    return;\n  }\n  const eventListeners = element.eventListeners(event);\n  // Return if no event listeners are present\n  if (!eventListeners) {\n    return;\n  }\n\n  const addEventListener = getZoneUnPatchedApi(\n    'addEventListener',\n    element\n  ).bind(element);\n  eventListeners.forEach((listener) => {\n    // Remove and reapply listeners with patched API\n    // @TODO use (elem as any).removeAllListeners?(eventName?: string): void;\n    element.removeEventListener(event, listener);\n    // Reapply listeners with un-patched API\n    addEventListener(event, listener);\n  });\n}\n\n/**\n * @Directive UnpatchEventsDirective\n *\n * @description\n *\n * The `unpatch` directive helps in partially migrating to zone-less apps as well as getting rid\n * of unnecessary renderings through zones `addEventListener` patches.\n * It can be used on any element you apply event bindings.\n *\n * The current way of binding events to the DOM is to use output bindings:\n *  ```html\n * <button (click)=\"doStuff($event)\">click me</button>\n * ```\n *\n * The problem is that every event registered over `()` syntax, e.g. `(click)`\n * marks the component and all its ancestors as dirty and re-renders the whole component tree.\n * This is because zone.js patches the native browser API and whenever one of the patched APIs is used it re-renders.\n *\n * So even if your button is not related to a change that needs a re-render the app will re-render completely.\n * This leads to bad performance. This is especially helpful if you work with frequently fired events like 'mousemove'\n *\n * `unpatch` directive solves that problem.\n *\n * Included Features:\n *  - by default un-patch all registered listeners of the host it is applied on\n *  - un-patch only a specified set of registered event listeners\n *  - works zone independent (it directly checks the widow for patched APIs and un-patches them without the use of `runOutsideZone` which brings more performance)\n *  - Not interfering with any logic executed by the registered callback\n *\n * @usageNotes\n *\n * The `unpatch` directive can be used like shown here:\n * ```html\n * <button [unpatch] (click)=\"triggerSomeMethod($event)\">click me</button>\n * <button [unpatch]=\"['mousemove']\" (mousemove)=\"doStuff2($event)\" (click)=\"doStuff($event)\">click me</button>\n * ```\n *\n * @publicApi\n */\n// tslint:disable-next-line:directive-selector\n@Directive({ selector: '[unpatch]' })\nexport class UnpatchEventsDirective\n  implements OnChanges, AfterViewInit, OnDestroy {\n  subscription = new Subscription();\n  events$ = new BehaviorSubject<string[]>(zonePatchedEvents);\n\n  /**\n   * @description\n   * List of events that the element should be unpatched from. When input is empty or undefined,\n   * the element is unpatched from all zone-patched events.\n   *\n   * Full list of zone-patched browser events can be found in\n   * [this document](https://github.com/angular/angular/blob/master/packages/zone.js/STANDARD-APIS.md#browser).\n   *\n   */\n  @Input('unpatch') events?: string[];\n\n  reapplyEventListenersZoneUnPatched(events: string[]) {\n    events.forEach((ev) => {\n      unpatchEventListener(this.el.nativeElement, ev);\n    });\n  }\n\n  constructor(private el: ElementRef) {}\n\n  ngOnChanges({ events }: SimpleChanges): void {\n    if (events && Array.isArray(this.events)) {\n      this.events$.next(this.events);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.subscription = this.events$.subscribe((eventList) => {\n      this.reapplyEventListenersZoneUnPatched(eventList);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","export * from './stateful';\nexport * from './select';\nexport * from './distinctUntilSomeChanged';\nexport * from './selectSlice';\nexport  {ngInputFlatten} from './ngInputFlatten';\nexport  {rxMaterialize} from './rx-materialize';\nexport  {coalesceWith} from './coalesceWith';\nexport  {observableToRxTemplateName} from './observable-to-rx-template-name';\n","import { Directive, Input } from '@angular/core';\n\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, mergeAll, switchAll } from 'rxjs/operators';\nimport { hotFlatten, RxStrategyProvider } from '@rx-angular/cdk';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[rxSwitch]',\n})\nexport class RxSwitch<U> {\n  @Input()\n  set rxSwitch(potentialObservable: Observable<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  private strategyHandler = hotFlatten<string>(() => new BehaviorSubject(this.strategyProvider.primaryStrategy), mergeAll());\n  readonly strategies$ = this.strategyHandler.values$;\n\n  @Input('rxLetStrategy')\n  set strategy(strategyName: string | Observable<string> | undefined) {\n    this.strategyHandler.next(strategyName);\n  }\n\n  observables$ = new ReplaySubject(1);\n  viewContext = { $implicit: undefined };\n\n  values$ = this.observables$.pipe(\n    distinctUntilChanged(),\n    switchAll(),\n    distinctUntilChanged()\n  );\n\n  constructor(private strategyProvider: RxStrategyProvider) {}\n}\n","// prefix: __Zone_disable_\nexport interface ZoneGlobalDisableConfigurations {\n  /**\n   * Disable the monkey patch of the `Node.js` `EventEmitter` API.\n   *\n   * By default, `zone.js` monkey patches the `Node.js` `EventEmitter` APIs to make asynchronous\n   * callbacks of those APIs in the same zone when scheduled.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const EventEmitter = require('events');\n   * class MyEmitter extends EventEmitter {}\n   * const myEmitter = new MyEmitter();\n   *\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   myEmitter.on('event', () => {\n   *     console.log('an event occurs in the zone', Zone.current.name);\n   *     // the callback runs in the zone when it is scheduled,\n   *     // so the output is 'an event occurs in the zone myZone'.\n   *   });\n   * });\n   * myEmitter.emit('event');\n   * ```\n   *\n   * If you set `__Zone_disable_EventEmitter = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch the `EventEmitter` APIs and the above code\n   * outputs 'an event occurred <root>'.\n   */\n  EventEmitter?: boolean;\n  /**\n   * Disable the monkey patch of the `Node.js` `fs` API.\n   *\n   * By default, `zone.js` monkey patches `Node.js` `fs` APIs to make asynchronous callbacks of\n   * those APIs in the same zone when scheduled.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const fs = require('fs');\n   *\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   fs.stat('/tmp/world', (err, stats) => {\n   *     console.log('fs.stats() callback is invoked in the zone', Zone.current.name);\n   *     // since the callback of the `fs.stat()` runs in the same zone\n   *     // when it is called, so the output is 'fs.stats() callback is invoked in the zone myZone'.\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_fs = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch the `fs` API and the above code\n   * outputs 'get stats occurred <root>'.\n   */\n  fs?: boolean;\n  /**\n   * Disable the monkey patch of the `Node.js` `timer` API.\n   *\n   * By default, `zone.js` monkey patches the `Node.js` `timer` APIs to make asynchronous\n   * callbacks of those APIs in the same zone when scheduled.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   setTimeout(() => {\n   *     console.log('setTimeout() callback is invoked in the zone', Zone.current.name);\n   *     // since the callback of `setTimeout()` runs in the same zone\n   *     // when it is scheduled, so the output is 'setTimeout() callback is invoked in the zone\n   *     // myZone'.\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_timers = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch the `timer` APIs and the above code\n   * outputs 'timeout <root>'.\n   */\n  node_timers?: boolean;\n  /**\n   * Disable the monkey patch of the `Node.js` `process.nextTick()` API.\n   *\n   * By default, `zone.js` monkey patches the `Node.js` `process.nextTick()` API to make the\n   * callback in the same zone when calling `process.nextTick()`.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   process.nextTick(() => {\n   *     console.log('process.nextTick() callback is invoked in the zone', Zone.current.name);\n   *     // since the callback of `process.nextTick()` runs in the same zone\n   *     // when it is scheduled, so the output is 'process.nextTick() callback is invoked in the\n   *     // zone myZone'.\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_nextTick = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch the `process.nextTick()` API and the above code\n   * outputs 'nextTick <root>'.\n   */\n  nextTick?: boolean;\n  /**\n   * Disable the monkey patch of the `Node.js` `crypto` API.\n   *\n   * By default, `zone.js` monkey patches the `Node.js` `crypto` APIs to make asynchronous callbacks\n   * of those APIs in the same zone when called.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const crypto = require('crypto');\n   *\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   crypto.randomBytes(() => {\n   *     console.log('crypto.randomBytes() callback is invoked in the zone', Zone.current.name);\n   *     // since the callback of `crypto.randomBytes()` runs in the same zone\n   *     // when it is called, so the output is 'crypto.randomBytes() callback is invoked in the\n   *     // zone myZone'.\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_crypto = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch the `crypto` API and the above code\n   * outputs 'crypto <root>'.\n   */\n  crypto?: boolean;\n  /**\n   * Disable the monkey patch of the `Object.defineProperty()` API.\n   *\n   * Note: This configuration is available only in the legacy bundle (dist/zone.js). This module is\n   * not available in the evergreen bundle (zone-evergreen.js).\n   *\n   * In the legacy browser, the default behavior of `zone.js` is to monkey patch\n   * `Object.defineProperty()` and `Object.create()` to try to ensure PropertyDescriptor parameter's\n   * configurable property to be true. This patch is only needed in some old mobile browsers.\n   *\n   * If you set `__Zone_disable_defineProperty = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch the `Object.defineProperty()` API and does not\n   * modify desc.configurable to true.\n   *\n   */\n  defineProperty?: boolean;\n  /**\n   * Disable the monkey patch of the browser `registerElement()` API.\n   *\n   * NOTE: This configuration is only available in the legacy bundle (dist/zone.js), this\n   * module is not available in the evergreen bundle (zone-evergreen.js).\n   *\n   * In the legacy browser, the default behavior of `zone.js` is to monkey patch the\n   * `registerElement()` API to make asynchronous callbacks of the API in the same zone when\n   * `registerElement()` is called.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const proto = Object.create(HTMLElement.prototype);\n   * proto.createdCallback = function() {\n   *   console.log('createdCallback is invoked in the zone', Zone.current.name);\n   * };\n   * proto.attachedCallback = function() {\n   *   console.log('attachedCallback is invoked in the zone', Zone.current.name);\n   * };\n   * proto.detachedCallback = function() {\n   *   console.log('detachedCallback is invoked in the zone', Zone.current.name);\n   * };\n   * proto.attributeChangedCallback = function() {\n   *   console.log('attributeChangedCallback is invoked in the zone', Zone.current.name);\n   * };\n   *\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   document.registerElement('x-elem', {prototype: proto});\n   * });\n   * ```\n   *\n   * When these callbacks are invoked, those callbacks will be in the zone when\n   * `registerElement()` is called.\n   *\n   * If you set `__Zone_disable_registerElement = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch `registerElement()` API and the above code\n   * outputs '<root>'.\n   */\n  registerElement?: boolean;\n  /**\n   * Disable the monkey patch of the browser legacy `EventTarget` API.\n   *\n   * NOTE: This configuration is only available in the legacy bundle (dist/zone.js), this module\n   * is not available in the evergreen bundle (zone-evergreen.js).\n   *\n   * In some old browsers, the `EventTarget` is not available, so `zone.js` cannot directly monkey\n   * patch the `EventTarget`. Instead, `zone.js` patches all known HTML elements' prototypes (such\n   * as `HtmlDivElement`). The callback of the `addEventListener()` will be in the same zone when\n   * the `addEventListener()` is called.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   div.addEventListener('click', () => {\n   *     console.log('div click event listener is invoked in the zone', Zone.current.name);\n   *     // the output is 'div click event listener is invoked in the zone myZone'.\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_EventTargetLegacy = true` before importing `zone.js`\n   * In some old browsers, where `EventTarget` is not available, if you set\n   * `__Zone_disable_EventTargetLegacy = true` before importing `zone.js`, `zone.js` does not monkey\n   * patch all HTML element APIs and the above code outputs 'clicked <root>'.\n   */\n  EventTargetLegacy?: boolean;\n  /**\n   * Disable the monkey patch of the browser `timer` APIs.\n   *\n   * By default, `zone.js` monkey patches browser timer\n   * APIs (`setTimeout()`/`setInterval()`/`setImmediate()`) to make asynchronous callbacks of those\n   * APIs in the same zone when scheduled.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   setTimeout(() => {\n   *     console.log('setTimeout() callback is invoked in the zone', Zone.current.name);\n   *     // since the callback of `setTimeout()` runs in the same zone\n   *     // when it is scheduled, so the output is 'setTimeout() callback is invoked in the zone\n   *     // myZone'.\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_timers = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch `timer` API and the above code\n   * outputs 'timeout <root>'.\n   *\n   */\n  timers?: boolean;\n  /**\n   * Disable the monkey patch of the browser `requestAnimationFrame()` API.\n   *\n   * By default, `zone.js` monkey patches the browser `requestAnimationFrame()` API\n   * to make the asynchronous callback of the `requestAnimationFrame()` in the same zone when\n   * scheduled.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   requestAnimationFrame(() => {\n   *     console.log('requestAnimationFrame() callback is invoked in the zone', Zone.current.name);\n   *     // since the callback of `requestAnimationFrame()` will be in the same zone\n   *     // when it is scheduled, so the output will be 'requestAnimationFrame() callback is invoked\n   *     // in the zone myZone'\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_requestAnimationFrame = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch the `requestAnimationFrame()` API and the above code\n   * outputs 'raf <root>'.\n   */\n  requestAnimationFrame?: boolean;\n  /**\n   *\n   * Disable the monkey patch of the browser blocking APIs(`alert()`/`prompt()`/`confirm()`).\n   */\n  blocking?: boolean;\n  /**\n   * Disable the monkey patch of the browser `EventTarget` APIs.\n   *\n   * By default, `zone.js` monkey patches EventTarget APIs. The callbacks of the\n   * `addEventListener()` run in the same zone when the `addEventListener()` is called.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   div.addEventListener('click', () => {\n   *     console.log('div event listener is invoked in the zone', Zone.current.name);\n   *     // the output is 'div event listener is invoked in the zone myZone'.\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_EventTarget = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch EventTarget API and the above code\n   * outputs 'clicked <root>'.\n   *\n   */\n  EventTarget?: boolean;\n  /**\n   * Disable the monkey patch of the browser `FileReader` APIs.\n   */\n  FileReader?: boolean;\n  /**\n   * Disable the monkey patch of the browser `MutationObserver` APIs.\n   */\n  MutationObserver?: boolean;\n  /**\n   * Disable the monkey patch of the browser `IntersectionObserver` APIs.\n   */\n  IntersectionObserver?: boolean;\n  /**\n   * Disable the monkey patch of the browser onProperty APIs(such as onclick).\n   *\n   * By default, `zone.js` monkey patches onXXX properties (such as onclick). The callbacks of onXXX\n   * properties run in the same zone when the onXXX properties is set.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   div.onclick = () => {\n   *     console.log('div click event listener is invoked in the zone', Zone.current.name);\n   *     // the output will be 'div click event listener is invoked in the zone myZone'\n   *   }\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_on_property = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch onXXX properties and the above code\n   * outputs 'clicked <root>'.\n   *\n   */\n  on_property?: boolean;\n  /**\n   * Disable the monkey patch of the browser `customElements` APIs.\n   *\n   * By default, `zone.js` monkey patches `customElements` APIs to make callbacks run in the\n   * same zone when the `customElements.define()` is called.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * class TestCustomElement extends HTMLElement {\n   *   constructor() { super(); }\n   *   connectedCallback() {}\n   *   disconnectedCallback() {}\n   *   attributeChangedCallback(attrName, oldVal, newVal) {}\n   *   adoptedCallback() {}\n   * }\n   *\n   * const zone = Zone.fork({name: 'myZone'});\n   * zone.run(() => {\n   *   customElements.define('x-elem', TestCustomElement);\n   * });\n   * ```\n   *\n   * All those callbacks defined in TestCustomElement runs in the zone when\n   * the `customElements.define()` is called.\n   *\n   * If you set `__Zone_disable_customElements = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch `customElements` APIs and the above code\n   * runs inside <root> zone.\n   */\n  customElements?: boolean;\n  /**\n   * Disable the monkey patch of the browser `XMLHttpRequest` APIs.\n   *\n   * By default, `zone.js` monkey patches `XMLHttpRequest` APIs to make XMLHttpRequest act\n   * as macroTask.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({\n   *   name: 'myZone',\n   *   onScheduleTask: (delegate, curr, target, task) => {\n   *     console.log('task is scheduled', task.type, task.source, task.zone.name);\n   *     return delegate.scheduleTask(target, task);\n   *   }\n   * })\n   * const xhr = new XMLHttpRequest();\n   * zone.run(() => {\n   *   xhr.onload = function() {};\n   *   xhr.open('get', '/', true);\n   *   xhr.send();\n   * });\n   * ```\n   *\n   * In this example, the instance of XMLHttpRequest runs in the zone and acts as a macroTask. The\n   * output is 'task is scheduled macroTask, XMLHttpRequest.send, zone'.\n   *\n   * If you set `__Zone_disable_XHR = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch `XMLHttpRequest` APIs and the above onScheduleTask callback\n   * will not be called.\n   *\n   */\n  XHR?: boolean;\n  /**\n   * Disable the monkey patch of the browser geolocation APIs.\n   *\n   * By default, `zone.js` monkey patches geolocation APIs to make callbacks run in the same zone\n   * when those APIs are called.\n   *\n   * Consider the following examples:\n   *\n   * ```\n   * const zone = Zone.current.fork({\n   *   name: 'myZone'\n   * });\n   *\n   * zone.run(() => {\n   *   navigator.geolocation.getCurrentPosition(pos => {\n   *     console.log('navigator.getCurrentPosition() callback is invoked in the zone',\n   *     Zone.current.name);\n   *     // output is 'navigator.getCurrentPosition() callback is invoked in the zone myZone'.\n   *   }\n   * });\n   * ```\n   *\n   * If set you `__Zone_disable_geolocation = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch geolocation APIs and the above code\n   * outputs 'getCurrentPosition <root>'.\n   *\n   */\n  geolocation?: boolean;\n  /**\n   * Disable the monkey patch of the browser `canvas` APIs.\n   *\n   * By default, `zone.js` monkey patches `canvas` APIs to make callbacks run in the same zone when\n   * those APIs are called.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * const zone = Zone.current.fork({\n   *   name: 'myZone'\n   * });\n   *\n   * zone.run(() => {\n   *   canvas.toBlob(blog => {\n   *     console.log('canvas.toBlob() callback is invoked in the zone', Zone.current.name);\n   *     // output is 'canvas.toBlob() callback is invoked in the zone myZone'.\n   *   }\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_canvas = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch `canvas` APIs and the above code\n   * outputs 'canvas.toBlob <root>'.\n   */\n  canvas?: boolean;\n  /**\n   * Disable the `Promise` monkey patch.\n   *\n   * By default, `zone.js` monkey patches `Promise` APIs to make the `then()/catch()` callbacks in\n   * the same zone when those callbacks are called.\n   *\n   * Consider the following examples:\n   *\n   * ```\n   * const zone = Zone.current.fork({name: 'myZone'});\n   *\n   * const p = Promise.resolve(1);\n   *\n   * zone.run(() => {\n   *   p.then(() => {\n   *     console.log('then() callback is invoked in the zone', Zone.current.name);\n   *     // output is 'then() callback is invoked in the zone myZone'.\n   *   });\n   * });\n   * ```\n   *\n   * If you set `__Zone_disable_ZoneAwarePromise = true` before importing `zone.js`,\n   * `zone.js` does not monkey patch `Promise` APIs and the above code\n   * outputs 'promise then callback <root>'.\n   */\n  ZoneAwarePromise?: boolean;\n}\nexport type ZoneGlobalDisableConfigurationsKey = keyof ZoneGlobalDisableConfigurations;\nexport const zoneGlobalDisableConfigurationsKeys: ZoneGlobalDisableConfigurationsKey[] = [\n  'EventEmitter',\n  'fs',\n  'node_timers',\n  'nextTick',\n  'crypto',\n  'defineProperty',\n  'registerElement',\n  'EventTargetLegacy',\n  'timers',\n  'requestAnimationFrame',\n  'blocking',\n  'EventTarget',\n  'FileReader',\n  'MutationObserver',\n  'IntersectionObserver',\n  'on_property',\n  'customElements',\n  'XHR',\n  'geolocation',\n  'canvas',\n  'ZoneAwarePromise',\n];\n\n// prefix: __zone_symbol__\nexport interface ZoneGlobalEventsConfigurations {\n  /**\n   * Define event names that users don't want monkey patched by the `zone.js`.\n   *\n   * By default, `zone.js` monkey patches EventTarget.addEventListener(). The event listener\n   * callback runs in the same zone when the addEventListener() is called.\n   *\n   * Sometimes, you don't want all of the event names used in this patched version because it\n   * impacts performance. For example, you might want `scroll` or `mousemove` event listeners to run\n   * the native `addEventListener()` for better performance.\n   *\n   * Users can achieve this goal by defining `__zone_symbol__UNPATCHED_EVENTS = ['scroll',\n   * 'mousemove'];` before importing `zone.js`.\n   */\n  UNPATCHED_EVENTS?: string[];\n  /**\n   * Define the event names of the passive listeners.\n   *\n   * To add passive event listeners, you can use `elem.addEventListener('scroll', listener,\n   * {passive: true});` or implement your own `EventManagerPlugin`.\n   *\n   * You can also define a global variable as follows:\n   *\n   * ```\n   * __zone_symbol__PASSIVE_EVENTS = ['scroll'];\n   * ```\n   *\n   * The preceding code makes all scroll event listeners passive.\n   */\n  PASSIVE_EVENTS?: string[];\n}\nexport type ZoneGlobalEventsConfigurationsKey = keyof ZoneGlobalEventsConfigurations;\nexport const zoneGlobalEventsConfigurationsKeys: ZoneGlobalEventsConfigurationsKey[] = [\n  'UNPATCHED_EVENTS',\n  'PASSIVE_EVENTS',\n];\n\n// prefix: __zone_symbol__\nexport interface ZoneGlobalSettingsConfigurations {\n  /**\n   * Disable wrapping uncaught promise rejection.\n   *\n   * By default, `zone.js` wraps the uncaught promise rejection in a new `Error` object\n   * which contains additional information such as a value of the rejection and a stack trace.\n   *\n   * If you set `__zone_symbol__DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION = true;` before\n   * importing `zone.js`, `zone.js` will not wrap the uncaught promise rejection.\n   */\n  DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION?: boolean;\n}\nexport type ZoneGlobalSettingsConfigurationsKey = keyof ZoneGlobalSettingsConfigurations;\nexport const zoneGlobalSettingsConfigurationsKeys: ZoneGlobalSettingsConfigurationsKey[] = [\n  'DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION',\n];\n\n// prefix: __zone_symbol__\nexport interface ZoneRuntimeConfigurations {\n  ignoreConsoleErrorUncaughtError?: boolean;\n}\nexport type ZoneRuntimeConfigurationsKey = keyof ZoneRuntimeConfigurations;\nexport const zoneRuntimeConfigurationsKeys: ZoneRuntimeConfigurationsKey[] = [\n  'ignoreConsoleErrorUncaughtError',\n];\n\n// prefix: __Zone_disable_\nexport interface ZoneTestDisableConfigurations {\n  /**\n   * Disable the Jasmine integration.\n   *\n   * In the `zone-testing.js` bundle, by default, `zone-testing.js` monkey patches Jasmine APIs\n   * to make Jasmine APIs run in specified zone.\n   *\n   * 1. Make the `describe()`/`xdescribe()`/`fdescribe()` methods run in the syncTestZone.\n   * 2. Make the `it()`/`xit()`/`fit()`/`beforeEach()`/`afterEach()`/`beforeAll()`/`afterAll()`\n   * methods run in the ProxyZone.\n   *\n   * With this patch, `async()`/`fakeAsync()` can work with the Jasmine runner.\n   *\n   * If you set `__Zone_disable_jasmine = true` before importing `zone-testing.js`,\n   * `zone-testing.js` does not monkey patch the jasmine APIs and the `async()`/`fakeAsync()` cannot\n   * work with the Jasmine runner any longer.\n   */\n  jasmine?: boolean;\n  /**\n   * Disable the Mocha integration.\n   *\n   * In the `zone-testing.js` bundle, by default, `zone-testing.js` monkey patches the Mocha APIs\n   * to make Mocha APIs run in the specified zone.\n   *\n   * 1. Make the `describe()`/`xdescribe()`/`fdescribe()` methods run in the syncTestZone.\n   * 2. Make the `it()`/`xit()`/`fit()`/`beforeEach()`/`afterEach()`/`beforeAll()`/`afterAll()`\n   * methods run in the ProxyZone.\n   *\n   * With this patch, `async()`/`fakeAsync()` can work with the Mocha runner.\n   *\n   * If you set `__Zone_disable_mocha = true` before importing `zone-testing.js`,\n   * `zone-testing.js` does not monkey patch the Mocha APIs and the `async()/`fakeAsync()` can not\n   * work with the Mocha runner any longer.\n   */\n  mocha?: boolean;\n  /**\n   * Disable the Jest integration.\n   *\n   * In the `zone-testing.js` bundle, by default, `zone-testing.js` monkey patches Jest APIs\n   * to make Jest APIs run in the specified zone.\n   *\n   * 1. Make the `describe()`/`xdescribe()`/`fdescribe()` methods run in the syncTestZone.\n   * 2. Make the `it()`/`xit()`/`fit()`/`beforeEach()`/`afterEach()`/`before()`/`after()` methods\n   * run in the ProxyZone.\n   *\n   * With this patch, `async()`/`fakeAsync()` can work with the Jest runner.\n   *\n   * If you set `__Zone_disable_jest = true` before importing `zone-testing.js`,\n   * `zone-testing.js` does not monkey patch the jest APIs and `async()`/`fakeAsync()` cannot\n   * work with the Jest runner any longer.\n   */\n  jest?: boolean;\n}\nexport type ZoneTestDisableConfigurationsKey = keyof ZoneTestDisableConfigurations;\nexport const zoneTestDisableConfigurationsKeys: ZoneTestDisableConfigurationsKey[] = [\n  'jasmine',\n  'mocha',\n  'jest',\n];\n\n// prefix: __zone_symbol__\nexport interface ZoneTestSettingsConfigurations {\n  /**\n   * Disable monkey patch the jasmine clock APIs.\n   *\n   * By default, `zone-testing.js` monkey patches the `jasmine.clock()` API,\n   * so the `jasmine.clock()` can work with the `fakeAsync()/tick()` API.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * describe('jasmine.clock integration', () => {\n   *   beforeEach(() => {\n   *     jasmine.clock().install();\n   *   });\n   *   afterEach(() => {\n   *     jasmine.clock().uninstall();\n   *   });\n   *   it('fakeAsync test', fakeAsync(() => {\n   *     setTimeout(spy, 100);\n   *     expect(spy).not.toHaveBeenCalled();\n   *     jasmine.clock().tick(100);\n   *     expect(spy).toHaveBeenCalled();\n   *   }));\n   * });\n   * ```\n   *\n   * In the `fakeAsync()` method, `jasmine.clock().tick()` works just like `tick()`.\n   *\n   * If you set `__zone_symbol__fakeAsyncDisablePatchingClock = true` before importing\n   * `zone-testing.js`,`zone-testing.js` does not monkey patch the `jasmine.clock()` APIs and the\n   * `jasmine.clock()` cannot work with `fakeAsync()` any longer.\n   */\n  fakeAsyncDisablePatchingClock?: boolean;\n  /**\n   * Enable auto running into `fakeAsync()` when installing the `jasmine.clock()`.\n   *\n   * By default, `zone-testing.js` does not automatically run into `fakeAsync()`\n   * if the `jasmine.clock().install()` is called.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * describe('jasmine.clock integration', () => {\n   *   beforeEach(() => {\n   *     jasmine.clock().install();\n   *   });\n   *   afterEach(() => {\n   *     jasmine.clock().uninstall();\n   *   });\n   *   it('fakeAsync test', fakeAsync(() => {\n   *     setTimeout(spy, 100);\n   *     expect(spy).not.toHaveBeenCalled();\n   *     jasmine.clock().tick(100);\n   *     expect(spy).toHaveBeenCalled();\n   *   }));\n   * });\n   * ```\n   *\n   * You must run `fakeAsync()` to make test cases in the `FakeAsyncTestZone`.\n   *\n   * If you set `__zone_symbol__fakeAsyncAutoFakeAsyncWhenClockPatched = true` before importing\n   * `zone-testing.js`, `zone-testing.js` can run test case automatically in the\n   * `FakeAsyncTestZone` without calling the `fakeAsync()`.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * describe('jasmine.clock integration', () => {\n   *   beforeEach(() => {\n   *     jasmine.clock().install();\n   *   });\n   *   afterEach(() => {\n   *     jasmine.clock().uninstall();\n   *   });\n   *   it('fakeAsync test', () => { // here we don't need to call fakeAsync\n   *     setTimeout(spy, 100);\n   *     expect(spy).not.toHaveBeenCalled();\n   *     jasmine.clock().tick(100);\n   *     expect(spy).toHaveBeenCalled();\n   *   });\n   * });\n   * ```\n   *\n   */\n  fakeAsyncAutoFakeAsyncWhenClockPatched?: boolean;\n  /**\n   * Enable waiting for the unresolved promise in the `async()` test.\n   *\n   * In the `async()` test, `AsyncTestZone` waits for all the asynchronous tasks to finish. By\n   * default, if some promises remain unresolved, `AsyncTestZone` does not wait and reports that it\n   * received an unexpected result.\n   *\n   * Consider the following example:\n   *\n   * ```\n   * describe('wait never resolved promise', () => {\n   *   it('async with never resolved promise test', async(() => {\n   *     const p = new Promise(() => {});\n   *     p.then(() => {\n   *       // do some expectation.\n   *     });\n   *   }))\n   * });\n   * ```\n   *\n   * By default, this case passes, because the callback of `p.then()` is never called. Because `p`\n   * is an unresolved promise, there is no pending asynchronous task, which means the `async()`\n   * method does not wait.\n   *\n   * If you set `__zone_symbol__supportWaitUnResolvedChainedPromise = true`, the above case\n   * times out, because `async()` will wait for the unresolved promise.\n   */\n  supportWaitUnResolvedChainedPromise?: boolean;\n}\nexport type ZoneTestSettingsConfigurationsKey = keyof ZoneTestSettingsConfigurations;\nexport const zoneTestSettingsConfigurationsKeys: ZoneTestSettingsConfigurationsKey[] = [\n  'fakeAsyncDisablePatchingClock',\n  'fakeAsyncAutoFakeAsyncWhenClockPatched',\n  'supportWaitUnResolvedChainedPromise',\n];\n\nexport interface ZoneFlagsHelperFunctions {\n  /**\n   * Logs all zone.js configurations in the console.\n   */\n  __rxa_zone_config__log?: () => void;\n}\n","import { isDefined, isObjectGuard } from '../../core';\n\n/**\n * @description\n * Converts a dictionary of type {[key: string]: T} to array T[].\n *\n * @example\n *\n * const creaturesDictionary = {\n *   '1': {id: 1, type: 'cat'},\n *   '2': {id: 2, type: 'dog'},\n *   '3': {id: 3, type: 'parrot'}\n * };\n *\n * const creaturesArray = dictionaryToArray(creaturesDictionary);\n *\n * // creaturesArray will be:\n * // [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}, {id: 3, type: 'parrot'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *    readonly removeName$ = new Subject();\n *\n *    constructor(\n *      private state: RxState<ComponentState>,\n *      private api: ApiService\n *    ) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.api.creaturesDictionary$,\n *        (_, creatures) => {\n *            return dictionaryToArray(creatures);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    removeName(): void {\n *      this.api.creaturesDictionary$.pipe(\n *        // subscription handling logic\n *      ).subscribe(\n *        dictionary => this.set({creatures: dictionaryToArray(dictionary)})\n *      );\n *    }\n * }\n *\n * @returns T[];\n *\n * @docsPage dictionaryToArray\n * @docsCategory transformation-helpers\n */\nexport function dictionaryToArray<T>(dictionary: { [key: string]: T }): T[] {\n  if (!isDefined(dictionary)) {\n    return dictionary;\n  }\n\n  if (!isObjectGuard(dictionary)) {\n    console.warn(`DictionaryToArray: unexpected input.`);\n    return [];\n  }\n\n  return Object.values(dictionary);\n}\n","import { NgModule } from '@angular/core';\n// @TODO dependency to other tool is something we should avoid\nimport { RxSwichModule } from '../../directives/switch/rx-swich.module';\nimport { RxContext } from './rx-context.directive';\nimport { RxContextContainer } from './rx-context.component';\n\nconst DECLARATIONS = [\n  RxContext, RxContextContainer\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [RxSwichModule],\n  exports: DECLARATIONS,\n})\nexport class RxContextModule {}\n","// tslint:disable\nimport { Observable, Subscriber } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { getZoneUnPatchedApi } from '../../utils';\n\n// @ts-ignore\nconst isFunction = (fn) => typeof fn === 'function';\nconst isArray = Array.isArray;\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (\n    eventName: string | symbol,\n    handler: NodeEventHandler\n  ) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener?: ((evt: E) => void) | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport type EventTargetLike<T> =\n  | HasEventTargetAddRemove<T>\n  | NodeStyleEventEmitter\n  | NodeCompatibleEventEmitter\n  | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> =\n  | EventTargetLike<T>\n  | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string\n): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\n// tslint:disable-next-line:unified-signatures\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  resultSelector: (...args: any[]) => T\n): Observable<T>;\n// tslint:disable-next-line:unified-signatures\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\n// tslint:disable-next-line:unified-signatures\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    // @ts-ignore\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(\n      target,\n      eventName,\n      <EventListenerOptions | undefined>options\n    ).pipe(\n      map((args) =>\n        isArray(args) ? resultSelector(...args) : resultSelector(args)\n      )\n    );\n  }\n\n  return new Observable<T>((subscriber) => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(\n      target,\n      eventName,\n      handler,\n      subscriber,\n      options as EventListenerOptions\n    );\n  });\n}\n\nfunction setupSubscription<T>(\n  sourceObj: FromEventTarget<T>,\n  eventName: string,\n  handler: (...args: any[]) => void,\n  subscriber: Subscriber<T>,\n  options?: EventListenerOptions\n) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    getZoneUnPatchedApi('addEventListener', sourceObj).call(\n      sourceObj,\n      eventName,\n      handler,\n      options\n    );\n    unsubscribe = () =>\n      getZoneUnPatchedApi('removeEventListener', source).call(\n        source,\n        eventName,\n        handler,\n        options\n      );\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () =>\n      source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(\n  sourceObj: any\n): sourceObj is NodeStyleEventEmitter {\n  return (\n    sourceObj &&\n    typeof sourceObj.addListener === 'function' &&\n    typeof sourceObj.removeListener === 'function'\n  );\n}\n\nfunction isJQueryStyleEventEmitter(\n  sourceObj: any\n): sourceObj is JQueryStyleEventEmitter {\n  return (\n    sourceObj &&\n    typeof sourceObj.on === 'function' &&\n    typeof sourceObj.off === 'function'\n  );\n}\n\nfunction isEventTarget(\n  sourceObj: any\n): sourceObj is HasEventTargetAddRemove<any> {\n  return (\n    sourceObj &&\n    typeof sourceObj.addEventListener === 'function' &&\n    typeof sourceObj.removeEventListener === 'function'\n  );\n}\n","export const RXLET_VS_PUSH_MENU_ITEMS = [\n  {\n    link: 'rx-let-vs-push',\n    label: 'RxLet vs Push',\n    children: [\n      {\n        link: 'list-toggle',\n        label: 'List toggle',\n      },\n    ],\n  },\n];\n","/** A shared promise instance to cause a delay of one microtask */\nimport { Promise } from '../zone-agnostic/browser/Promise';\n\nlet resolvedPromise: Promise<void> | null = null;\nexport function getResolvedPromise(): Promise<void> {\n  resolvedPromise = resolvedPromise || Promise.resolve();\n  return resolvedPromise;\n}\n","import { ComparableData } from '../interfaces/comparable-data-type';\nimport { isKeyOf } from '../../core';\n\nexport function valuesComparer<T>(\n  original: T,\n  incoming: T,\n  compare?: ComparableData<T>\n): boolean {\n  const defaultCompare = (a: T, b: T) => a === b;\n\n  if (isKeyOf<T>(compare)) {\n    return original[compare] === incoming[compare];\n  }\n\n  if (Array.isArray(compare)) {\n    const sanitizedKeys = compare.filter((k) => isKeyOf<T>(k));\n    return !!sanitizedKeys.length\n      ? sanitizedKeys.every((k) => original[k] === incoming[k])\n      : defaultCompare(original, incoming);\n  }\n\n  return (compare || defaultCompare)(original, incoming);\n}\n","import { MonoTypeOperatorFunction, Observable, OperatorFunction } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { isOperateFnArrayGuard, isStringArrayGuard, pipeFromArray } from '../../core/utils';\nimport { stateful } from './stateful';\n\n/**\n * @description\n * returns the state as shared, replayed and distinct `Observable<T>`. This way you don't have to think about late\n * subscribers, multiple subscribers or multiple emissions of the same value.\n *\n * @example\n * const state$ = state.pipe(select());\n * state$.subscribe(state => doStuff(state));\n *\n * @returns Observable<T>\n */\n\nexport function select<T>(): MonoTypeOperatorFunction<T>;\n\n/**\n * @description\n * returns the state as cached and distinct `Observable<A>`. Accepts arbitrary\n * [rxjs operators](https://rxjs-dev.firebaseapp.com/guide/operators) to enrich the selection with reactive composition.\n *\n * @example\n * const profilePicture$ = state.pipe(\n *   select(\n *    pluck('profilePicture'),\n *    switchMap(profilePicture => mapImageAsync(profilePicture))\n *   )\n * );\n * @param  { OperatorFunction<T, A> } op\n * @returns Observable<A>\n *\n * @docsPage select\n * @docsCategory operators\n */\nexport function select<T, A>(\n  op: OperatorFunction<T, A>\n): OperatorFunction<T, A>;\n/**\n * @internal\n */\nexport function select<T, A, B>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>\n): OperatorFunction<T, B>;\n/**\n * @internal\n */\nexport function select<T, A, B, C>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>\n): OperatorFunction<T, C>;\n/**\n * @internal\n */\nexport function select<T, A, B, C, D>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>\n): OperatorFunction<T, D>;\n/**\n * @internal\n */\nexport function select<T, A, B, C, D, E>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>,\n  op5: OperatorFunction<D, E>\n): OperatorFunction<T, E>;\n\n/**\n * @description\n * Access a single property of the state by providing keys.\n * Returns a single property of the state as cached and distinct `Observable<T[K1]>`.\n *\n * @example\n *  // Access a single property\n * const bar$ = state$.pipe(select('bar'));\n *\n * // Access a nested property\n * const foo$ = state$.pipe(select('bar', 'foo'));\n *\n * @return Observable<T[K1]>\n */\nexport function select<T, K1 extends keyof T>(\n  k1: K1\n): OperatorFunction<T, T[K1]>;\n/**\n * @internal\n */\nexport function select<T, K1 extends keyof T, K2 extends keyof T[K1]>(\n  k1: K1,\n  k2: K2\n): OperatorFunction<T, T[K1][K2]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): OperatorFunction<T, T[K1][K2][K3]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5\n): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5,\n  k6: K6\n): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n\n/**\n * @internal\n */\nexport function select<T>(\n  ...opOrMapFn: OperatorFunction<T, any>[] | string[]\n): OperatorFunction<T, any> {\n  return (state$: Observable<T>) => {\n    if (!opOrMapFn || opOrMapFn.length === 0) {\n      return state$.pipe(stateful());\n    } else if (isStringArrayGuard(opOrMapFn)) {\n      return state$.pipe(stateful(pluck(...opOrMapFn)));\n    } else if (isOperateFnArrayGuard(opOrMapFn)) {\n      return state$.pipe(stateful(pipeFromArray(opOrMapFn)));\n    } else {\n      throw new Error('wrong params passed to select');\n    }\n  };\n}\n","import { OperatorFunction } from 'rxjs';\nimport { map, materialize, tap } from 'rxjs/operators';\nimport { RxNotification, RxNotificationKind } from '../model';\n\nexport function rxMaterialize<T>(): OperatorFunction<T, RxNotification<T>> {\n  return o$ => o$.pipe(\n    materialize(),\n    tap(({ kind, error }) => {\n      if (kind === 'E') {\n        console.error(error);\n      }\n    }),\n    map(({ value, hasValue, error, kind }) => ({\n      value,\n      hasValue,\n      error,\n      kind: notificationKindToRxNotificationKind(kind)\n    }))\n  );\n}\n\nexport function notificationKindToRxNotificationKind(kind: 'N' | 'E' | 'C'): RxNotificationKind {\n  switch (kind) {\n    case 'C':\n      return 'rxComplete';\n    case 'E':\n      return 'rxError';\n    case 'N':\n    default:\n      return 'rxNext';\n  }\n}\n","import { Notification, Observable, OperatorFunction } from 'rxjs';\nimport {\n  RxCompleteNotification,\n  RxErrorNotification,\n  RxNotification,\n  RxNotificationKind,\n} from '../model';\nimport { map, materialize, tap } from 'rxjs/operators';\nimport {\n  toRxCompleteNotification,\n  toRxErrorNotification,\n} from './notification-transforms';\n\nconst notificationToRxNotification = <T>(\n  notification: Notification<T>\n): RxNotification<T> => {\n  const kind = rxJsToRxA[notification.kind];\n  if (kind === RxNotificationKind.error) {\n    return toRxErrorNotification(notification.error);\n  }\n  if (kind === RxNotificationKind.complete) {\n    return toRxCompleteNotification(notification.value);\n  }\n\n  return {\n    ...notification,\n    error: false,\n    complete: false,\n    kind,\n  };\n};\n\nconst rxJsToRxA: Record<'N' | 'E' | 'C', RxNotificationKind> = {\n  C: RxNotificationKind.complete,\n  E: RxNotificationKind.error,\n  N: RxNotificationKind.next,\n};\n\nexport function rxMaterialize<T>(): OperatorFunction<T, RxNotification<T>> {\n  return (o$: Observable<T>): Observable<RxNotification<T>> =>\n    o$.pipe(\n      materialize(),\n      /*tap(({ kind, error }) => {\n        if (kind === 'E') {\n          console.error(error);\n        }\n      }),*/\n      map(notificationToRxNotification)\n    );\n}\n","import { NgModule } from '@angular/core';\nimport { IfVisibleDirective } from './if-visible.directive';\nimport { CommonModule } from '@angular/common';\n\nconst DECLARATIONS = [\n  IfVisibleDirective\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    CommonModule\n  ],\n  exports: DECLARATIONS,\n  providers: []\n})\nexport class IfVisibleModule {\n}\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { Subscription } from 'rxjs';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(\n    protected scheduler: QueueScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    // @ts-ignore\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed\n      ? super.execute(state, delay)\n      : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(\n    scheduler: QueueScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    // @ts-ignore\n    return scheduler.flush(this);\n  }\n}\n","import { RxBaseTemplateNames, rxBaseTemplateNames } from '@rx-angular/cdk';\n\nexport type rxIfTemplateNames = 'rxThen' | 'rxElse' | rxBaseTemplateNames;\n\nexport const RxIfTemplateNames = {\n  ...RxBaseTemplateNames,\n  then: 'rxThen',\n  else: 'rxElse'\n} as const;\n","import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { createTemplateManager, RxNotificationKind, RxTemplateManager, RxStrategyCredentials } from '@rx-angular/cdk';\n\nimport { isObservable, Observable, of, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { Hooks } from '../../../cdk/hooks/hooks';\nimport { RxStrategyProvider } from '@rx-angular/cdk';\nimport { RxContextTemplateNames, rxContextTemplateNames, RxContextViewContext } from './model';\nimport { distinctUntilChanged, filter, map, mapTo, startWith, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { RxState } from '@rx-angular/state';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[rxContext]',\n  providers: [RxState]\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class RxContext<U> extends Hooks implements OnInit, OnDestroy {\n\n  @Input()\n  set rxContext(potentialObservable: Observable<U> | null | undefined) {\n    // this.rxState.connect('templateName', potentialObservable.pipe(toTemplateName()));\n  }\n\n  @Input('rxContextStrategy')\n  set strategy(strategyName$: string | Observable<string> | undefined) {\n    this.rxState.connect('strategyName', isObservable(strategyName$) ? strategyName$ : of(strategyName$));\n  }\n\n  @Input('rxContextCompleteTpl')\n  set rxComplete(templateRef: TemplateRef<RxContextViewContext<U | undefined | null> | null>) {\n    this.templateManager.addTemplateRef(RxContextTemplateNames.complete, templateRef);\n  }\n\n  @Input('rxContextErrorTpl')\n  set rxError(templateRef: TemplateRef<RxContextViewContext<U | undefined | null> | null>) {\n    this.templateManager.addTemplateRef(RxContextTemplateNames.error, templateRef);\n  }\n\n  @Input('rxContextSuspenseTpl')\n  set rxSuspense(templateRef: TemplateRef<RxContextViewContext<U | undefined | null> | null>) {\n    this.templateManager.addTemplateRef(RxContextTemplateNames.suspense, templateRef);\n  }\n\n  @Input('rxContextCompleteTrg')\n  set rxCompleteTrigger(complete$: Observable<any>) {\n    this.rxState.connect('templateName', complete$.pipe(mapTo(RxNotificationKind.complete)));\n  }\n\n  @Input('rxContextErrorTrg')\n  set rxErrorTrigger(error$: Observable<any>) {\n    this.rxState.connect('templateName', error$.pipe(mapTo(RxNotificationKind.error)));\n  }\n\n  @Input('rxContextSuspenseTrg')\n  set rxSuspenseTrigger(suspense$: Observable<any>) {\n    this.rxState.connect('templateName', suspense$.pipe(mapTo(RxNotificationKind.suspense)));\n  }\n\n  constructor(\n    private strategyProvider: RxStrategyProvider,\n    public cdRef: ChangeDetectorRef,\n    private readonly nextTemplateRef: TemplateRef<RxContextViewContext<U>>,\n    private readonly viewContainerRef: ViewContainerRef,\n    private readonly rxState: RxState<{\n      templateName: RxNotificationKind,\n      strategyName: string\n    }>\n  ) {\n    super();\n   /* this.templateManager = createTemplateManager(\n      this.viewContainerRef,\n      this.initialViewContext\n    );*/\n\n  }\n\n  static ngTemplateGuard_rxContext: 'binding';\n\n  strategy$: Observable<any/*RxStrategyCredentials*/> = this.rxState.select(\n    // ngInputFlatten(),\n    startWith(this.strategyProvider.primaryStrategy),\n    // nameToStrategyCredentials(this.strategyProvider.strategies, this.strategyProvider.primaryStrategy)\n  );\n\n  observablesFromTemplate$ = new ReplaySubject<Observable<U>>(1);\n  valuesFromTemplate$ = this.observablesFromTemplate$.pipe(\n    distinctUntilChanged()\n  );\n\n  private subscription: Unsubscribable = Subscription.EMPTY;\n\n  private readonly templateManager: RxTemplateManager<U, RxContextViewContext<U | undefined | null>, rxContextTemplateNames>;\n\n  private readonly initialViewContext: RxContextViewContext<U> = {\n    $implicit: undefined,\n    $error: false,\n    $complete: false,\n    $suspense: false\n  };\n\n  /** @internal */\n  static ngTemplateContextGuard<U>(\n    dir: RxContext<U>,\n    ctx: unknown | null | undefined\n  ): ctx is RxContextViewContext<U> {\n    return true;\n  }\n\n  ngOnInit() {\n    this.templateManager.addTemplateRef(RxContextTemplateNames.content, this.nextTemplateRef);\n    // this.templateManager.displayView(RxContextTemplateNames.content);\n\n    if(!this.rxState.get('templateName')) {\n      this.rxState.set({ templateName: RxNotificationKind.suspense });\n    }\n\n    /*this.rxState.hold(this.rxState.select(\n      map(s => s.templateName),\n      distinctUntilChanged(),\n      withLatestFrom(this.strategy$),\n      switchMap(([templateName, strategy]) => {\n        return of(templateName).pipe(\n          strategy.behavior(() => {\n           /!* const name = this.templateManager.getTemplateName(templateName as any, RxContextTemplateNames.content);\n            // this.templateManager.displayContextView(name);\n            const view = this.templateManager.getEmbeddedView(name);*!/\n           /!* if (view) {\n              strategy.work(view, view);\n            }*!/\n            strategy.work(this.cdRef, (this.cdRef as any)?.context || this.cdRef);\n          }, this)\n        );\n      })\n      )\n    );*/\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    // this.templateManager.destroy();\n  }\n\n}\n\nfunction toTemplateName<T>() {\n  /*return (o$: Observable<T>): Observable<RxNotificationKind> => o$.pipe(\n    rxMaterialize(),\n    filter(notification => notification.kind === RxNotificationKind.next),\n    map(n => n.kind)\n  );*/\n}\n","import { isObjectGuard } from '../../core';\n\n/**\n * @description\n * Merges an object of type T with updates of type Partial<T>.\n * Returns a new object where updates override original values while not mutating the original one.\n\n * @example\n * interface Creature {\n *  id: number,\n *  type: string,\n *  name: string\n * }\n *\n * const cat = {id: 1, type: 'cat'};\n *\n * const catWithname = patch(cat, {name: 'Fluffy'});\n *\n * // catWithname will be:\n * // {id: 1, type: 'cat', name: 'Fluffy'};\n *\n * @example\n * // Usage with RxState\n *\n * export class ProfileComponent {\n *\n *    readonly changeName$ = new Subject<string>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        this.changeName$,\n *        (state, name) => {\n *            return patch(state, { name });\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    changeName(name: string): void {\n *        this.state.set(patch(this.get(), { name }));\n *    }\n * }\n *\n * @returns T\n *\n * @docsPage patch\n * @docsCategory transformation-helpers\n */\nexport function patch<T extends object>(object: T, upd: Partial<T>): T {\n  const update = isObjectGuard(upd) ? upd : {};\n\n  if (!isObjectGuard(object) && isObjectGuard(upd)) {\n    console.warn(`Patch: original value ${object} is not an object.`);\n    return { ...update } as T;\n  }\n\n  if (!isObjectGuard(object) && !isObjectGuard(upd)) {\n    console.warn(\n      `Patch: original value ${object} and updates ${upd} are not objects.`\n    );\n    return object;\n  }\n\n  return { ...object, ...update };\n}\n","export * from './accumulation-observable';\nexport * from './side-effect-observable';\n","import { ɵglobal } from '@angular/core';\n\n/**\n * getZoneUnPatchedApi\n *\n * @description\n *\n * This function returns the zone un-patched API for the a specific Browser API.\n * If no element is passed the window is used instead\n *\n * @param name {string} - The name of the API to check.\n * @param elem {any} - The elem to get un-patched API from.\n * @return {Function} - The zone un-patched API in question.\n *\n */\nexport function getZoneUnPatchedApi<T = Function>(name: string, elem: object = ɵglobal): T {\n  return isApiZonePatched(name, elem) ? elem['__zone_symbol__' + name] : elem[name];\n}\n\n\n/**\n * envZonePatched\n *\n * @description\n *\n * This function checks the window object `zone.js` was instantiated.\n * If so, the `window` object maintains a property named `Zone`.\n *\n * Here how Angular checks it: https://github.com/angular/angular/blob/master/packages/core/src/zone/ng_zone.ts#L123\n *\n * @return {boolean} - true if `zone.js` patched global APIs.\n *\n */\nexport function isEnvZonePatched(): boolean {\n  return ɵglobal.Zone !== undefined;\n}\n\n/**\n * apiZonePatched\n *\n * @description\n *\n * This function checks if a specific Browser API is patched by `zone.js`.\n *\n * @param name - The name of the API to check.\n * @param elem - The name of the API to check.\n * @return {boolean} - true if `zone.js` patched the API in question.\n *\n */\nexport function isApiZonePatched(name: string, elem: object): boolean {\n  // if symbol is present, zone patched the API\n  return elem['__zone_symbol__' + name] !== undefined;\n}\n\nconst zoneDetectionCache = new WeakMap<any, boolean>();\n\n/**\n * isNgZone\n *\n * @description\n *\n * This function takes an instance of a class which implements the NgZone interface and checks if\n * its `runOutsideAngular()` function calls `apply()` on the function passed as parameter. This\n * means the Angular application that instantiated this service assumes it runs in a ZoneLess\n * environment, and therefore it's change detection will not be triggered by zone related logic.\n *\n * However, keep in mind this does not mean `zone.js` is not present.\n * The environment could still run in ZoneFull mode even if Angular turned it off.\n * Consider the situation of a Angular element configured for ZoneLess\n * environments is used in an Angular application relining on the zone mechanism.\n *\n * @param instance {Class Instance} - The instance to check for constructor name of `NgZone`.\n * @return {boolean} - true if instance is of type `NgZone`.\n *\n */\nexport function isNgZone(instance: any): boolean {\n  const cachedValue = zoneDetectionCache.get(instance);\n\n  if (cachedValue !== undefined) {\n    return cachedValue;\n  }\n\n  let calledApply = false;\n\n  function fn() {\n  }\n\n  fn.apply = () => (calledApply = true);\n\n  instance.runOutsideAngular(fn);\n  zoneDetectionCache.set(instance, calledApply);\n\n  return calledApply;\n}\n\n/**\n * isNoopNgZone\n *\n *@description\n *\n * This function takes any instance of a class and checks\n * if the constructor name is equal to `NoopNgZone`.\n *\n * For more detailed information read the description of [isNgZone](#isngzone).\n *\n * @param instance {Class Instance} - The instance to check for constructor name of `NoopNgZone`.\n * @return {boolean} - true if instance is of type `NoopNgZone`.\n *\n */\nexport function isNoopNgZone(instance: any): boolean {\n  return !isNgZone(instance);\n}\n\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n\n// tslint:disable\nimport { Promise } from '../../../browser';\n\nlet nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nconst Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(\n    protected scheduler: AsapScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(\n    scheduler: AsapScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return (\n      scheduler.scheduled ||\n      (scheduler.scheduled = Immediate.setImmediate(\n        scheduler.flush.bind(scheduler, undefined)\n      ))\n    );\n  }\n  protected recycleAsyncId(\n    scheduler: AsapScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n","export * from './rx-effects';\n","import { getZoneUnPatchedApi } from '../zone-checks';\n\nexport const Promise: PromiseConstructor = getZoneUnPatchedApi('Promise');\n","export const MENU_ITEMS = [\n  {\n    label: 'RxState and reactive forms',\n    link: 'rx-state-and-reactive-forms'\n  },\n  {\n    label: 'RxState as presenter',\n    link: 'rx-state-as-presenter'\n  },\n  {\n    label: 'RxState in the view',\n    link: 'rx-state-in-the-view'\n  },\n  {\n    label: 'RxState and subjects',\n    link: 'rx-state-and-subjects'\n  },\n  {\n    label: 'Starter',\n    link: 'starter'\n  }\n];\n","export * from './model'\nexport * from './utils'\nexport * from './hooks'\n","// EXPERIMENTAL\nexport { UnpatchEventsModule } from './lib/experimental/unpatch/events/unpatch-events.experimental.module';\nexport { UnpatchEventsDirective } from './lib/experimental/unpatch/events/unpatch-events.experimental.directive';\n\nexport { ViewportPrioModule } from './lib/experimental/viewport-prio/viewport-prio.module';\nexport { ViewportPrioDirective } from './lib/experimental/viewport-prio/viewport-prio.experimental.directive';\n\n// STABLE\nexport { PushPipe } from './lib/push/push.pipe';\nexport { PushModule } from './lib/push/push.module';\n\nexport { LetModule } from './lib/let/let.module';\nexport { LetDirective } from './lib/let/let.directive';\n","import {\n  MonoTypeOperatorFunction,\n  Observable,\n  Observer,\n  SubscribableOrPromise,\n  Subscriber,\n  Subscription,\n  Unsubscribable\n} from 'rxjs';\nimport { coalescingManager } from '../../../utils/coalescing-manager';\n\n/**\n * @description\n * Limits the number of synchronous emitted a value from the source Observable to\n * one emitted value per\n *   [`AnimationFrame`](https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame), then repeats\n *   this process for every tick of the browsers event loop.\n *\n * The coalesce operator is based on the [throttle](https://rxjs-dev.firebaseapp.com/api/operators/throttle) operator.\n * In addition to that is provides emitted values for the trailing end only, as well as maintaining a context to scope\n *   coalescing.\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector - A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * It defaults to `requestAnimationFrame` as durationSelector.\n * @param {Object} config - A configuration object to define `leading` and `trailing` behavior and the context object.\n * Defaults to `{ leading: false, trailing: true }`. The default scoping is per subscriber.\n * @return {Observable<T>} An Observable that performs the coalesce operation to\n * limit the rate of emissions from the source.\n *\n * @usageNotes\n * Emit clicks at a rate of at most one click per second\n * ```typescript\n * import { fromEvent, animationFrames } from 'rxjs';\n * import { coalesce } from 'ngRx/component';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(coalesce(ev => animationFrames));\n * result.subscribe(x => console.log(x));\n * ```\n */\nexport function coalesceWith<T>(\n  durationSelector: Observable<any>,\n  scope?: object\n): MonoTypeOperatorFunction<T> {\n  // tslint:disable-next-line:variable-name\n  const _scope = scope || {};\n\n  return (source) => {\n    const o$ = new Observable<T>((observer) => {\n      const rootSubscription = new Subscription();\n      rootSubscription.add(\n        source.subscribe(createInnerObserver(observer, rootSubscription))\n      );\n      return rootSubscription;\n    });\n\n    return o$;\n\n    function createInnerObserver(\n      outerObserver: Subscriber<T>,\n      rootSubscription: Subscription\n    ): Observer<T> {\n      let actionSubscription: Unsubscribable;\n      let latestValue: T | undefined;\n\n      const tryEmitLatestValue = () => {\n        if (actionSubscription) {\n          // We only decrement the number if it is greater than 0 (isCoalescing)\n          coalescingManager.decrement(_scope);\n          if (!coalescingManager.isCoalescing(_scope)) {\n            outerObserver.next(latestValue);\n          }\n        }\n      };\n      return {\n        complete: () => {\n          tryEmitLatestValue();\n          outerObserver.complete();\n        },\n        error: (error) => outerObserver.error(error),\n        next: (value) => {\n          latestValue = value;\n          if (!actionSubscription) {\n            // tslint:disable-next-line:no-unused-expression\n            coalescingManager.increment(_scope);\n            actionSubscription = durationSelector.subscribe({\n              error: (error) => outerObserver.error(error),\n              next: () => {\n                tryEmitLatestValue();\n                actionSubscription.unsubscribe();\n                actionSubscription = undefined;\n              },\n              complete: () => {\n                tryEmitLatestValue();\n                actionSubscription = undefined;\n              }\n            });\n            rootSubscription.add(new Subscription(() => {\n              tryEmitLatestValue();\n              if (actionSubscription) {\n                actionSubscription.unsubscribe();\n                actionSubscription = undefined;\n              }\n            }));\n          }\n        }\n      };\n    }\n  };\n}\n","import { Observable, Subject } from 'rxjs';\nimport { RxNotification } from '../model';\nimport { mergeAll, share } from 'rxjs/operators';\nimport { hotFlatten } from './hotFlatten';\n\n/**\n * @internal\n *\n * A factory function returning an object to handle the process of switching templates by Notification channel.\n * You can next a Observable of `RxNotification` multiple times and merge them into the Observable exposed under `trigger$`\n *\n */\nexport function templateTriggerHandling<T>(): {\n  trigger$: Observable<RxNotification<T>>;\n  next(templateName: Observable<RxNotification<T>>): void;\n} {\n  const hotFlattened = hotFlatten(\n    () => new Subject<Observable<RxNotification<T> | RxNotification<T>>>(),\n    mergeAll()\n  );\n  return {\n    next(templateName: Observable<RxNotification<T> | RxNotification<T>>) {\n      hotFlattened.next(templateName);\n    },\n    trigger$: hotFlattened.values$.pipe(share()),\n  };\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { promiseMarkerFactory } from './app/shared/utils/measure';\n\n// if (environment.production) {\n  enableProdMode();\n// }\n\nconst compilerOptions = environment.zoneless\n  ? ({ ngZone: 'noop' } as any)\n  : undefined;\nconst mP = promiseMarkerFactory('Bootstrap');\nmP.wrap(\n  platformBrowserDynamic().bootstrapModule(AppModule)\n).catch((err) => console.error(err));\n","export * from './properties-weakmap';\nexport * from './unpatched-resolved-promise';\nexport * from './zone-checks';\nexport * from './coalescing-manager';\n","import { MENU_ITEMS as RX_LET_MENU_ITEMS } from './rx-let/rx-let.menu';\nimport { MENU_ITEMS as RX_IF_MENU_ITEMS } from './rx-if/rx-if.menu';\nimport { MENU_ITEMS as RX_CONTEXT_MENU_ITEMS } from './rx-context/rx-context.menu';\nimport { MENU_ITEMS as RX_FOR_MENU_ITEMS } from './rx-for/rx-for.menu';\nimport { MENU_ITEMS as VIEWPORT_PRIO_MENU_ITEMS } from './viewport-prio/viewport-prio.menu';\nimport { MENU_ITEMS as STRATEGY_MENU_ITEMS } from './strategies/concurrent-strategies.menu';\nimport { MENU_ITEMS as PIPES_MENU_ITEMS } from './pipes/pipes.menu';\n\nexport const TEMPLATE_MENU = [\n\n  {\n    label: 'Pipes',\n    link: 'pipes',\n    children: PIPES_MENU_ITEMS,\n  },\n  {\n    label: 'rxContext',\n    link: 'rx-context',\n    children: RX_CONTEXT_MENU_ITEMS,\n  },\n  {\n    label: '*rxLet',\n    link: 'rx-let',\n    children: RX_LET_MENU_ITEMS,\n  },\n  {\n    label: '*rxIf',\n    link: 'rx-if',\n    children: RX_IF_MENU_ITEMS,\n  },\n  {\n    label: '*rxFor',\n    link: 'rx-for',\n    children: RX_FOR_MENU_ITEMS,\n  },\n  {\n    link: 'render-callback',\n    label: 'Render Callback'\n  },\n  {\n    label: 'Unpatch',\n    link: 'unpatch'\n  },\n  {\n    label: 'Strategies',\n    link: 'strategies',\n    children: STRATEGY_MENU_ITEMS,\n  },\n  {\n    label: 'ViewPort Prio',\n    link: 'view-port-prio',\n    children: VIEWPORT_PRIO_MENU_ITEMS,\n  }\n];\n","/**\n * @description\n *\n * A fallback for the new `globalThis` reference.\n *\n *  It should be used to replace `window` due to different environments in:\n *  - SSR (Server Side Rendering)\n *  - Tests\n *  - Browser\n *\n *  @return {globalThis} - A reference to globalThis. `window` in the Browser.\n */\nexport function getGlobalThis(): any {\n  // tslint:disable-next-line:no-unused-expression triple-equals\n  return 'undefined' != typeof globalThis\n      ? globalThis\n      // tslint:disable-next-line:no-unused-expression triple-equals\n      : 'undefined' != typeof window\n      ? window\n      // tslint:disable-next-line:no-unused-expression triple-equals\n      : 'undefined' != typeof self\n      ? self\n      : {};\n}\n","import { NgModule } from '@angular/core';\nimport { RxSwitch } from './rx-switch.directive';\nimport { RxSwitchCase } from './rx-switch-case.directive';\n\n@NgModule({\n  declarations: [RxSwitch, RxSwitchCase],\n  exports: [RxSwitch, RxSwitchCase],\n  imports: [],\n})\nexport class RxSwichModule {}\n","export * from './stateful';\nexport * from './select';\nexport * from './distinctUntilSomeChanged';\nexport * from './selectSlice';\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef, ErrorHandler,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  createTemplateManager,\n  hotFlatten,\n  RxNotificationKind,\n  RxTemplateManager,\n  toRxCompleteNotification,\n  toRxErrorNotification,\n  toRxSuspenseNotification,\n  RxStrategyProvider, templateNotifier,\n} from '@rx-angular/cdk';\n\nimport {\n  defer,\n  NextObserver,\n  Observable,\n  ObservableInput,\n  ReplaySubject,\n  Subject,\n  Subscription,\n} from 'rxjs';\nimport { map, mapTo, mergeAll } from 'rxjs/operators';\nimport { Hooks } from '../../../cdk';\nimport {\n  RxLetTemplateNames,\n  rxLetTemplateNames,\n  RxLetViewContext,\n} from './model';\n\n/**\n * @Directive LetDirective\n *\n * @description\n *\n * The `*rxLet` directive serves a convenient way of binding observables to a view context. Furthermore, it helps\n * you structure view-related models into view context scope (DOM element's scope).\n *\n * Under the hood, it leverages a `RenderStrategy` which in turn takes care of optimizing the change detection\n * of your component or embedded view. The `LetDirective` will render its template and manage change detection after it\n *   got an initial value. So if the incoming `Observable` emits its value lazily (e.g. data coming from `Http`), your\n *   template will be rendered lazily as well. This can very positively impact the initial render performance of your\n *   application.\n *\n *\n * ### Problems with `async` and `*ngIf`\n *\n * In Angular, a way of binding an observable to the view could look like that:\n * ```html\n * <ng-container *ngIf=\"observableNumber$ | async as n\">\n *   <app-number [number]=\"n\"></app-number>\n *   <app-number-special [number]=\"n\"></app-number-special>\n * </ng-container>\n * ```\n *\n * The problem is that `*ngIf` interferes with rendering and in case of a `0` (a falsy value) the component\n * would be hidden. This issue doesn't concern the `LetDirective`.\n *\n * The `AsyncPipe` relies on the Zone to be present - it doesn't really trigger change detection by itself.\n * It marks the component and its children as dirty waiting for the Zone to trigger change detection. So, in case\n * you want to create a zone-less application, the `AsyncPipe` won't work as desired. `LetDirective` comes\n * with its own strategies to manage change detection every time a new notification is sent from\n * the bound Observable.\n *\n *\n * ### Features of `*rxLet`\n *\n * Included features for `*rxLet`:\n * - binding is always present. (see \"Problems with `async` and `*ngIf`\" section below)\n * - it takes away the multiple usages of the `async` or `push` pipe\n * - a unified/structured way of handling null and undefined\n * - triggers change-detection differently if `zone.js` is present or not (`ChangeDetectorRef.detectChanges` or\n *   `ChangeDetectorRef.markForCheck`)\n * - triggers change-detection differently if ViewEngine or Ivy is present (`ChangeDetectorRef.detectChanges` or\n *   `ɵdetectChanges`)\n * - distinct same values in a row (`distinctUntilChanged` operator),\n * - display custom templates for different observable notifications (rxSuspense, rxNext, rxError, rxComplete)\n * - notify about after changes got rendered to the template (RenderCallback)\n *\n *\n * ### Binding an Observable and using the view context\n *\n * The `*rxLet` directive takes over several things and makes it more convenient and save to work with streams in the\n * template:\n *\n * ```html\n * <ng-container *rxLet=\"observableNumber$; let n\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n *\n * <ng-container *rxLet=\"observableNumber$ as n\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n * ```\n *\n * In addition to that it provides us information from the whole observable context.\n * We can track the observables:\n * - next value\n * - error occurrence\n * - complete occurrence\n *\n * ```html\n * <ng-container *rxLet=\"observableNumber$; let n; let e = $rxError, let c = $rxComplete\">\n *   <app-number [number]=\"n\" *ngIf=\"!e && !c\"></app-number>\n *   <ng-container *ngIf=\"e\">\n *     There is an error: {{ e }}\n *   </ng-container>\n *   <ng-container *ngIf=\"c\">\n *     Observable completed: {{ c }}\n *   </ng-container>\n * </ng-container>\n * ```\n *\n *\n * ### Using the template-binding\n *\n * You can also use template anchors and display template's content for different observable states:\n * - on complete\n * - on error\n * - on suspense - before the first value is emitted\n *\n * ```html\n * <ng-container\n *   *rxLet=\"\n *     observableNumber$;\n *     let n;\n *     rxError: error;\n *     rxComplete: complete;\n *     rxSuspense: suspense;\n *   \"\n * >\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n * <ng-template #error>ERROR</ng-template>\n * <ng-template #complete>COMPLETE</ng-template>\n * <ng-template #suspense>SUSPENSE</ng-template>\n * ```\n *\n * Internally, `*rxLet` is using a simple \"view memoization\" - it caches all anchored template references and re-uses\n * them whenever the observable notification (next/error/complete) is sent. Then, it only updates the context\n * (e.g. a value from the observable) in the view.\n *\n *\n * @docsCategory LetDirective\n * @docsPage LetDirective\n * @publicApi\n */\n@Directive({\n  selector: '[rxLet]',\n  providers: [],\n})\nexport class RxLet<U> implements OnInit, OnDestroy {\n  static ngTemplateGuard_rxLet: 'binding';\n\n  /**\n   * @description\n   * The Observable to be bound to the context of a template.\n   *\n   * @example\n   * <ng-container *rxLet=\"hero$; let hero\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   *\n   * @param potentialObservable\n   */\n  @Input()\n  set rxLet(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observablesHandler.next(potentialObservable);\n  }\n\n  /**\n   * @description\n   * The rendering strategy to be used when rendering with the reactive context within a template.\n   * Use it to dynamically manage your rendering strategy. You can switch the strategies\n   * imperatively (with a string) or by bounding an Observable.\n   * The default strategy is `'local'`.\n   *\n   * @example\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *     <ng-container *rxLet=\"hero$; let hero; strategy: strategy\">\n   *       <app-hero [hero]=\"hero\"></app-hero>\n   *     </ng-container>\n   *   `\n   * })\n   * export class AppComponent {\n   *   strategy = 'local';\n   * }\n   *\n   * // OR\n   *\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *     <ng-container *rxLet=\"hero$; let hero; strategy: strategy$\">\n   *       <app-hero [hero]=\"hero\"></app-hero>\n   *     </ng-container>\n   *   `\n   * })\n   * export class AppComponent {\n   *   strategy$ = new BehaviorSubject('local');\n   * }\n   *\n   * @param strategy\n   * @see {@link strategies}\n   */\n  @Input('rxLetStrategy')\n  set strategy(strategyName: string | Observable<string> | undefined) {\n    this.strategyHandler.next(strategyName);\n  }\n\n  /**\n   * @description\n   * A template to show if the bound Observable is in \"complete\" state.\n   *\n   * @example\n   * <ng-container *rxLet=\"hero$; let hero; rxComplete: completeTemplate\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   * <ng-template #completeTemplate>\n   *   <mat-icon>thumb_up</mat-icon>\n   * </ng-template>\n   *\n   * @param templateRef\n   */\n  @Input('rxLetCompleteTpl')\n  set rxComplete(\n    templateRef: TemplateRef<RxLetViewContext<U | undefined | null> | null>\n  ) {\n    this.templateManager.addTemplateRef(\n      RxLetTemplateNames.complete,\n      templateRef\n    );\n  }\n\n  /**\n   * @description\n   * A template to show if the bound Observable is in \"error\" state.\n   *\n   * @example\n   * <ng-container *rxLet=\"hero$; let hero; rxError: errorTemplate\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   * <ng-template #errorTemplate>\n   *   <mat-icon>thumb_down</mat-icon>\n   * </ng-template>\n   *\n   * @param templateRef\n   */\n  @Input('rxLetErrorTpl')\n  set rxError(\n    templateRef: TemplateRef<RxLetViewContext<U | undefined | null> | null>\n  ) {\n    this.templateManager.addTemplateRef(RxLetTemplateNames.error, templateRef);\n  }\n\n  /**\n   * @description\n   * A template to show before the first value is emitted from the bound Observable.\n   *\n   * @example\n   * <ng-container *rxLet=\"hero$; let hero; rxSuspense: suspenseTemplate\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   * <ng-template #suspenseTemplate>\n   *   <mat-progress-spinner></mat-progress-spinner>\n   * </ng-template>\n   *\n   * @param templateRef\n   */\n  @Input('rxLetSuspenseTpl')\n  set rxSuspense(\n    templateRef: TemplateRef<RxLetViewContext<U | undefined | null> | null>\n  ) {\n    this.templateManager.addTemplateRef(\n      RxLetTemplateNames.suspense,\n      templateRef\n    );\n  }\n\n  @Input('rxLetCompleteTrg')\n  set rxCompleteTrigger(trigger$: Observable<any>) {\n    this.triggerHandler.next(\n      trigger$.pipe(mapTo(toRxCompleteNotification() as any))\n    );\n  }\n\n  @Input('rxLetErrorTrg')\n  set rxErrorTrigger(error$: Observable<any>) {\n    this.triggerHandler.next(error$.pipe(map(toRxErrorNotification as any)));\n  }\n\n  @Input('rxLetSuspenseTrg')\n  set rxSuspenseTrigger(trigger$: Observable<any>) {\n    this.triggerHandler.next(\n      trigger$.pipe(map(toRxSuspenseNotification as any))\n    );\n  }\n\n  @Input('rxLetRenderCallback')\n  set renderCallback(callback: NextObserver<U>) {\n    this._renderObserver = callback;\n  }\n\n  @Input('rxLetParent') renderParent = true;\n\n  @Input('rxLetPatchZone') patchZone = true;\n\n  constructor(\n    private strategyProvider: RxStrategyProvider,\n    public cdRef: ChangeDetectorRef,\n    public eRef: ElementRef,\n    private ngZone: NgZone,\n    private readonly nextTemplateRef: TemplateRef<RxLetViewContext<U>>,\n    private readonly viewContainerRef: ViewContainerRef,\n    private errorHandler: ErrorHandler\n  ) {}\n\n  /** @internal */\n  private observablesHandler = templateNotifier<U>();\n  private strategyHandler = hotFlatten<string>(() => new Subject(), mergeAll());\n  private triggerHandler = hotFlatten<RxNotificationKind>(\n    () => new Subject(),\n    mergeAll()\n  );\n\n  private _renderObserver: NextObserver<any>;\n\n  private subscription: Subscription = new Subscription();\n\n  private templateManager: RxTemplateManager<\n    U,\n    RxLetViewContext<U | undefined | null>,\n    rxLetTemplateNames\n  >;\n\n  private rendered$ = new Subject<void>();\n\n  @Output() readonly rendered = defer(() => this.rendered$.pipe());\n\n  /** @internal */\n  static ngTemplateContextGuard<U>(\n    dir: RxLet<U>,\n    ctx: unknown | null | undefined\n  ): ctx is RxLetViewContext<U> {\n    return true;\n  }\n\n  ngOnInit() {\n    this.templateManager = createTemplateManager<\n      U,\n      RxLetViewContext<U>,\n      rxLetTemplateNames\n    >({\n      templateSettings: {\n        viewContainerRef: this.viewContainerRef,\n        createViewContext,\n        updateViewContext,\n        customContext: (rxLet) => ({ rxLet }),\n        patchZone: this.patchZone ? this.ngZone : false,\n      },\n      renderSettings: {\n        cdRef: this.cdRef,\n        eRef: this.eRef,\n        parent: coerceBooleanProperty(this.renderParent),\n        patchZone: this.patchZone ? this.ngZone : false,\n        defaultStrategyName: this.strategyProvider.primaryStrategy,\n        strategies: this.strategyProvider.strategies,\n        errorHandler: this.errorHandler\n      },\n      notificationToTemplateName: {\n        [RxNotificationKind.suspense]: () => RxLetTemplateNames.suspense,\n        [RxNotificationKind.next]: () => RxLetTemplateNames.next,\n        [RxNotificationKind.error]: () => RxLetTemplateNames.error,\n        [RxNotificationKind.complete]: () => RxLetTemplateNames.complete,\n      },\n      templateTrigger$: this.triggerHandler.values$ as any,\n    });\n    this.templateManager.addTemplateRef(\n      RxLetTemplateNames.next,\n      this.nextTemplateRef\n    );\n    this.templateManager.nextStrategy(this.strategyHandler.values$);\n    this.subscription.add(\n      this.templateManager\n        .render(this.observablesHandler.values$)\n        .subscribe((n) => {\n          this.rendered$.next(n);\n          this._renderObserver?.next(n);\n        })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n\nfunction createViewContext<T>(value: T): RxLetViewContext<T> {\n  return {\n    rxLet: value,\n    $implicit: value,\n    $error: false,\n    $complete: false,\n    $suspense: false,\n  };\n}\n\nfunction updateViewContext<T>(\n  value: T,\n  view: EmbeddedViewRef<RxLetViewContext<T>>,\n  context: RxLetViewContext<T>\n): void {\n  Object.keys(context).forEach((k) => {\n    view.context[k] = context[k];\n  });\n}\n","export const enableIsInputPending = false;\n","import { AfterViewInit, Injectable, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\n\n@Injectable()\nexport abstract class Hooks implements OnDestroy, AfterViewInit, OnChanges {\n  afterViewInit$ = new ReplaySubject(1);\n  onChanges$ = new Subject();\n  onDestroy$ = new ReplaySubject(1);\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.onChanges$.next();\n  }\n\n  ngAfterViewInit(): void {\n    this.afterViewInit$.next();\n    this.afterViewInit$.complete();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n\n    this.onChanges$.complete();\n    this.afterViewInit$.complete();\n    this.onDestroy$.complete();\n  }\n\n}\n","import { PartialObserver } from 'rxjs/internal/types';\nimport { Notification } from 'rxjs';\nimport { RxLetTemplateNames } from '../../../template/directives/let/model';\n\n/**\n * @description\n *\n * Callbacks for the templates main states: suspense, next, error, complete\n */\nexport type RxTemplateObserver<T> = {\n  suspense?: (value?: any) => void;\n} & PartialObserver<T>\n\nexport enum RxNotificationKind {\n  suspense = 'suspense',\n  next = 'next',\n  error = 'error',\n  complete = 'complete'\n}\n\ntype NotificationExtract = 'value' | 'hasValue';\n\nexport type RxNextNotification<T> = Pick<Notification<T>, NotificationExtract> & { kind: RxNotificationKind } & {error: boolean} & {complete: boolean};\nexport type RxSuspenseNotification = Pick<Notification<unknown>, NotificationExtract> & { kind: RxNotificationKind.suspense } & {error: false} & {complete: false};\nexport type RxErrorNotification = Pick<Notification<unknown>, NotificationExtract> & { kind: RxNotificationKind.error } & {error: any} & {complete: false};\nexport type RxCompleteNotification = Pick<Notification<unknown>, NotificationExtract> & { kind: RxNotificationKind.complete } & {complete: boolean} & {error: false};\nexport type RxNotification<T> = RxNextNotification<T> | RxSuspenseNotification | RxErrorNotification | RxCompleteNotification;\n\nexport const notificationToRxNotification = <T>(notification: Notification<T>): RxNotification<T> => {\n  const kind = rxJsToRxA[notification.kind];\n  if(kind === RxNotificationKind.error) {\n    return toRxErrorNotification(notification.error)\n  }\n  if(kind === RxNotificationKind.complete) {\n    return toRxCompleteNotification(notification.value)\n  }\n\n  return {\n    ...notification,\n    error: false,\n    complete: false,\n    kind\n  };\n\n};\n\n\nexport const toRxErrorNotification = (error?: any, value?: any): RxErrorNotification => ({kind: RxNotificationKind.error, hasValue: value || false, value: value || undefined, complete: false, error: error || true});\nexport const toRxSuspenseNotification = (value?: any): RxSuspenseNotification => ({kind: RxNotificationKind.suspense, hasValue: value || false, value, complete: false, error: false});\nexport const toRxCompleteNotification = (value?: any): RxCompleteNotification => ({kind: RxNotificationKind.complete, hasValue: value || false, value, complete: true, error: false});\n\n\nconst rxJsToRxA = {\n'C': RxNotificationKind.complete,\n'E': RxNotificationKind.error,\n'N': RxNotificationKind.next,\n}\nexport function notificationKindToRxNotificationKind(kind: 'N' | 'E' | 'C'): RxNotificationKind {\n  return rxJsToRxA[kind] || RxNotificationKind.next;\n}\n","export * from './rx-swich.module';\nexport * from './rx-switch-case.directive';\nexport * from './rx-switch.directive';\n","export * from './lib/index';\n","import { Observable } from 'rxjs';\nimport { requestAnimationFrame, cancelAnimationFrame } from '../../zone-agnostic';\n\nexport const animationFrameTick = () =>\n  new Observable<number>((subscriber) => {\n    const id = requestAnimationFrame(() => {\n      subscriber.next(0);\n      subscriber.complete();\n    });\n    return () => {\n      cancelAnimationFrame(id);\n    };\n  });\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { Promise } from '../../../browser/browser';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(\n    protected scheduler: AsapScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(\n    scheduler: AsapScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return (\n      scheduler.scheduled ||\n      (scheduler.scheduled = Immediate.setImmediate(\n        scheduler.flush.bind(scheduler, undefined)\n      ))\n    );\n  }\n  protected recycleAsyncId(\n    scheduler: AsapScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n\nlet nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nconst Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  },\n};\n","export * from './view-context';\nexport * from './template-names';\n","import { Observable } from 'rxjs';\n\nexport const timeoutTick = () =>\n  new Observable<number>((subscriber) => {\n    const id = (window as any).__zone_symbol__setTimeout(() => {\n      subscriber.next(0);\n      subscriber.complete();\n    });\n\n    return () => {\n      (window as any).__zone_symbol__clearTimeout(id);\n    };\n  });\n","// tslint:disable file-name-casing\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * NOTE: This is a zone un-patched version of rxjs asyncScheduler\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from '@cu/perf-utils';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from '@cu/perf-utils';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\nexport const async = new AsyncScheduler(AsyncAction);\n","export const TUTORIAL_BASICS_MENU = [\n  {\n    label: 'Setup',\n    link: 'setup'\n  },\n  {\n    label: 'Input Bindings',\n    link: 'input-bindings'\n  },\n  {\n    label: 'Output Bindings',\n    link: 'output-bindings'\n  },\n  {\n    label: 'Global State',\n    link: 'global-state'\n  },\n  {\n    label: 'Side Effects',\n    link: 'side-effects'\n  },\n  {\n    label: 'Presenter Pattern',\n    link: 'presenter-pattern'\n  },\n  {\n    label: 'Demo Basics Completed',\n    link: 'solution'\n  }\n];\n","import {\n  from,\n  isObservable,\n  NEVER,\n  Observable,\n  ObservableInput,\n  of,\n  ReplaySubject,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { RxNotification, RxNotificationKind } from '../model';\nimport { toRxSuspenseNotification } from './notification-transforms';\nimport { rxMaterialize } from './rxMaterialize';\n\n/**\n * @internal\n */\nexport function templateNotifier<U>(\n  withSuspense?: () => boolean\n): {\n  values$: Observable<RxNotification<U>>;\n  next(observable: ObservableInput<U>): void;\n} {\n  const observablesSubject = new ReplaySubject<ObservableInput<U>>(1);\n  let firstRun = true;\n  let latestNextValue: U;\n  const wSuspense = () => withSuspense && withSuspense();\n  const values$ = observablesSubject.pipe(\n    distinctUntilChanged(),\n    // handle null | undefined assignment and new Observable reset\n    map((observable$) => {\n      const isObs = isObservable<U>(observable$);\n      // only pass through initial undefined value to filter out\n      if (firstRun && (observable$ === undefined || observable$ === NEVER)) {\n        return wSuspense() ? NEVER.pipe(startWith(undefined)) : undefined;\n      }\n      const isNull = observable$ == null;\n      if (isNull) {\n        return NEVER.pipe(startWith(observable$));\n      }\n      return (isObs ? (observable$ as Observable<U>) : from(observable$)).pipe(\n        (o$) => {\n          if (!firstRun || (withSuspense && withSuspense())) {\n            return o$.pipe(startWith(undefined));\n          }\n          return o$;\n        }\n      );\n    }),\n    tap(() => (firstRun = false)),\n    filter((v) => v !== undefined),\n    switchMap((o: Observable<U>) => {\n      return o.pipe(\n        distinctUntilChanged(),\n        rxMaterialize(),\n        map((notification) => {\n          latestNextValue =\n            notification.kind === RxNotificationKind.next\n              ? notification.value\n              : latestNextValue;\n          if (\n            notification.kind === RxNotificationKind.next &&\n            latestNextValue === undefined\n          ) {\n            return toRxSuspenseNotification(\n              latestNextValue\n            ) as RxNotification<U>;\n          }\n          return {\n            ...notification,\n            value: latestNextValue,\n          };\n        })\n      );\n    })\n  );\n\n  return {\n    next(observable: ObservableInput<U>) {\n      observablesSubject.next(observable);\n    },\n    values$,\n  };\n}\n","// tslint:disable\nimport { AsyncScheduler } from '../async/AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {}\n","export * from './render-aware';\nexport * from './utils';\nexport * from './hooks';\nexport * from './decorators';\n","export const MENU_ITEMS = [\n  {\n    label: 'Basic Example',\n    link: 'basic-example'\n  }\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { ChangeDetectionStrategy } from '@angular/core';\n\nexport const environment = {\n  production: false,\n  zoneless: false,\n  changeDetection: ChangeDetectionStrategy.Default\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { RxBaseTemplateNames } from '@rx-angular/cdk';\n\nexport type rxContextTemplateNames = 'rxContent' | RxBaseTemplateNames;\n\nexport const RxContextTemplateNames = {\n  ...RxBaseTemplateNames,\n  content: 'rxContent',\n} as const;\n","type KeyOf<O> = keyof O & string & symbol & number;\n\n/*\n * createPropertiesWeakMap\n *\n * @param getDefaults: (o: O) => P\n * Example:\n *\n * export interface Properties {\n *   isCoalescing: boolean;\n * }\n *\n * const obj: object = {\n *   foo: 'bar',\n *   isCoalescing: 'weakMap version'\n * };\n *\n * const getDefaults = (ctx: object): Properties => ({isCoalescing: false});\n * const propsMap = createPropertiesWeakMap<object, Properties>(getDefaults);\n *\n * console.log('obj before:', obj);\n * // {foo: \"bar\", isCoalescing: \"weakMap version\"}\n * console.log('props before:', propsMap.getProps(obj));\n * // {isCoalescing: \"weakMap version\"}\n *\n * propsMap.setProps(obj, {isCoalescing: true});\n * console.log('obj after:', obj);\n * // {foo: \"bar\", isCoalescing: \"weakMap version\"}\n * console.log('props after:', propsMap.getProps(obj));\n * // {isCoalescing: \"true\"}\n * */\nexport function createPropertiesWeakMap<O extends object, P extends object>(\n  getDefaults: (o: O) => P\n) {\n  type K = KeyOf<P>;\n  const propertyMap = new WeakMap<O, P>();\n\n  return {\n    getProps: getProperties,\n    setProps: setProperties\n  };\n\n  function getProperties(ctx: O): P {\n    const defaults = getDefaults(ctx);\n    const propertiesPresent: P | undefined = propertyMap.get(ctx);\n    let properties: P;\n\n    if (propertiesPresent !== undefined) {\n      properties = propertiesPresent;\n    } else {\n      properties = {} as P;\n\n      (Object.entries(defaults) as [K, P[K]][]).forEach(\n        ([prop, value]): void => {\n          properties[prop] = hasKey(ctx, prop) ? ctx[prop] : value;\n        }\n      );\n\n      propertyMap.set(ctx, properties);\n    }\n    return properties;\n  }\n\n  function setProperties(ctx: O, props: Partial<P>): P {\n    const properties: P = getProperties(ctx);\n    (Object.entries(props) as [K, P[K]][]).forEach(([prop, value]) => {\n      properties[prop] = value;\n    });\n    propertyMap.set(ctx, properties);\n    return properties;\n  }\n\n  function hasKey(ctx: O, property: K): ctx is K {\n    return ctx[property] != null;\n  }\n}\n","export {\n  Promise,\n  requestAnimationFrame,\n  cancelAnimationFrame,\n  setInterval,\n  clearInterval,\n  setTimeout,\n  clearTimeout,\n  unpatchAddEventListener,\n} from './browser';\n","export * from './lib/model';\nexport * from './lib/utils';\nexport * from './lib/render-strategies';\nexport * from './lib/template-management';\nexport * from './lib/zone-less';\nexport * from './lib/zone-configuration';\nexport * from './lib/cdk-config';\nexport * from './lib/state';\n","export * from './cdk';\nexport * from './template';\nexport *from './state';\n\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  ErrorHandler,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  createTemplateManager,\n  hotFlatten,\n  templateNotifier,\n  RxNotification,\n  RxNotificationKind,\n  RxTemplateManager,\n  RxStrategyProvider,\n  RxBaseTemplateNames,\n  RxViewContext,\n  RxStrategyNames,\n} from '@rx-angular/cdk';\n\nimport {\n  defer,\n  NextObserver,\n  Observable,\n  ObservableInput,\n  ReplaySubject,\n  Subject,\n  Subscription,\n} from 'rxjs';\nimport { mergeAll } from 'rxjs/operators';\n\n/** @internal */\ntype rxLetTemplateNames = 'nextTpl' | RxBaseTemplateNames;\n\n/** @internal */\nconst RxLetTemplateNames = {\n  ...RxBaseTemplateNames,\n  next: 'nextTpl',\n} as const;\n\n/** @internal */\nexport interface RxLetViewContext<T> extends RxViewContext<T> {\n  // to enable `as` syntax we have to assign the directives selector (var as v)\n  rxLet: T;\n}\n\n/**\n * @Directive LetDirective\n *\n * @description\n *\n * The `*rxLet` directive serves a convenient way of binding observables to a view context. Furthermore, it helps\n * you structure view-related models into view context scope (DOM element's scope).\n *\n * Under the hood, it leverages a `RenderStrategy` which in turn takes care of optimizing the change detection\n * of your component or embedded view. The `LetDirective` will render its template and manage change detection after it\n *   got an initial value. So if the incoming `Observable` emits its value lazily (e.g. data coming from `Http`), your\n *   template will be rendered lazily as well. This can very positively impact the initial render performance of your\n *   application.\n *\n *\n * ### Problems with `async` and `*ngIf`\n *\n * In Angular, a way of binding an observable to the view could look like that:\n * ```html\n * <ng-container *ngIf=\"observableNumber$ | async as n\">\n *   <app-number [number]=\"n\"></app-number>\n *   <app-number-special [number]=\"n\"></app-number-special>\n * </ng-container>\n * ```\n *\n * The problem is that `*ngIf` interferes with rendering and in case of a `0` (a falsy value) the component\n * would be hidden. This issue doesn't concern the `LetDirective`.\n *\n * The `AsyncPipe` relies on the Zone to be present - it doesn't really trigger change detection by itself.\n * It marks the component and its children as dirty waiting for the Zone to trigger change detection. So, in case\n * you want to create a zone-less application, the `AsyncPipe` won't work as desired. `LetDirective` comes\n * with its own strategies to manage change detection every time a new notification is sent from\n * the bound Observable.\n *\n *\n * ### Features of `*rxLet`\n *\n * Included features for `*rxLet`:\n * - binding is always present. (see \"Problems with `async` and `*ngIf`\" section below)\n * - it takes away the multiple usages of the `async` or `push` pipe\n * - a unified/structured way of handling null and undefined\n * - triggers change-detection differently if `zone.js` is present or not (`ChangeDetectorRef.detectChanges` or\n *   `ChangeDetectorRef.markForCheck`)\n * - triggers change-detection differently if ViewEngine or Ivy is present (`ChangeDetectorRef.detectChanges` or\n *   `ɵdetectChanges`)\n * - distinct same values in a row (`distinctUntilChanged` operator),\n * - display custom templates for different observable notifications (rxSuspense, rxNext, rxError, rxComplete)\n * - notify about after changes got rendered to the template (RenderCallback)\n *\n *\n * ### Binding an Observable and using the view context\n *\n * The `*rxLet` directive takes over several things and makes it more convenient and save to work with streams in the\n * template:\n *\n * ```html\n * <ng-container *rxLet=\"observableNumber$; let n\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n *\n * <ng-container *rxLet=\"observableNumber$ as n\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n * ```\n *\n * In addition to that it provides us information from the whole observable context.\n * We can track the observables:\n * - next value\n * - error occurrence\n * - complete occurrence\n *\n * ```html\n * <ng-container *rxLet=\"observableNumber$; let n; let e = $rxError, let c = $rxComplete\">\n *   <app-number [number]=\"n\" *ngIf=\"!e && !c\"></app-number>\n *   <ng-container *ngIf=\"e\">\n *     There is an error: {{ e }}\n *   </ng-container>\n *   <ng-container *ngIf=\"c\">\n *     Observable completed: {{ c }}\n *   </ng-container>\n * </ng-container>\n * ```\n *\n *\n * ### Using the template-binding\n *\n * You can also use template anchors and display template's content for different observable states:\n * - on complete\n * - on error\n * - on suspense - before the first value is emitted\n *\n * ```html\n * <ng-container\n *   *rxLet=\"\n *     observableNumber$;\n *     let n;\n *     rxError: error;\n *     rxComplete: complete;\n *     rxSuspense: suspense;\n *   \"\n * >\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n * <ng-template #error>ERROR</ng-template>\n * <ng-template #complete>COMPLETE</ng-template>\n * <ng-template #suspense>SUSPENSE</ng-template>\n * ```\n *\n * Internally, `*rxLet` is using a simple \"view memoization\" - it caches all anchored template references and re-uses\n * them whenever the observable notification (next/error/complete) is sent. Then, it only updates the context\n * (e.g. a value from the observable) in the view.\n *\n *\n * @docsCategory LetDirective\n * @docsPage LetDirective\n * @publicApi\n */\n@Directive({\n  selector: '[rxLet]',\n  providers: [],\n})\nexport class LetDirective<U> implements OnInit, OnDestroy, OnChanges {\n  static ngTemplateGuard_rxLet: 'binding';\n\n  /**\n   * @description\n   * The Observable to be bound to the context of a template.\n   *\n   * @example\n   * <ng-container *rxLet=\"hero$; let hero\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   *\n   * @param potentialObservable\n   */\n  @Input()\n  set rxLet(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observablesHandler.next(potentialObservable);\n  }\n\n  /**\n   * @description\n   * The rendering strategy to be used when rendering with the reactive context within a template.\n   * Use it to dynamically manage your rendering strategy. You can switch the strategies\n   * imperatively (with a string) or by bounding an Observable.\n   * The default strategy is `'local'`.\n   *\n   * @example\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *     <ng-container *rxLet=\"hero$; let hero; strategy: strategy\">\n   *       <app-hero [hero]=\"hero\"></app-hero>\n   *     </ng-container>\n   *   `\n   * })\n   * export class AppComponent {\n   *   strategy = 'local';\n   * }\n   *\n   * // OR\n   *\n   * \\@Component({\n   *   selector: 'app-root',\n   *   template: `\n   *     <ng-container *rxLet=\"hero$; let hero; strategy: strategy$\">\n   *       <app-hero [hero]=\"hero\"></app-hero>\n   *     </ng-container>\n   *   `\n   * })\n   * export class AppComponent {\n   *   strategy$ = new BehaviorSubject('local');\n   * }\n   *\n   * @param strategy\n   * @see {@link strategies}\n   */\n  @Input('rxLetStrategy')\n  set strategy(strategyName: string | Observable<string> | undefined) {\n    this.strategyHandler.next(strategyName);\n  }\n\n  /**\n   * @description\n   * A template to show if the bound Observable is in \"complete\" state.\n   *\n   * @example\n   * <ng-container *rxLet=\"hero$; let hero; completeTpl: completeTemplate\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   * <ng-template #completeTemplate>\n   *   <mat-icon>thumb_up</mat-icon>\n   * </ng-template>\n   *\n   * @param templateRef\n   */\n  @Input('rxLetRxComplete') // TODO: rename: rxLetCompleteTpl\n  rxComplete: TemplateRef<RxLetViewContext<U | undefined | null> | null>;\n\n  /**\n   * @description\n   * A template to show if the bound Observable is in \"error\" state.\n   *\n   * @example\n   * <ng-container *rxLet=\"hero$; let hero; errorTpl: errorTemplate\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   * <ng-template #errorTemplate>\n   *   <mat-icon>thumb_down</mat-icon>\n   * </ng-template>\n   *\n   * @param templateRef\n   */\n  @Input('rxLetRxError') // TODO: rename: rxLetErrorTpl\n  rxError: TemplateRef<RxLetViewContext<U | undefined | null> | null>;\n\n  /**\n   * @description\n   * A template to show before the first value is emitted from the bound Observable.\n   *\n   * @example\n   * <ng-container *rxLet=\"hero$; let hero; suspenseTpl: suspenseTemplate\">\n   *   <app-hero [hero]=\"hero\"></app-hero>\n   * </ng-container>\n   * <ng-template #suspenseTemplate>\n   *   <mat-progress-spinner></mat-progress-spinner>\n   * </ng-template>\n   *\n   * @param templateRef\n   */\n  @Input('rxLetRxSuspense') // TODO: rename: rxLetSuspenseTpl\n  rxSuspense: TemplateRef<RxLetViewContext<U | undefined | null> | null>;\n\n  @Input('rxLetRenderCallback')\n  set renderCallback(callback: NextObserver<U>) {\n    this._renderObserver = callback;\n  }\n\n  @Input('rxLetParent') renderParent = true;\n\n  @Input('rxLetPatchZone') patchZone = this.strategyProvider.config.patchZone;\n\n  // TODO: enable when tested and documented properly\n  /* @Input('rxLetShowComplete')\n   set showComplete(trigger$: Observable<any>) {\n   this.triggerHandler.next(\n   trigger$.pipe(mapTo(toRxCompleteNotification() as any))\n   );\n   }\n\n   @Input('rxLetShowError')\n   set showError(error$: Observable<any>) {\n   this.triggerHandler.next(error$.pipe(map(toRxErrorNotification as any)));\n   }\n\n   @Input('rxLetShowSuspense')\n   set showSuspense(trigger$: Observable<any>) {\n   this.triggerHandler.next(\n   trigger$.pipe(map(toRxSuspenseNotification as any))\n   );\n   }*/\n\n  constructor(\n    private strategyProvider: RxStrategyProvider,\n    public cdRef: ChangeDetectorRef,\n    public eRef: ElementRef,\n    private ngZone: NgZone,\n    private readonly nextTemplateRef: TemplateRef<RxLetViewContext<U>>,\n    private readonly viewContainerRef: ViewContainerRef,\n    private errorHandler: ErrorHandler\n  ) {}\n\n  /** @internal */\n  private observablesHandler = templateNotifier<U>(() => !!this.rxSuspense);\n  /** @internal */\n  private strategyHandler = hotFlatten<string>(\n    () => new ReplaySubject<RxStrategyNames<string>>(1)\n  );\n  /** @internal */\n  private triggerHandler = hotFlatten<RxNotification<unknown>>(\n    () => new Subject(),\n    mergeAll()\n  );\n\n  /** @internal */\n  private _renderObserver: NextObserver<any>;\n\n  /** @internal */\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  private templateManager: RxTemplateManager<\n    U,\n    RxLetViewContext<U | undefined | null>,\n    rxLetTemplateNames\n  >;\n\n  /** @internal */\n  private rendered$ = new Subject<void>();\n\n  @Output() readonly rendered = defer(() => this.rendered$.pipe());\n\n  /** @internal */\n  static ngTemplateContextGuard<U>(\n    dir: LetDirective<U>,\n    ctx: unknown | null | undefined\n  ): ctx is RxLetViewContext<U> {\n    return true;\n  }\n\n  /** @internal */\n  ngOnInit() {\n    this.subscription.add(\n      this.templateManager\n        .render(this.observablesHandler.values$)\n        .subscribe((n) => {\n          this.rendered$.next(n);\n          this._renderObserver?.next(n);\n        })\n    );\n  }\n\n  /** @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.templateManager) {\n      this._createTemplateManager();\n    }\n\n    if (changes.rxComplete) {\n      this.templateManager.addTemplateRef(\n        RxLetTemplateNames.complete,\n        this.rxComplete\n      );\n    }\n\n    if (changes.rxSuspense) {\n      this.templateManager.addTemplateRef(\n        RxLetTemplateNames.suspense,\n        this.rxSuspense\n      );\n    }\n\n    if (changes.rxError) {\n      this.templateManager.addTemplateRef(\n        RxLetTemplateNames.error,\n        this.rxError\n      );\n    }\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /** @internal */\n  private _createTemplateManager(): void {\n    this.templateManager = createTemplateManager<\n      U,\n      RxLetViewContext<U>,\n      rxLetTemplateNames\n    >({\n      templateSettings: {\n        viewContainerRef: this.viewContainerRef,\n        createViewContext,\n        updateViewContext,\n        customContext: (rxLet) => ({ rxLet }),\n        patchZone: this.patchZone ? this.ngZone : false,\n      },\n      renderSettings: {\n        cdRef: this.cdRef,\n        eRef: this.eRef,\n        parent: !!this.renderParent,\n        patchZone: this.patchZone ? this.ngZone : false,\n        defaultStrategyName: this.strategyProvider.primaryStrategy,\n        strategies: this.strategyProvider.strategies,\n        errorHandler: this.errorHandler,\n      },\n      notificationToTemplateName: {\n        [RxNotificationKind.suspense]: () =>\n          this.rxSuspense\n            ? RxLetTemplateNames.suspense\n            : RxLetTemplateNames.next,\n        [RxNotificationKind.next]: () => RxLetTemplateNames.next,\n        [RxNotificationKind.error]: () =>\n          this.rxError ? RxLetTemplateNames.error : RxLetTemplateNames.next,\n        [RxNotificationKind.complete]: () =>\n          this.rxComplete\n            ? RxLetTemplateNames.complete\n            : RxLetTemplateNames.next,\n      },\n      templateTrigger$: this.triggerHandler.values$,\n    });\n\n    this.templateManager.addTemplateRef(\n      RxLetTemplateNames.next,\n      this.nextTemplateRef\n    );\n    this.templateManager.nextStrategy(this.strategyHandler.values$);\n  }\n}\n/** @internal */\nfunction createViewContext<T>(value: T): RxLetViewContext<T> {\n  return {\n    rxLet: value,\n    $implicit: value,\n    $error: false,\n    $complete: false,\n    $suspense: false,\n  };\n}\n/** @internal */\nfunction updateViewContext<T>(\n  value: T,\n  view: EmbeddedViewRef<RxLetViewContext<T>>,\n  context: RxLetViewContext<T>\n): void {\n  Object.keys(context).forEach((k) => {\n    view.context[k] = context[k];\n  });\n}\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from '../features/home/home.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'concepts',\n    loadChildren: () =>\n      import('../features/concepts/fundamentals.module').then(\n        (m) => m.FundamentalsModule\n      )\n  },\n  {\n    path: 'template',\n    loadChildren: () =>\n      import('../features/template/template-shell.module').then(\n        (m) => m.TemplateShellModule\n      )\n  },\n  {\n    path: 'tutorials',\n    loadChildren: () =>\n      import('../features/tutorials/tutorials-shell.module').then(\n        (m) => m.TutorialsShellModule\n      )\n  },\n  {\n    path: 'integrations',\n    loadChildren: () =>\n      import('../features/integrations/integrations-shell.module').then(\n        (m) => m.IntegrationsShellModule\n      )\n  },\n  {\n    path: 'experiments',\n    loadChildren: () =>\n      import('../features/experiments/experiments-shell.module').then(\n        (m) => m.ExperimentsShellModule\n      )\n  },\n  {\n    path: 'performance',\n    loadChildren: () =>\n      import('../features/performance/performance-shell.module').then(\n        (m) => m.PerformanceShellModule\n      )\n  }\n];\n","export {RxFor} from './rx-for.directive';\nexport {RxForModule} from './rx-for.module';\n","export const MENU_ITEMS = [\n  {\n    link: 'inherit',\n    label: 'Inherit',\n  },\n  {\n    link: 'provide',\n    label: 'Provide',\n  }\n];\n","import { NgModule } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { AppShellModule } from '../app-shell';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './app.routes';\nimport { DirtyChecksModule } from '../shared/debug-helper/dirty-checks';\nimport { AppControlPanelModule } from './app-control-panel/';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatIconModule,\n    AppShellModule,\n    RouterModule.forRoot(ROUTES, { relativeLinkResolution: 'legacy' }),\n    DirtyChecksModule,\n    AppControlPanelModule\n  ],\n  declarations: [AppComponent],\n  exports: [],\n  bootstrap: [AppComponent]\n})\nexport class AppComponentModule {\n}\n","import { CdkScrollable } from '@angular/cdk/overlay';\nimport { AfterViewInit, ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { RxState } from '@rx-angular/state';\nimport { Subject } from 'rxjs';\nimport { filter, tap, withLatestFrom } from 'rxjs/operators';\nimport { ViewportService } from '../../shared/viewport.service';\n\ninterface AppShellState {\n  isHandset: boolean;\n  showBackButton: boolean;\n  backButtonNavigation: any[];\n}\n\n@Component({\n  selector: 'rxa-app-shell',\n  templateUrl: './app-shell.component.html',\n  styleUrls: ['./app-shell.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RxState],\n})\nexport class AppShellComponent implements AfterViewInit {\n  readonly viewState$ = this.state.select();\n  readonly onBackButtonClick = new Subject<MouseEvent | TouchEvent>();\n  @ViewChild(CdkScrollable) readonly bodyScrollElement!: CdkScrollable;\n\n  constructor(\n    private viewport: ViewportService,\n    private state: RxState<AppShellState>,\n    private router: Router,\n  ) {\n    this.connectViewport();\n    this.connectBackButtonState();\n    this.handleBackButtonClick();\n  }\n\n  ngAfterViewInit(): void {\n    this.handleScrollPositionAfterNavigationEnd();\n  }\n\n  private handleBackButtonClick(): void {\n    this.state.hold(\n      this.onBackButtonClick.pipe(\n        withLatestFrom(this.state.select('backButtonNavigation')),\n      ),\n      ([event, backButtonNavigation]) => {\n        if (backButtonNavigation) {\n          this.router.navigate(backButtonNavigation);\n        } else {\n          history.back();\n        }\n      },\n    );\n  }\n\n  private handleScrollPositionAfterNavigationEnd(): void {\n    // this effect makes sure the scrollable body gets reset to top: 0 after a route got changed\n    this.state.hold(\n      this.router.events.pipe(\n        filter((e) => e instanceof NavigationEnd),\n        tap(() => this.bodyScrollElement.scrollTo({ top: 0 })),\n      ),\n    );\n  }\n\n  private connectBackButtonState(): void {\n    this.state.connect(\n      this.router.events.pipe(\n        filter((event) => event instanceof NavigationEnd),\n      ),\n      () => {\n        let root = this.router.routerState.snapshot.root;\n        while (root.children && root.children.length) {\n          root = root.children[0];\n        }\n        return {\n          showBackButton: root.data?.showBackButton || false,\n          backButtonNavigation:\n            root.data?.backButtonNavigation || null,\n        };\n      },\n    );\n  }\n\n  private connectViewport(): void {\n    this.state.connect('isHandset', this.viewport.isHandset$);\n  }\n}\n","<mat-sidenav-container\n  class=\"app-shell-container\"\n  *ngIf=\"viewState$ | async as state\"\n>\n  <mat-sidenav\n    #drawer\n    class=\"app-shell-sidenav\"\n    fixedInViewport\n    [attr.role]=\"state.isHandset ? 'dialog' : 'navigation'\"\n    [mode]=\"state.isHandset ? 'over' : 'side'\"\n    [opened]=\"state.isHandset === false\"\n  >\n    <mat-toolbar color=\"primary\">\n      <ng-content select=\"[rxaAppShellSidenavTitle]\"></ng-content>\n    </mat-toolbar>\n    <ng-content select=\"rxa-side-nav\"></ng-content>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"app-shell-content\">\n    <mat-toolbar class=\"app-shell-header\" color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"state.isHandset && !state.showBackButton\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"onBackButtonClick.next($event)\"\n        *ngIf=\"state.showBackButton\"\n      >\n        <mat-icon aria-label=\"navigate back\">keyboard_backspace</mat-icon>\n      </button>\n      <ng-content select=\"[rxaAppShellHeaderContent]\"></ng-content>\n    </mat-toolbar>\n    <div class=\"container-fluid app-shell-content-container\" cdkScrollable>\n      <ng-content></ng-content>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {\n  ChangeDetectorRef,\n  NgZone,\n  OnDestroy,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport {\n  strategyHandling,\n  RxStrategyProvider,\n  templateNotifier,\n  RxNotificationKind,\n  RxNotification,\n} from '@rx-angular/cdk';\nimport {\n  NextObserver,\n  Observable,\n  ObservableInput,\n  Unsubscribable,\n} from 'rxjs';\nimport { filter, switchMap, tap, withLatestFrom } from 'rxjs/operators';\n\n/**\n * @Pipe PushPipe\n *\n * @description\n *\n * The `push` pipe serves as a drop-in replacement for the `async` pipe.\n * It contains intelligent handling of change detection to enable us\n * running in zone-full as well as zone-less mode without any changes to the code.\n *\n * The current way of binding an observable to the view looks like that:\n *  ```html\n *  {{observable$ | async}}\n * <ng-container *ngIf=\"observable$ | async as o\">{{o}}</ng-container>\n * <component [value]=\"observable$ | async\"></component>\n * ```\n *\n * The problem is `async` pipe just marks the component and all its ancestors as dirty.\n * It needs zone.js microtask queue to exhaust until `ApplicationRef.tick` is called to render all dirty marked\n *     components.\n *\n * Heavy dynamic and interactive UIs suffer from zones change detection a lot and can\n * lean to bad performance or even unusable applications, but the `async` pipe does not work in zone-less mode.\n *\n * `push` pipe solves that problem.\n *\n * Included Features:\n *  - Take observables or promises, retrieve their values and render the value to the template\n *  - Handling null and undefined values in a clean unified/structured way\n *  - Triggers change-detection differently if `zone.js` is present or not (`detectChanges` or `markForCheck`)\n *  - Distinct same values in a row to increase performance\n *  - Coalescing of change detection calls to boost performance\n *\n * @usageNotes\n *\n * `push` pipe solves that problem. It can be used like shown here:\n * ```html\n * {{observable$ | push}}\n * <ng-container *ngIf=\"observable$ | push as o\">{{o}}</ng-container>\n * <component [value]=\"observable$ | push\"></component>\n * ```\n *\n * @publicApi\n */\n@Pipe({ name: 'push', pure: false })\nexport class PushPipe<U> implements PipeTransform, OnDestroy {\n  /** @internal */\n  private renderedValue: U | null | undefined;\n  /** @internal */\n  private readonly subscription: Unsubscribable;\n  /** @internal */\n  private readonly templateObserver = templateNotifier<U>();\n  /** @internal */\n  private readonly strategyHandler = strategyHandling(\n    this.strategyProvider.primaryStrategy,\n    this.strategyProvider.strategies\n  );\n\n  constructor(\n    private strategyProvider: RxStrategyProvider,\n    private cdRef: ChangeDetectorRef\n  ) {\n    const scope = (cdRef as any).context;\n    this.subscription = this.templateObserver.values$\n      .pipe(\n        filter<RxNotification<U>>(\n          (n) =>\n            n.kind === RxNotificationKind.suspense ||\n            n.kind === RxNotificationKind.next\n        ),\n        tap<RxNotification<U>>((notification) => {\n          this.renderedValue = notification.value as U;\n        }),\n        withLatestFrom(this.strategyHandler.strategy$),\n        switchMap(([v, strategy]) =>\n          this.strategyProvider.schedule(\n            () => {\n              strategy.work(cdRef, scope);\n            },\n            {\n              scope,\n              strategy: strategy.name,\n              patchZone: this.strategyProvider.config.patchZone ? null : false,\n            }\n          )\n        )\n      )\n      .subscribe();\n  }\n\n  transform(\n    potentialObservable: null,\n    config?: string | Observable<string>,\n    renderCallback?: NextObserver<U>\n  ): null;\n  transform(\n    potentialObservable: undefined,\n    config?: string | Observable<string>,\n    renderCallback?: NextObserver<U>\n  ): undefined;\n  transform(\n    potentialObservable: ObservableInput<U>,\n    config?: string | Observable<string>,\n    renderCallback?: NextObserver<U>\n  ): U;\n  transform(\n    potentialObservable: ObservableInput<U> | null | undefined,\n    config: string | Observable<string> | undefined,\n    renderCallback?: NextObserver<U>\n  ): U | null | undefined {\n    if (config) {\n      this.strategyHandler.next(config);\n    }\n    this.templateObserver.next(potentialObservable);\n    return this.renderedValue as U;\n  }\n\n  /** @internal */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { filter, mergeAll } from 'rxjs/operators';\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Input,\n  NgZone,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Hooks, intersectionObserver } from '../../../cdk';\n\nimport {\n  createTemplateManager,\n  hotFlatten,\n  RxNotificationKind,\n  RxTemplateManager, RxStrategyProvider,\n} from '@rx-angular/cdk';\nimport {\n  RxIfVisibleTemplateNames,\n  rxIfVisibleTemplateNames,\n  RxIfVisibleViewContext,\n} from './model';\nimport { RxEffects } from '../../../state/rx-effects';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ifVisible]',\n  providers: [RxEffects],\n})\nexport class IfVisibleDirective<U> extends Hooks implements OnInit {\n  displayed = false;\n  private observer = intersectionObserver();\n  private subscription: Subscription = new Subscription();\n\n  private strategyHandler = hotFlatten<string>(undefined, mergeAll());\n\n  private templateManager: RxTemplateManager<\n    U,\n    RxIfVisibleViewContext<U>,\n    rxIfVisibleTemplateNames\n  >;\n  @Input('rxIfParent') renderParent: boolean;\n\n  @Input('rxIfPatchZone') patchZone: boolean;\n\n  constructor(\n    private rxEf: RxEffects,\n    public templateRef: TemplateRef<any>,\n    private strategyProvider: RxStrategyProvider,\n    private cdRef: ChangeDetectorRef,\n    private eRef: ElementRef<Comment>,\n    private ngZone: NgZone,\n    private readonly viewTemplateRef: TemplateRef<any>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.templateManager = createTemplateManager<\n      U,\n      RxIfVisibleViewContext<U>,\n      rxIfVisibleTemplateNames\n    >({\n      templateSettings: {\n        viewContainerRef: this.viewContainerRef,\n        createViewContext,\n        updateViewContext,\n        customContext: (rxIf) => ({ rxIf }),\n        patchZone: this.patchZone ? this.ngZone : false,\n      },\n      renderSettings: {\n        cdRef: this.cdRef,\n        eRef: this.eRef,\n        parent: coerceBooleanProperty(this.renderParent),\n        patchZone: this.patchZone ? this.ngZone : false,\n        defaultStrategyName: this.strategyProvider.primaryStrategy,\n        strategies: this.strategyProvider.strategies,\n      },\n      notificationToTemplateName: {\n        [RxNotificationKind.suspense]: () => RxIfVisibleTemplateNames.suspense,\n        [RxNotificationKind.next]: () => RxIfVisibleTemplateNames.view,\n        [RxNotificationKind.error]: () => RxIfVisibleTemplateNames.error,\n        [RxNotificationKind.complete]: () => RxIfVisibleTemplateNames.complete,\n      },\n    });\n    this.templateManager.addTemplateRef(\n      RxIfVisibleTemplateNames.view,\n      this.viewTemplateRef\n    );\n    this.templateManager.nextStrategy(this.strategyHandler.values$);\n    this.subscription.add(\n      this.templateManager\n        .render(\n          this.observer.entries$.pipe(\n            filter((entry) => entry.isIntersecting && !this.displayed),\n            this.rxEf.untilDestroy()\n          )\n        )\n        .subscribe(() => {\n          this.displayed = true;\n          this.observer.unobserve(this.eRef.nativeElement.parentElement);\n        })\n    );\n    this.onAfterViewInit$.subscribe(() => {\n      this.observer.observe(this.eRef.nativeElement.parentElement);\n    });\n  }\n}\n\nfunction createViewContext<T>(value: T): RxIfVisibleViewContext<T> {\n  return {\n    rxIfVisible: value,\n    $implicit: value,\n    $error: false,\n    $complete: false,\n    $suspense: false,\n  };\n}\n\nfunction updateViewContext<T>(\n  value: T,\n  view: EmbeddedViewRef<RxIfVisibleViewContext<T>>,\n  context: RxIfVisibleViewContext<T>\n): void {\n  Object.keys(context).forEach((k) => {\n    view.context[k] = context[k];\n  });\n}\n\n\n","import {\n  ChangeDetectorRef,\n  OnDestroy,\n  OnInit,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { RxStrategyProvider } from '@rx-angular/cdk';\nimport {\n  NextObserver,\n  Observable,\n  ObservableInput,\n  Subscription,\n  Unsubscribable,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { createRenderAware, RenderAware } from '../../../cdk/render-aware/render-aware';\nimport { RxTemplateObserver } from '../../../cdk/utils/rxjs/Notification';\n\n@Pipe({ name: 'push', pure: false })\nexport class PushPipe<U> implements PipeTransform, OnDestroy, OnInit {\n  private renderedValue: U | null | undefined;\n\n  private readonly renderAware: RenderAware<U | null | undefined>;\n  private subscription: Unsubscribable;\n  private renderCallbackSubscription: Unsubscribable = Subscription.EMPTY;\n\n  private readonly templateObserver: RxTemplateObserver<\n    U | null | undefined\n  > = {\n    suspense: () => (this.renderedValue = undefined),\n    next: (value: U | null | undefined) => {\n      this.renderedValue = value;\n    },\n  };\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    strategyProvider: RxStrategyProvider\n  ) {\n    this.renderAware = createRenderAware<U>({\n      strategies: strategyProvider.strategies,\n      defaultStrategyName: strategyProvider.primaryStrategy,\n      templateObserver: this.templateObserver,\n      getContext: () => (this.cdRef as any).context,\n      getCdRef: () => this.cdRef,\n    });\n    this.renderAware.subscribe();\n  }\n\n  transform<T>(\n    potentialObservable: null,\n    config?: string | Observable<string>,\n    renderCallback?: NextObserver<U>\n  ): null;\n  transform<T>(\n    potentialObservable: undefined,\n    config?: string | Observable<string>,\n    renderCallback?: NextObserver<U>\n  ): undefined;\n  transform<T>(\n    potentialObservable: ObservableInput<T>,\n    config?: string | Observable<string>,\n    renderCallback?: NextObserver<U>\n  ): T;\n  transform<T>(\n    potentialObservable: ObservableInput<T> | null | undefined,\n    strategyName: string | Observable<string> | undefined,\n    renderCallback?: NextObserver<U>\n  ): T | null | undefined {\n    this.renderAware.nextStrategy(strategyName);\n    this.renderAware.nextPotentialObservable(potentialObservable);\n    this.subscribeRenderCallback(renderCallback);\n    return this.renderedValue as any;\n  }\n\n  ngOnDestroy(): void {\n    this.renderCallbackSubscription.unsubscribe();\n    this.subscription?.unsubscribe();\n  }\n\n  private subscribeRenderCallback(renderCallback?: NextObserver<U>): void {\n    if (renderCallback) {\n      this.renderCallbackSubscription.unsubscribe();\n      this.renderCallbackSubscription = this.renderAware.rendered$\n        .pipe(map(({ value }) => value))\n        .subscribe(renderCallback);\n    }\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.renderAware.rendered$.subscribe();\n  }\n}\n","import { AfterViewInit, Component, ElementRef } from '@angular/core';\nimport { AppPresenter } from './app-presenter.service';\nimport { MENU_ITEMS } from './app.menu';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, take, tap } from 'rxjs/operators';\nimport { RippleRenderer } from '../shared/ripple/rxa-responsive-meter';\nimport { interval } from 'rxjs';\nimport { Platform } from '@angular/cdk/platform';\n\n@Component({\n  selector: 'rxa-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [AppPresenter]\n})\nexport class AppComponent implements AfterViewInit {\n  menuItems = MENU_ITEMS;\n\n  constructor(public vm: AppPresenter, router: Router) {\n    performance.mark('startRouting');\n    router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n      tap(() => console.log('endRouting')),\n      tap(() => performance.mark('endRouting')),\n      take(1)\n    ).subscribe();\n  }\n\n  ngAfterViewInit() {\n    if (window.performance) {\n      const performance = window.performance.toJSON();\n      console.log(performance);\n      const result = {};\n      Object.entries(performance.timing).map(([name, startTime]) => {\n        result[name] = startTime;\n      });\n\n      for (const [key, val] of Object.entries(result)) {\n        console.log(`${key}: ${Math.round(val as number)}ms`);\n      }\n\n      console.log('domContentLoadedEventEnd :' + `${Math.round(performance.timing.domContentLoadedEventEnd) - Math.round(performance.timeOrigin)}ms`);\n      console.log('domComplete :' + `${Math.round(performance.timing.domComplete) - Math.round(performance.timeOrigin)}ms`);\n      console.log('loadEventEnd :' + `${Math.round(performance.timing.loadEventEnd) - Math.round(performance.timeOrigin)}ms`);\n\n    } else {\n      console.log('Performance timing isn\\'t supported.');\n    }\n  }\n}\n\n","<rxa-app-shell>\n  <rxa-side-nav [navItems]=\"menuItems\"> </rxa-side-nav>\n  <ng-container rxaAppShellSidenavTitle>\n    <a style=\"color: inherit; text-decoration: none\" routerLink=\"/\"\n      >RxAngular Demos</a\n    >\n  </ng-container>\n  <ng-container rxaAppShellHeaderContent>\n    <!--<rxa-dirty-check [color]=\"'#3700ff1f'\" radius=\"40\"></rxa-dirty-check> -->\n    <!-- <rxa-config-panel></rxa-config-panel> -->\n  </ng-container>\n  <router-outlet></router-outlet>\n</rxa-app-shell>\n","export {StrategySelectModule} from './strategy-select.module';\nexport {StrategySelectComponent} from './strategy-select/strategy-select.component';\n","import {\n  RxListTemplateChange,\n  RxListTemplateChanges,\n  RxListTemplateChangeType,\n  RxTemplateSettings,\n} from './model';\nimport { EmbeddedViewRef, IterableChanges } from '@angular/core';\nimport { RxListViewContext } from './list-view-context';\nimport { createEmbeddedView } from './utils';\n\n/**\n * @internal\n *\n * Factory that returns a `ListTemplateManager` for the passed params.\n *\n * @param templateSettings\n */\nexport function getTemplateHandler<C extends RxListViewContext<T>, T>(\n  templateSettings: RxTemplateSettings<T, C>\n): ListTemplateManager<T> {\n  const {\n    viewContainerRef,\n    initialTemplateRef,\n    createViewContext,\n    updateViewContext,\n    patchZone,\n  } = templateSettings;\n\n  const workFactory = patchZone\n    ? (work: VoidFunction) => patchZone.run(work)\n    : (work: VoidFunction) => work();\n\n  return {\n    updateUnchangedContext,\n    insertView,\n    moveView,\n    removeView,\n    getListChanges,\n    updateView,\n  };\n\n  // =====\n\n  function updateUnchangedContext(index: number, count: number) {\n    const view = <EmbeddedViewRef<C>>viewContainerRef.get(index);\n    workFactory(() => {\n      view.context.updateContext({\n        count,\n        index,\n      });\n      view.detectChanges();\n    });\n  }\n\n  function moveView(\n    oldIndex: number,\n    item: T,\n    index: number,\n    count: number\n  ): void {\n    const oldView = viewContainerRef.get(oldIndex);\n    const view = <EmbeddedViewRef<C>>viewContainerRef.move(oldView, index);\n    workFactory(() => {\n      updateViewContext(item, view, {\n        count,\n        index,\n      });\n      view.detectChanges();\n    });\n  }\n\n  function updateView(item: T, index: number, count: number): void {\n    const view = <EmbeddedViewRef<C>>viewContainerRef.get(index);\n    workFactory(() => {\n      updateViewContext(item, view, {\n        count,\n        index,\n      });\n      view.detectChanges();\n    });\n  }\n\n  function removeView(index: number): void {\n    return workFactory(() => viewContainerRef.remove(index));\n  }\n\n  function insertView(item: T, index: number, count: number): void {\n    workFactory(() => {\n      createEmbeddedView(\n        viewContainerRef,\n        initialTemplateRef,\n        createViewContext(item, {\n          count,\n          index,\n        }),\n        index\n      );\n    });\n  }\n}\n\n/**\n * @internal\n *\n * An object that holds methods needed to introduce actions to a list e.g. move, remove, insert\n */\nexport interface ListTemplateManager<T> {\n  updateUnchangedContext(index: number, count: number): void;\n\n  insertView(item: T, index: number, count: number): void;\n\n  moveView(oldIndex: number, item: T, index: number, count: number): void;\n\n  updateView(item: T, index: number, count: number): void;\n\n  removeView(index: number): void;\n\n  getListChanges(\n    changes: IterableChanges<T>,\n    items: T[]\n  ): RxListTemplateChanges;\n}\n\n/**\n * @internal\n *\n * @param changes\n * @param items\n */\nfunction getListChanges<T>(\n  changes: IterableChanges<T>,\n  items: T[]\n): RxListTemplateChanges {\n  const changedIdxs = new Set<T>();\n  const changesArr: RxListTemplateChange[] = [];\n  let notifyParent = false;\n  changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n    const item = record.item;\n    if (record.previousIndex == null) {\n      // insert\n      changesArr.push(getInsertChange(item, currentIndex));\n      changedIdxs.add(item);\n      notifyParent = true;\n    } else if (currentIndex == null) {\n      // remove\n      changesArr.push(getRemoveChange(item, adjustedPreviousIndex));\n      changedIdxs.add(item);\n      notifyParent = true;\n    } else if (adjustedPreviousIndex !== null) {\n      // move\n      changesArr.push(getMoveChange(item, currentIndex, adjustedPreviousIndex));\n      changedIdxs.add(item);\n      notifyParent = true;\n    }\n  });\n  changes.forEachIdentityChange((record) => {\n    const item = record.item;\n    changesArr.push(getUpdateChange(item, record.currentIndex));\n    changedIdxs.add(item);\n  });\n  items.forEach((item, index) => {\n    if (!changedIdxs.has(item)) {\n      changesArr.push(getUnchangedChange(item, index));\n    }\n  });\n  return [changesArr, notifyParent];\n\n  // ==========\n\n  function getMoveChange(\n    item: T,\n    currentIndex: number,\n    adjustedPreviousIndex: number\n  ): RxListTemplateChange {\n    return [\n      RxListTemplateChangeType.move,\n      [item, currentIndex, adjustedPreviousIndex],\n    ];\n  }\n\n  function getUpdateChange(\n    item: T,\n    currentIndex: number\n  ): RxListTemplateChange {\n    return [RxListTemplateChangeType.update, [item, currentIndex]];\n  }\n\n  function getUnchangedChange(item: T, index: number): RxListTemplateChange {\n    return [RxListTemplateChangeType.context, [item, index]];\n  }\n\n  function getInsertChange(\n    item: T,\n    currentIndex: number\n  ): RxListTemplateChange {\n    return [\n      RxListTemplateChangeType.insert,\n      [item, currentIndex === null ? undefined : currentIndex],\n    ];\n  }\n\n  function getRemoveChange(\n    item: T,\n    adjustedPreviousIndex: number\n  ): RxListTemplateChange {\n    return [\n      RxListTemplateChangeType.remove,\n      [item, adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex],\n    ];\n  }\n}\n","// tslint:disable\nimport { Subscription } from 'rxjs';\nimport { Action } from './Action';\nimport { SchedulerAction, SchedulerLike } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(\n    private SchedulerAction: typeof Action,\n    now: () => number = Scheduler.now\n  ) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(\n    work: (this: SchedulerAction<T>, state?: T) => void,\n    delay: number = 0,\n    state?: T\n  ): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { isDefined, isKeyOf, isObjectGuard } from '../../core';\n\n/**\n * @description\n * Accepts an object of type T, key of type K extends keyof T, and value of type T[K].\n * Sets the property and returns a newly updated shallow copy of an object while not mutating the original one.\n *\n * @example\n *\n * const cat = {id: 1, type: 'cat', name: 'Fluffy'};\n *\n * const renamedCat = setProp(cat, 'name', 'Bella');\n *\n * // renamedCat will be:\n * // {id: 1, type: 'cat', name: 'Bella'};\n *\n * @example\n * // Usage with RxState\n *\n * export class ProfileComponent {\n *\n *    readonly changeName$ = new Subject<string>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        this.changeName$,\n *        (state, name) => {\n *            return setProp(state, 'name', name);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    changeName(name: string): void {\n *        this.state.set(setProp(this.get(), 'name', name));\n *    }\n * }\n *\n * @returns T\n *\n * @docsPage setProp\n * @docsCategory transformation-helpers\n */\nexport function setProp<T extends object, K extends keyof T>(\n  object: T,\n  key: K,\n  value: T[K]\n): T {\n  const objectIsObject = isObjectGuard(object);\n  const keyIsValid = isKeyOf<T>(key);\n  const initialObject = objectIsObject ? object : ({} as T);\n\n  if (!objectIsObject) {\n    console.warn(`SetProp: original value (${object}) is not an object.`);\n  }\n\n  if (!keyIsValid) {\n    console.warn(`SetProp: key argument (${key}) is invalid.`);\n  }\n\n  if (!isDefined(object) && !keyIsValid) {\n    return object;\n  }\n\n  if (keyIsValid) {\n    return {\n      ...initialObject,\n      [key]: value\n    };\n  }\n\n  return { ...initialObject };\n}\n","export const ALPHAS_COMPARE_MENU_ITEMS = [\n  {\n    link: 'alphas-compare',\n    label: 'Alpha 0 vs Alpha 1',\n    children: [\n      {\n        link: 'list-toggle',\n        label: 'List toggle',\n      },\n    ],\n  },\n];\n","import { TUTORIAL_BASICS_MENU } from './basics/tutorial-basics.menu';\n\nexport const TUTORIALS_MENU = [\n  {\n    label: 'Basics',\n    link: 'basics',\n    children: TUTORIAL_BASICS_MENU,\n  }\n];\n","import { DECORATORS_MENU_ITEMS } from './decorators/decorators.menu';\nimport { MENU_ITEMS as RX_STATE_MENU_ITEMS } from './state/rx-state.menu';\nimport { MENU_ITEMS as STRUCTURAL_DIRECTIVES } from './structural-directives/structural-directives.menu';\nimport { MENU_ITEMS as STRATEGIES_MENU_ITEMS } from './strategies/strategies.menu';\nimport { MENU_ITEMS as INPUT_MENU_ITEMS } from './input-bindings/input-bindings.menu';\n\nexport const EXPERIMENTS_MENU = [\n  {\n    label: 'Strategies',\n    link: 'strategies',\n    children: STRATEGIES_MENU_ITEMS,\n  },\n  {\n    link: 'structural-directives',\n    label: 'Structural Directives',\n    children: STRUCTURAL_DIRECTIVES,\n  },\n  ...RX_STATE_MENU_ITEMS,\n  ...INPUT_MENU_ITEMS,\n  {\n    link: 'decorators',\n    label: 'decorators',\n    children: DECORATORS_MENU_ITEMS,\n  },\n];\n","export const zonePatchedEvents = [\n  'scroll',\n  'mousedown',\n  'mouseenter',\n  'mouseleave',\n  'mousemove',\n  'mouseout',\n  'mouseover',\n  'mouseup',\n  'load',\n  'pointerup',\n  'change',\n  'blur',\n  'focus',\n  'click',\n  'contextmenu',\n  'drag',\n  'dragend',\n  'dragenter',\n  'dragleave',\n  'dragover',\n  'dragstart',\n  'drop',\n  'input'\n];\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","// tslint:disable file-name-casing\nimport { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * NOTE: This is a zone un-patched version of rxjs animationFrameScheduler\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from '@cu/perf-utils';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\nexport const animationFrameScheduler = new AnimationFrameScheduler(\n  AnimationFrameAction\n);\n","export * from './operators';\nexport * from './observable';\nexport * from './util';\nexport * from './Notification';\n","export * from './render-aware';\nexport * from './utils';\n","import { InjectionToken } from '@angular/core';\nimport { RxAngularConfig, RxDefaultStrategyNames } from './model';\nimport { RX_CONCURRENT_STRATEGIES } from './render-strategies/concurrent-strategies';\nimport { RX_NATIVE_STRATEGIES } from './render-strategies/native-strategies';\n\nexport const RX_ANGULAR_CONFIG = new InjectionToken<RxAngularConfig<string>>(\n  'rx-angular-config'\n);\n\nexport const RX_ANGULAR_DEFAULTS: Required<\n  RxAngularConfig<RxDefaultStrategyNames>\n> = {\n  primaryStrategy: 'normal',\n  customStrategies: {\n    ...RX_NATIVE_STRATEGIES,\n    local: {\n      ...RX_CONCURRENT_STRATEGIES.immediate,\n      name: 'local',\n    },\n    ...RX_CONCURRENT_STRATEGIES,\n  },\n  patchZone: true,\n};\n\nexport function mergeDefaultConfig<T extends string>(\n  cfg?: RxAngularConfig<T>\n): Required<RxAngularConfig<T | RxDefaultStrategyNames>> {\n  const custom: RxAngularConfig<T> = cfg\n    ? cfg\n    : ({\n        customStrategies: {},\n      } as any);\n  return {\n    ...RX_ANGULAR_DEFAULTS,\n    ...custom,\n    customStrategies: {\n      ...custom.customStrategies,\n      ...RX_ANGULAR_DEFAULTS.customStrategies,\n    },\n  };\n}\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport {\n  requestAnimationFrame,\n  cancelAnimationFrame,\n} from '../../../browser/browser';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(\n    protected scheduler: AnimationFrameScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(\n    scheduler: AnimationFrameScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    // @ts-ignore\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return (\n      scheduler.scheduled ||\n      (scheduler.scheduled = requestAnimationFrame(() =>\n        scheduler.flush(undefined)\n      ))\n    );\n  }\n  protected recycleAsyncId(\n    scheduler: AnimationFrameScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","export {RxContextViewContext, rxContextTemplateNames, RxContextTemplateNames} from './model';\nexport {RxContext} from './rx-context.directive';\nexport {RxContextContainer} from './rx-context.component';\nexport {RxContextModule} from './context.module';\n","export const MENU_ITEMS = [\n  {\n    link: 'rx-let-poc',\n    label: 'RxLet',\n  },\n  {\n    link: 'rx-let-poc/rx-query-children',\n    label: 'RxLet ViewChildren',\n  },\n  {\n    link: 'rx-switch-poc',\n    label: 'RxSwitch',\n  },\n  {\n    link: 'if-visible',\n    label: 'ifVisible POC',\n  }\n];\n","import { ErrorHandler, Injectable, OnDestroy, Optional } from '@angular/core';\nimport {\n  EMPTY,\n  from,\n  Observable,\n  ObservableInput,\n  PartialObserver,\n  pipe,\n  Subject,\n  Subscription,\n} from 'rxjs';\nimport {\n  catchError,\n  filter,\n  mapTo,\n  mergeAll,\n  share,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { untilDestroyed } from './until-destroy';\nimport { OnDestroy$, toHook } from '../../cdk/hooks';\n\n/**\n * Reduces subscription boilerplate for performing observable-based side-effects in components.\n *\n * Before:\n * ```ts\n * @Component({\n *   // ...\n * })\n * export class FooComponent implements OnDestroy {\n *   private readonly destroy$ = new Subject<void>();\n *\n *   constructor() {\n *     obs$.pipe(takeUntil(this.destroy$)).subscribe(doSideEffect);\n *   }\n *\n *   ngOnDestroy(): void {\n *     this.destroy$.next();\n *     this.destroy$.complete();\n *   }\n * }\n * ```\n *\n * After:\n * ```ts\n * @Component({\n *   // ...\n *   providers: [RxEffects],\n * })\n * export class FooComponent {\n *   constructor(effects: RxEffects) {\n *     effects.register(obs$, doSideEffect);\n *     // OR\n *     effects.register(obs$.pipe(tap(doSideEffect)));\n *     // OR\n *     effects.register(obs$.subscribe(doSideEffect));\n *   }\n * }\n * ```\n *\n * NOTE: Avoid calling register/unregister/subscribe inside the side-effect function.\n */\n@Injectable()\nexport class RxEffects implements OnDestroy, OnDestroy$ {\n  private static nextId = 0;\n  private readonly destroyers: Record<number, Subject<void>> = {};\n\n  readonly _hooks$ = new Subject<{ destroy: boolean }>();\n  private readonly observables$ = new Subject<Observable<unknown>>();\n  private readonly effects$ = this.observables$.pipe(mergeAll(), share());\n  onDestroy$: Observable<boolean> = this._hooks$.pipe(toHook('destroy'));\n\n  private readonly subscription = this.effects$.subscribe();\n\n  constructor(\n    @Optional()\n    private readonly errorHandler: ErrorHandler\n  ) {}\n\n  /**\n   * Performs a side-effect whenever a source observable emits, and handles its subscription.\n   *\n   * @example\n   * effects.register(\n   *   colorMode$,\n   *   mode => localStorage.setItem('colorMode', mode)\n   * );\n   *\n   * @param sourceObs Source observable input\n   * @param sideEffectFn Function with side-effect\n   * @returns Effect ID (can be used to unregister imperatively)\n   */\n  register<T>(\n    sourceObs: ObservableInput<T>,\n    sideEffectFn: (value: T) => void\n  ): number;\n\n  /**\n   * Subscribe to source observable using an observer object.\n   *\n   * @example\n   * effects.register(\n   *   colorMode$,\n   *   {\n   *     next: mode => localStorage.setItem('colorMode', mode),\n   *     error: err => {\n   *       console.error('Color mode error: ', err);\n   *       localStorage.removeItem('colorMode');\n   *     }\n   *   }\n   * );\n   *\n   * @param sourceObs Source observable input\n   * @param observer Observer object\n   */\n  register<T>(\n    sourceObs: ObservableInput<T>,\n    // tslint:disable-next-line: unified-signatures\n    observer: PartialObserver<T>\n  ): number;\n\n  /**\n   * Handles subscription for an observable with a side-effect.\n   *\n   * @example\n   * effects.register(\n   *   colorMode$.pipe(\n   *     tap(mode => localStorage.setItem('colorMode', mode))\n   *   )\n   * );\n   *\n   * @param sideEffectObs Observable input with side-effect\n   * @returns Effect ID (can be used to unregister imperatively)\n   */\n  register(sideEffectObs: ObservableInput<unknown>): number;\n\n  /**\n   * Handles subscription to an observable with a side-effect.\n   *\n   * @example\n   * effects.register(\n   *   colorMode$.subscribe(mode => localStorage.setItem('colorMode', mode))\n   * );\n   *\n   * @param subscription Subscription to observable with side-effect\n   */\n  // tslint:disable-next-line: unified-signatures\n  register(subscription: Subscription): void;\n\n  register<T>(\n    obsOrSub: ObservableInput<T> | Subscription,\n    fnOrObj?: ((value: T) => void) | PartialObserver<T>\n  ): number | void {\n    if (obsOrSub instanceof Subscription) {\n      this.subscription.add(obsOrSub);\n      return;\n    }\n    const effectId = RxEffects.nextId++;\n    const destroy$ = (this.destroyers[effectId] = new Subject<void>());\n    const applyBehavior = pipe(mapTo(effectId), takeUntil(destroy$));\n    if (fnOrObj != null) {\n      this.observables$.next(\n        from(obsOrSub).pipe(\n          // ternary expression is to help Typescript infer overloads\n          typeof fnOrObj === 'function' ? tap(fnOrObj) : tap(fnOrObj),\n          catchError((err) => {\n            this.errorHandler?.handleError(err);\n            return EMPTY;\n          }),\n          applyBehavior\n        )\n      );\n    } else {\n      this.observables$.next(from(obsOrSub).pipe(applyBehavior));\n    }\n    return effectId;\n  }\n\n  /**\n   * Imperatively cancel a side-effect while the component is still running.\n   *\n   * Note that all effects are automatically cancelled when a component is destroyed,\n   * so you most often won't need to call this method.\n   * @param effectId Effect ID (returned by register method)\n   */\n  unregister(effectId: number): void {\n    this.destroyers[effectId]?.next();\n  }\n\n  /**\n   * Fires a sideEffect when the instances `OnDestroy` hook is fired.\n   *\n   * @example\n   * effects.registerOnDestroy(mode => localStorage.setItem('colorMode', mode));\n   *\n   * @param sideEffect\n   */\n  registerOnDestroy(\n    sideEffect: (value: boolean) => void\n  ): number | void {\n    return this.register(this.onDestroy$, sideEffect);\n  }\n\n  /**\n   * Operator that unsubscribes based on emission of an registered effect.\n   *\n   * @example\n   * const effectId1 = effects.register(\n   *   colorMode$.subscribe(mode => localStorage.setItem('colorMode', mode))\n   * );\n   *\n   * someValue$.pipe(\n   *    effect.untilEffect(effectId1)\n   * )\n   *\n   */\n  untilEffect(effectId: number) {\n    return <V>(source: Observable<V>) =>\n      source.pipe(\n        takeUntil(this.effects$.pipe(filter((eId) => eId === effectId)))\n      );\n  }\n\n  /**\n   * Operator that unsubscribes based on the `OnDestroy` lifecycle hook of this instance.\n   *\n   * @NOTICE\n   * This operator has to be placed always at the end of the operator chain (before the subscription).\n   * Otherwise we may leak as a subsequent operator could instantiate new ongoing Observables which will not get unsubscribed.\n   *\n   * @example\n   * someValue$.pipe(\n   *    effect.untilDestroy()\n   * )\n   *\n   */\n  untilDestroy() {\n    return <V>(source: Observable<V>) => source.pipe(untilDestroyed(this));\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this._hooks$.next({ destroy: undefined });\n    this._hooks$.complete();\n    this.subscription.unsubscribe();\n  }\n}\n","export * from './browser';\nexport * from './rxjs';\nexport * from './zone-checks';\nexport * from './get-resolved-promise';\n\n","import { OperatorFunction } from 'rxjs';\n\nexport function isPromiseGuard<T>(value: unknown): value is Promise<T> {\n  return (\n    !!value &&\n    typeof (<any>value).subscribe !== 'function' &&\n    typeof (value as any).then === 'function'\n  );\n}\n\nexport function isOperateFnArrayGuard<T, R = T>(\n  op: any[]\n): op is OperatorFunction<T, R>[] {\n  if (!Array.isArray(op)) {\n    return false;\n  }\n  return op.length > 0 && op.every((i: any) => typeof i === 'function');\n}\n\nexport function isStringArrayGuard(op: any[]): op is string[] {\n  if (!Array.isArray(op)) {\n    return false;\n  }\n  return op.length > 0 && op.every((i: any) => typeof i === 'string');\n}\n\nexport function isIterableGuard<T>(obj: unknown): obj is Array<T> {\n  if (obj === null || obj === undefined) {\n    return false;\n  }\n  return typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\nexport function isKeyOf<O>(k: unknown): k is keyof O {\n  return (\n    !!k &&\n    (typeof k === 'string' || typeof k === 'symbol' || typeof k === 'number')\n  );\n}\n\nexport function isObjectGuard(obj: unknown): obj is object {\n  return !!obj && typeof obj === 'object' && !Array.isArray(obj);\n}\n\nexport function isDefined(val: unknown): val is NonNullable<any> {\n  return val !== null && val !== undefined;\n}\n","/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nimport { Subscription } from 'rxjs';\nimport { isFunction } from 'rxjs/internal/util/isFunction';\n\nexport function isSubscription(obj: any): obj is Subscription {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Subscription);\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[rxaAppShellSideNavItem]',\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    class:\n      'app-shell-sidenav-item',\n  },\n})\nexport class AppShellSideNavItemDirective {\n  @Input('rxaAppShellSideNavItemLevel') level = 0;\n\n  @HostBinding('class.app-shell-sidenav-item-level-1') get level1() { return this.level === 1};\n  @HostBinding('class.app-shell-sidenav-item-level-2') get level2() { return this.level === 2};\n  @HostBinding('class.app-shell-sidenav-item-level-3') get level3() { return this.level === 3};\n\n  constructor() {}\n}\n","import { Observable } from 'rxjs';\nimport { getResolvedPromise } from '../../zone-agnostic';\n\n// @NOTICE replace logic with 7v handling of promises in RxJS\nexport const promiseTick = () =>\n  new Observable<number>((subscriber) => {\n    let cancelled = false;\n    getResolvedPromise()\n      .then(() => {\n        if (!cancelled) {\n          subscriber.next(0);\n          subscriber.complete();\n        }\n      })\n      .catch((e) => {\n        subscriber.error(e);\n      });\n    return () => {\n      cancelled = true;\n      subscriber.complete();\n    };\n  });\n","export * from './utils';\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { AsyncScheduler } from '../async/AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this.active = true;\n    this.scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if ((error = action!.execute(action!.state, action!.delay))) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PushPipe } from './push.pipe';\n\nconst DECLARATIONS = [\n  PushPipe\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [],\n  exports: DECLARATIONS\n})\nexport class PushModule {\n}\n","import { ɵglobal } from '@angular/core';\nimport {\n  ZoneFlagsHelperFunctions,\n  zoneGlobalDisableConfigurationsKeys,\n  zoneGlobalEventsConfigurationsKeys,\n  zoneGlobalSettingsConfigurationsKeys,\n  zoneRuntimeConfigurationsKeys,\n  zoneTestDisableConfigurationsKeys,\n  zoneTestSettingsConfigurationsKeys,\n} from './model/configurations.types';\nimport { ZoneGlobalConfigurations } from './model/zone.configurations.api';\nimport {\n  ZoneConfigConfiguration,\n  ZoneConfig,\n  GlobalDisableConfigurationMethods,\n  TestDisableConfigurationMethods,\n  ZoneGlobalEventsConfigurationsMethods,\n  RuntimeConfigurationMethods,\n} from './model/zone-cfg.types';\nimport { convenienceMethods } from './convenience-methods';\n\nconst zoneDisable = '__Zone_disable_';\nconst zoneSymbol = '__zone_symbol__';\n\n/**\n * https://angular.io/guide/zone#setting-up-zonejs\n **/\nfunction assertZoneConfig() {\n  if ((window as any).Zone !== undefined) {\n    // @TODO link to docs\n    console.error('zone-flags file needs to get imported before zone.js');\n  }\n}\n\nconst addDisableFlag = (prop: string) => ({\n  [prop]: () => {\n    assertZoneConfig();\n    return ((window as any)[zoneDisable + prop] = true);\n  },\n});\n\nconst addSymbolFlag = (prop: string) => ({\n  [prop]: () => {\n    assertZoneConfig();\n    return ((window as any)[zoneSymbol + prop] = true);\n  },\n});\n\nconst addArraySymbolFlag = (prop: string) => ({\n  [prop]: (eventNames: string[]) => {\n    assertZoneConfig();\n    const w: any = window as any;\n    return (w[zoneSymbol + prop] = [\n      ...(Array.isArray(w[zoneSymbol + prop]) ? w[zoneSymbol + prop] : []),\n      ...eventNames,\n    ]);\n  },\n});\n\nconst reduceToObject = <T>(methodsArray: any[]): T => {\n  return methodsArray.reduce((map, item) => ({ ...map, ...item }), {} as T);\n};\n\n/**\n * factory function to create a `ZoneConfig` object.\n *\n * @Example\n * import { globalEvents,xhrEvent, zoneConfig} from '@rx-angular/cdk/zone-flags';\n *\n * const zoneConfig = createZoneFlagsConfigurator();\n *\n * zoneConfig.global.disable.requestAnimationFrame();\n * zoneConfig.global.disable.timers();\n * zoneConfig.events.disable.UNPATCHED_EVENTS([...globalEvents, ...xhrEvent]);\n *\n */\nfunction createZoneFlagsConfigurator(): ZoneConfig {\n  const cfg = (ɵglobal as unknown) as ZoneGlobalConfigurations;\n  const configProps = [\n    ...[\n      ...zoneGlobalDisableConfigurationsKeys,\n      ...zoneTestDisableConfigurationsKeys,\n    ].map((prop) => zoneDisable + prop),\n    ...[\n      ...zoneGlobalSettingsConfigurationsKeys,\n      ...zoneTestSettingsConfigurationsKeys,\n      ...zoneGlobalEventsConfigurationsKeys,\n      ...zoneRuntimeConfigurationsKeys,\n    ].map((prop) => zoneSymbol + prop),\n  ];\n\n  // append as global method for easy debugging\n  (cfg as ZoneFlagsHelperFunctions).__rxa_zone_config__log = (): void => {\n    configProps.forEach((flag) => {\n      // tslint:disable-next-line:no-unused-expression\n      cfg[flag] && console.log(flag, cfg[flag]);\n    });\n  };\n\n  const zoneConfigObj: ZoneConfigConfiguration = {\n    global: {\n      disable: reduceToObject<GlobalDisableConfigurationMethods>([\n        ...zoneGlobalDisableConfigurationsKeys.map(addDisableFlag),\n        ...zoneGlobalSettingsConfigurationsKeys.map(addSymbolFlag),\n      ]),\n    },\n    test: {\n      disable: reduceToObject<TestDisableConfigurationMethods>([\n        ...zoneTestDisableConfigurationsKeys.map(addDisableFlag),\n        ...zoneTestSettingsConfigurationsKeys.map(addSymbolFlag),\n      ]),\n    },\n    events: {\n      disable: reduceToObject<ZoneGlobalEventsConfigurationsMethods>(\n        zoneGlobalEventsConfigurationsKeys.map(addArraySymbolFlag)\n      ),\n    },\n    runtime: {\n      disable: reduceToObject<RuntimeConfigurationMethods>(\n        zoneRuntimeConfigurationsKeys.map(addSymbolFlag)\n      ),\n    },\n  };\n\n  return {\n    ...zoneConfigObj,\n    ...convenienceMethods(zoneConfigObj),\n  };\n}\n\n/**\n * An object for typed zone-flags configuration.\n *\n * @Example\n *\n * create file `zone-flags.ts` parallel to your `polyfills.ts` and insert following content:\n * ```typescript\n * import { globalEvents, xhrEvent, zoneConfig} from '@rx-angular/cdk/zone-flags';\n *\n * zoneConfig.global.disable.requestAnimationFrame();\n * zoneConfig.global.disable.timers();\n * zoneConfig.events.disable.UNPATCHED_EVENTS([...globalEvents, ...xhrEvent]);\n * ```\n * In `polyfills.ts` above the zone import, import `zone-flags.ts`\n *\n * ```typescript\n * import './zone-flags';\n * // Zone JS is required by default for Angular itself.\n * import 'zone.js/dist/zone';\n * ```\n *\n */\nexport const zoneConfig = createZoneFlagsConfigurator();\n","import { Observable, SchedulerAction, SchedulerLike, Subscriber } from 'rxjs';\nimport { asyncScheduler } from '../scheduler';\nimport { isNumeric } from './utils';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(\n  period = 0,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = asyncScheduler;\n  }\n\n  return new Observable<number>((subscriber) => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { OperatorFunction } from 'rxjs';\n\nexport function isPromiseGuard<T>(value: unknown): value is Promise<T> {\n  return (\n    !!value &&\n    typeof (<any>value).subscribe !== 'function' &&\n    typeof (value as any).then === 'function'\n  );\n}\n\nexport function isOperateFnArrayGuard<T, R = T>(\n  op: any[]\n): op is OperatorFunction<T, R>[] {\n  if (!Array.isArray(op)) {\n    return false;\n  }\n  return op.length > 0 && op.every((i: any) => typeof i === 'function');\n}\n\nexport function isStringArrayGuard(op: any[]): op is string[] {\n  if (!Array.isArray(op)) {\n    return false;\n  }\n  return op.length > 0 && op.every((i: any) => typeof i === 'string');\n}\n\nexport function isIterableGuard<T>(obj: unknown): obj is Array<T> {\n  if (obj === null || obj === undefined) {\n    return false;\n  }\n  return typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\nexport function isKeyOf<O>(k: unknown): k is keyof O {\n  return (\n    !!k &&\n    (typeof k === 'string' || typeof k === 'symbol' || typeof k === 'number')\n  );\n}\n\nexport function isObjectGuard(obj: unknown): obj is object {\n  return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\n\nexport function isDefined(val: unknown): val is NonNullable<any> {\n  return val !== null && val !== undefined;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Injectable()\nexport class AppPresenter {\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","import { getZoneUnPatchedApi } from '../zone-checks';\n\nexport function setInterval(cb: () => void, ms: number = 0): void {\n  return getZoneUnPatchedApi('setInterval')(cb, ms);\n}\n\nexport function clearInterval(id: number): void {\n  return getZoneUnPatchedApi('clearInterval')(id);\n}\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { requestAnimationFrame, cancelAnimationFrame } from '../../../browser';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(\n    protected scheduler: AnimationFrameScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(\n    scheduler: AnimationFrameScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    // @ts-ignore\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return (\n      scheduler.scheduled ||\n      (scheduler.scheduled = requestAnimationFrame(() =>\n        scheduler.flush(undefined)\n      ))\n    );\n  }\n  protected recycleAsyncId(\n    scheduler: AnimationFrameScheduler,\n    id?: any,\n    delay: number = 0\n  ): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { UnpatchEventsDirective } from './unpatch-events.experimental.directive';\n\nconst DECLARATIONS = [UnpatchEventsDirective];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  exports: DECLARATIONS\n})\nexport class UnpatchEventsModule {\n}\n","import { RxBaseTemplateNames, rxBaseTemplateNames } from '@rx-angular/cdk';\n\nexport type rxIfVisibleTemplateNames = 'viewTpl' | rxBaseTemplateNames;\n\nexport const RxIfVisibleTemplateNames = {\n  ...RxBaseTemplateNames,\n  view: 'viewTpl'\n} as const;\n","import { Observable, ObservableInput, OperatorFunction, Subject } from 'rxjs';\nimport { switchAll } from 'rxjs/operators';\nimport { coerceDistinctWith } from './coerceDistinctObservableWith';\n\n/**\n * @internal\n *\n * A factory function returning an object to handle the process of merging Observable next notifications into one\n *   Observable. This API takes away the clumsy handling of static values and Observable, reduces the number of\n *   emissions by:\n * - only merging distinct Observables\n * - only emit distingt values of the merged result\n *\n * You can next a Observable of `U` multiple times and merge them into the Observable exposed under one optimized\n *   `values$`\n *\n */\nexport function hotFlatten<U, R = U>(\n  subjectFactory?: () => Subject<ObservableInput<U> | U>,\n  flattenOperator?: OperatorFunction<ObservableInput<U>, R>\n): {\n  values$: Observable<R>;\n  next(observable: ObservableInput<U> | U): void;\n} {\n  const observablesSubject = subjectFactory ? subjectFactory() : new Subject();\n  flattenOperator = flattenOperator || (switchAll() as any);\n  const values$ = observablesSubject.pipe(\n    coerceDistinctWith(flattenOperator as any)\n  ) as Observable<R>;\n\n  return {\n    next(observable: ObservableInput<U> | U) {\n      observablesSubject.next(observable);\n    },\n    values$,\n  };\n}\n","import {\n  MonoTypeOperatorFunction,\n  Observable,\n  Observer,\n  SubscribableOrPromise,\n  Subscriber,\n  Subscription,\n  Unsubscribable,\n} from 'rxjs';\nimport { coalescingManager } from './coalescingManager';\n\n/**\n * @description\n * Limits the number of synchronous emitted a value from the source Observable to\n * one emitted value per\n *   [`AnimationFrame`](https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame), then repeats\n *   this process for every tick of the browsers event loop.\n *\n * The coalesce operator is based on the [throttle](https://rxjs-dev.firebaseapp.com/api/operators/throttle) operator.\n * In addition to that is provides emitted values for the trailing end only, as well as maintaining a context to scope\n *   coalescing.\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector - A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * It defaults to `requestAnimationFrame` as durationSelector.\n * @param {Object} config - A configuration object to define `leading` and `trailing` behavior and the context object.\n * Defaults to `{ leading: false, trailing: true }`. The default scoping is per subscriber.\n * @return {Observable<T>} An Observable that performs the coalesce operation to\n * limit the rate of emissions from the source.\n *\n * @usageNotes\n * Emit clicks at a rate of at most one click per second\n * ```typescript\n * import { fromEvent, animationFrames } from 'rxjs';\n * import { coalesce } from 'ngRx/component';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(coalesce(ev => animationFrames));\n * result.subscribe(x => console.log(x));\n * ```\n */\nexport function coalesceWith<T>(\n  durationSelector: Observable<any>,\n  scope?: object\n): MonoTypeOperatorFunction<T> {\n  const _scope = scope || {};\n\n  return (source) => {\n    const o$ = new Observable<T>((observer) => {\n      const rootSubscription = new Subscription();\n      rootSubscription.add(\n        source.subscribe(createInnerObserver(observer, rootSubscription))\n      );\n      return rootSubscription;\n    });\n\n    return o$;\n\n    function createInnerObserver(\n      outerObserver: Subscriber<T>,\n      rootSubscription: Subscription\n    ): Observer<T> {\n      let actionSubscription: Unsubscribable;\n      let latestValue: T | undefined;\n\n      const tryEmitLatestValue = () => {\n        if (actionSubscription) {\n          // We only decrement the number if it is greater than 0 (isCoalescing)\n          coalescingManager.remove(_scope);\n          if (!coalescingManager.isCoalescing(_scope)) {\n            outerObserver.next(latestValue);\n          }\n        }\n      };\n      return {\n        complete: () => {\n          tryEmitLatestValue();\n          outerObserver.complete();\n        },\n        error: (error) => outerObserver.error(error),\n        next: (value) => {\n          latestValue = value;\n          if (!actionSubscription) {\n            // tslint:disable-next-line:no-unused-expression\n            coalescingManager.add(_scope);\n            actionSubscription = durationSelector.subscribe({\n              error: (error) => outerObserver.error(error),\n              next: () => {\n                tryEmitLatestValue();\n                actionSubscription.unsubscribe();\n                actionSubscription = undefined;\n              },\n              complete: () => {\n                tryEmitLatestValue();\n                actionSubscription = undefined;\n              },\n            });\n            rootSubscription.add(\n              new Subscription(() => {\n                tryEmitLatestValue();\n                if (actionSubscription) {\n                  actionSubscription.unsubscribe();\n                  actionSubscription = undefined;\n                }\n              })\n            );\n          }\n        },\n      };\n    }\n  };\n}\n","import { AppShellNavItem } from '../app-shell.models';\n\nexport function generateRoutes(navigationItems: AppShellNavItem[], link: string = ''): AppShellNavItem[] {\n  return navigationItems.reduce(\n    (items, item) => {\n      item.link = link ? link + '/' + item.link : item.link;\n      if (item.children && item.children.length) {\n        item.children = generateRoutes(item.children, item.link);\n      }\n      return items.concat([item]);\n    }, []);\n}\n","import { ChangeDetectorRef, Type } from '@angular/core';\nimport { Notification, Observable } from 'rxjs';\n\nexport type coalescingObj =\n  | Record<string | number | symbol, unknown>\n  | Type<unknown>\n  | object;\nexport interface RxCoalescingOptions {\n  scope?: coalescingObj;\n}\n\nexport enum RxNotificationKind {\n  suspense = 'suspense',\n  next = 'next',\n  error = 'error',\n  complete = 'complete',\n}\n\nexport type RxNotificationValue = 'value' | 'hasValue';\n\nexport type RxNextNotification<T> = Pick<\n  Notification<T>,\n  RxNotificationValue\n> & {\n  kind: RxNotificationKind;\n} & { error: boolean } & { complete: boolean };\nexport type RxSuspenseNotification<T> = Pick<\n  Notification<T>,\n  RxNotificationValue\n> & { kind: RxNotificationKind.suspense } & { error: false } & {\n  complete: false;\n};\nexport type RxErrorNotification<T> = Pick<\n  Notification<T>,\n  RxNotificationValue\n> & { kind: RxNotificationKind.error } & { error: any } & { complete: false };\nexport type RxCompleteNotification<T> = Pick<\n  Notification<T>,\n  RxNotificationValue\n> & { kind: RxNotificationKind.complete } & { complete: boolean } & {\n  error: false;\n};\nexport type RxNotification<T> =\n  | RxNextNotification<T>\n  | RxSuspenseNotification<T>\n  | RxErrorNotification<T>\n  | RxCompleteNotification<T>;\n\nexport type RxRenderWork = <T = unknown>(\n  cdRef: ChangeDetectorRef,\n  scope?: coalescingObj,\n  notification?: RxNotification<T>\n) => void;\nexport type RxRenderBehavior = <T = unknown>(\n  work: any,\n  scope?: coalescingObj\n) => (o: Observable<T>) => Observable<T>;\n\nexport interface RxStrategyCredentials<S = string> {\n  name: S;\n  work: RxRenderWork;\n  behavior: RxRenderBehavior;\n}\n\nexport type RxCustomStrategyCredentials<T extends string> = Record<\n  T,\n  RxStrategyCredentials\n>;\nexport type RxNativeStrategyNames = 'native' | 'local' | 'global' | 'noop';\n\nexport type RxConcurrentStrategyNames =\n  | 'noPriority'\n  | 'immediate'\n  | 'userBlocking'\n  | 'normal'\n  | 'low'\n  | 'idle';\n\nexport type RxDefaultStrategyNames =\n  | RxNativeStrategyNames\n  | RxConcurrentStrategyNames;\n\nexport type RxStrategyNames<T> = RxDefaultStrategyNames | T;\nexport type RxStrategies<T extends string> = RxCustomStrategyCredentials<\n  RxStrategyNames<T>\n>;\n\nexport interface RxAngularConfig<T extends string> {\n  primaryStrategy?: RxStrategyNames<T>;\n  customStrategies?: RxCustomStrategyCredentials<T>;\n  patchZone?: boolean;\n}\n","export {RxLetViewContext, rxLetTemplateNames, RxLetTemplateNames} from './model';\nexport {RxLet} from './rx-let.directive';\nexport {RxLetModule} from './let.module';\n","import { Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\nimport { MatRipple } from '@angular/material/core';\nimport { Hooks } from '../hooks';\nimport { select } from '@rx-angular/state';\nimport { RxEffects } from '../../rx-effects.service';\nimport { AppConfigService } from '../../../app-config.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'rxa-dirty-check-work',\n  template: `\n    <div class=\"d-inline-flex align-items-center\">\n      <span>Performed work </span>\n      <span class=\"indicator-ripple\" [ngStyle]=\"{width: radius+'px',height: radius+'px'}\" matRipple\n              [matRippleColor]=\"color\" [matRippleRadius]=\"radius\">\n        <span>{{ numDirtyChecks() }}</span>\n      </span>\n      <span> times</span>\n      <span>{{ doWork() }}</span>\n    </div>\n  `,\n  styles: [`\n    :host .indicator-ripple {\n      border: 1px solid #ffff005f;\n    }`],\n  providers: [RxEffects]\n})\nexport class DirtyChecksWorkComponent extends Hooks {\n  @ViewChild(MatRipple) ripple: MatRipple;\n\n  displayElem;\n  dirtyChecks = 0;\n\n  @Input()\n  rippleOn = true;\n\n  @Input()\n  radius = 20;\n\n  @Input()\n  color = 'rgba(253,255,0,0.24)';\n\n  @Input()\n  rippleEffect = { centered: true };\n\n  @Input() work = 10;\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private configService: AppConfigService,\n    private rxEf: RxEffects\n  ) {\n    super();\n    this.rxEf.hold(this.configService.$.pipe(select('rippleOn')), (r) => {\n      this.rippleOn = r\n    });\n    this.rxEf.hold(\n      this.afterViewInit$, () => {\n        this.displayElem = this.elementRef.nativeElement.children[0].children[0];\n        this.numDirtyChecks();\n      });\n  }\n\n  doWork(): string {\n    for (let i = 0; i <= this.work * 100; i++) {\n      console.log('performing work');\n    }\n    return '';\n  }\n\n  numDirtyChecks() {\n    if (this.rippleOn) {\n      // tslint:disable-next-line:no-unused-expression\n      this.rippleOn && this.ripple && this.ripple.launch(this.rippleEffect);\n    }\n    // tslint:disable-next-line:no-unused-expression\n    this.displayElem && this.renderer.setProperty(this.displayElem, 'innerHTML', ++this.dirtyChecks + '');\n  }\n}\n","// tslint:disable file-name-casing\nimport { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * NOTE: This is a zone un-patched version of rxjs asapScheduler\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from '@cu/perf-utils';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\nexport const asapScheduler = new AsapScheduler(AsapAction);\n","import { Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\nimport { MatRipple } from '@angular/material/core';\nimport { Hooks } from '../hooks';\nimport { select } from '@rx-angular/state';\nimport { RxEffects } from '../../rx-effects.service';\nimport { AppConfigService } from '../../../app-config.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'rxa-dirty-check',\n  template: `\n    <div class=\"indicator-ripple\" [ngStyle]=\"{width: radius+'px',height: radius+'px'}\" matRipple\n         [matRippleColor]=\"color\" [matRippleRadius]=\"radius\">\n      <span>{{ numDirtyChecks() }}{{radius}}</span>\n    </div>\n  `,\n  styles: [`\n    :host .indicator-ripple {\n      border: 1px solid #ffff005f;\n    }`],\n  providers: [RxEffects]\n})\nexport class DirtyChecksComponent extends Hooks {\n  @ViewChild(MatRipple) ripple: MatRipple;\n\n  displayElem;\n  dirtyChecks = 0;\n\n  @Input()\n  rippleOn = true;\n\n  @Input()\n  radius = 20;\n\n  @Input()\n  color = 'rgba(253,255,0,0.24)';\n\n  @Input()\n  rippleEffect = { centered: true };\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private configService: AppConfigService,\n    private rxEf: RxEffects\n  ) {\n    super();\n    this.rxEf.hold(this.configService.$.pipe(select('rippleOn')), (r) => {\n      this.rippleOn = r\n    });\n    this.rxEf.hold(\n      this.afterViewInit$, () => {\n        this.displayElem = this.elementRef.nativeElement.children[0].children[0];\n        this.numDirtyChecks();\n      });\n  }\n\n  numDirtyChecks() {\n    if (this.rippleOn) {\n      // tslint:disable-next-line:no-unused-expression\n      this.rippleOn && this.ripple && this.ripple.launch(this.rippleEffect);\n    }\n    // tslint:disable-next-line:no-unused-expression\n    this.displayElem && this.renderer.setProperty(this.displayElem, 'innerHTML', ++this.dirtyChecks + '');\n  }\n}\n","import {\n  isObservable,\n  Observable,\n  ObservableInput,\n  of,\n  OperatorFunction,\n} from 'rxjs';\nimport { distinctUntilChanged, map, switchAll } from 'rxjs/operators';\nimport { coerceObservable } from './coerceObservable';\n\n/**\n * This Observable factory creates an Observable out of a static value or ObservableInput.\n * It forwards only distinct values from distinct incoming Observables or values.\n * This comes in handy in any environment where you handle processing of incoming dynamic values and their state.\n *\n * Optionally you can pass a flatten strategy to get find grained control of the flattening process. E.g. mergeAll, switchAll\n *\n * @param o$ - The Observable to coerce and map to a Observable with distinct values\n * @param flattenOperator - determines the flattening strategy e.g. mergeAll, concatAll, exhaust, switchAll. default is switchAll\n */\nexport function coerceDistinctObservable<T>(\n  o$: Observable<Observable<T> | T>,\n  flattenOperator?: OperatorFunction<ObservableInput<T>, T>\n) {\n  flattenOperator = flattenOperator || switchAll();\n  return coerceObservable(o$).pipe(\n    distinctUntilChanged(),\n    flattenOperator,\n    distinctUntilChanged()\n  );\n}\n","import { NgModule } from '@angular/core';\nimport { LetDirective } from './let.directive';\n\nconst EXPORTED_DECLARATIONS = [LetDirective];\n\n@NgModule({\n  declarations: EXPORTED_DECLARATIONS,\n  exports: [EXPORTED_DECLARATIONS]\n})\nexport class LetModule {\n}\n","import { Observable, OperatorFunction } from 'rxjs';\nimport { map, materialize, tap } from 'rxjs/operators';\nimport { notificationToRxNotification, RxNotification } from '../Notification';\n\nexport function rxMaterialize<T>(): OperatorFunction<T, RxNotification<T>> {\n  return (o$: Observable<T>): Observable<RxNotification<T>> => o$.pipe(\n    materialize(),\n    tap(({ kind, error }) => {\n      if (kind === 'E') {\n        console.error(error);\n      }\n    }),\n    map(notificationToRxNotification)\n  );\n}\n","export { coerceDistinctObservable } from './coerceDistinctObservable';\nexport { coerceDistinctWith } from './coerceDistinctObservableWith';\nexport { coerceObservable } from './coerceObservable';\nexport { coerceObservableWith } from './coerceObservableWith';\nexport { hotFlatten } from './hotFlatten';\nexport { templateNotifier } from './templateNotifier';\nexport { onStrategy } from './onStrategy';\nexport { rxMaterialize } from './rxMaterialize';\nexport { strategyHandling } from './strategy-handling';\nexport { templateTriggerHandling } from './template-trigger-handling';\nexport { coalesceWith } from './coalesceWith';\nexport {\n  toRxCompleteNotification,\n  toRxErrorNotification,\n  toRxSuspenseNotification,\n} from './notification-transforms';\n","import { NgModule } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RX_ANGULAR_CONFIG } from '@rx-angular/cdk';\nimport { AppComponent, AppComponentModule } from './app-component';\nimport { ENVIRONMENT_SETTINGS } from './shared/environment.token';\nimport { environment } from '../environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './features/home/home.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppComponentModule\n  ],\n  providers: [\n    {\n      provide: ENVIRONMENT_SETTINGS,\n      useValue: environment,\n    },\n    {\n      provide: RX_ANGULAR_CONFIG,\n      useValue: {\n        primaryStrategy: 'normal',\n        patchZone: true\n      }\n    }\n  ],\n  declarations: [HomeComponent],\n  exports: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { isObservable, Observable, ObservableInput, of } from 'rxjs';\n\n/**\n * This Observable factory creates an Observable out of a static value or ObservableInput.\n *\n * @param o - the value to coerce\n */\nexport function coerceObservable<T>(\n  o: ObservableInput<T | null | undefined> | T | null | undefined\n): Observable<T | null | undefined> {\n  return isObservable<T>(o) ? o : of(o as T | null | undefined);\n}\n","export const MENU_ITEMS = [\n  {\n    link: 'input-bindings',\n    label: 'Input Bindings',\n  }\n];\n","import { getZoneUnPatchedApi } from '../utils';\n\n/**\n * This file provides unpatched versions of APIs patched in the following file: https://github.com/angular/angular/blob/master/packages/zone.js/lib/browser/browser.ts\n */\n\n/**\n * This function is a zone un-patched implementation of Window#queueMicrotask() method.\n * It is which is exposed on the Window or Worker interface,\n * queues a microtask to be executed at a safe time prior to control returning to the browser's event loop.\n * The microtask is a short function which will run after the current task has completed its\n * work and when there is no other code waiting to be run before control of the execution context is returned to the browser's event loop.\n */\nexport function queueMicrotask() {\n  return getZoneUnPatchedApi('queueMicrotask');\n}\n\nexport const Promise: PromiseConstructor = getZoneUnPatchedApi('Promise');\n\n/**\n * requestAnimationFrame\n *\n * @description\n *\n * This function is a zone un-patched implementation of Window#requestAnimationFrame() method\n *\n * The requestAnimationFrame() method calls a function or evaluates an expression on the next animationFrame.\n * The requestAnimationFrame() method will not continue calling the function after executed once.\n * The ID value returned by requestAnimationFrame() is used as the parameter for the cancelAnimationFrame() method.\n *\n * requestAnimationFrame(cb, ms);\n *\n * @param cb - Required. The function that will be executed\n *\n */\nexport function requestAnimationFrame(cb: FrameRequestCallback): number {\n  return getZoneUnPatchedApi('requestAnimationFrame')(cb);\n}\n\n/**\n * cancelAnimationFrame\n *\n * @description\n *\n * This function is a zone un-patched implementation of Window cancelAnimationFrame() method\n *\n * The cancelAnimationFrame() method clears a timer set with the requestAnimationFrame() method.\n * The ID value returned by requestAnimationFrame() is used as the parameter for the cancelAnimationFrame() method.\n *\n * To be able to use the cancelAnimationFrame() method, you must use a variable when creating the requestAnimationFrame method:\n *\n * const id = requestAnimationFrame(\"javascript function\");\n * Then you will be able to stop the execution by calling the cancelAnimationFrame() method.\n *\n * cancelAnimationFrame(id);\n *\n * @param id {number} - Required. The ID value of the timer returned by the requestAnimationFrame() method\n *\n */\n\nexport function cancelAnimationFrame(id: number): void {\n  getZoneUnPatchedApi('cancelAnimationFrame')(id);\n}\n\n/**\n * setInterval\n *\n * @description\n *\n * This function is a zone un-patched implementation of Window setInterval() method\n *\n * The setInterval() method calls a function or evaluates an expression at specified intervals (in milliseconds).\n * The setInterval() method will continue calling the function until clearInterval() is called, or the window is closed.\n * The ID value returned by setInterval() is used as the parameter for the clearInterval() method.\n *\n * setInterval(cb, ms);\n *\n * @param cb - Required. The function that will be executed\n * @param ms - Required. The intervals (in milliseconds) on how often to execute the code. If the value is less than 10, the value 10 is used\n *\n */\nexport function setInterval(cb: TimerHandler, ms: number = 0): number {\n  return getZoneUnPatchedApi('setInterval')(cb, ms);\n}\n\n/**\n * clearInterval\n *\n * @description\n *\n * This function is a zone un-patched implementation of Window clearInterval() method\n *\n * The clearInterval() method clears a timer set with the setInterval() method.\n * The ID value returned by setInterval() is used as the parameter for the clearInterval() method.\n *\n * To be able to use the clearInterval() method, you must use a variable when creating the interval method:\n *\n * const id = setInterval(\"javascript function\", milliseconds);\n * Then you will be able to stop the execution by calling the clearInterval() method.\n *\n * clearInterval(id);\n *\n * @param id {number} - Required. The ID value of the timer returned by the setInterval() method\n *\n */\nexport function clearInterval(id: number): void {\n  return getZoneUnPatchedApi('clearInterval')(id);\n}\n\n/**\n * setTimeout\n *\n * @description\n *\n * This function is a zone un-patched implementation of Window setTimeout() method\n *\n * The setTimeout() method calls a function or evaluates an expression after a specified number of milliseconds.\n * The function is only executed once. If you need to repeat execution, use the setInterval() method.\n * Use the clearTimeout() method to prevent the function from running.\n *\n * setTimeout(cb, ms);\n *\n * @param cb - Required. The function that will be executed\n * @param ms - Optional. The number of milliseconds to wait before executing the code. If omitted, the value 0 is used\n *\n */\nexport function setTimeout(cb: TimerHandler, ms: number = 0): number {\n  return getZoneUnPatchedApi('setTimeout')(cb, ms);\n}\n\n/**\n * clearTimeout\n *\n * @description\n *\n * This function is a zone un-patched implementation of Window#clearTimeout() method\n *\n * The clearTimeout() method clears a timer set with the setTimeout() method.\n * The ID value returned by setTimeout() is used as the parameter for the clearTimeout() method.\n *\n * const id = setTimeout(\"javascript function\", milliseconds);\n * Then, if the function has not already been executed, you will be able to stop the execution by calling the clearTimeout() method.\n *\n * clearTimeout(id);\n *\n * @param id {number} -\tRequired. The ID value of the timer returned by the setTimeout() method\n *\n */\nexport function clearTimeout(id: number): void {\n  getZoneUnPatchedApi('clearTimeout')(id);\n}\n\n/**\n * This function is a zone un-patched implementation of Element#addEventListener() method.\n * @param elem\n */\nexport function unpatchAddEventListener(elem) {\n  elem.addEventListener = getZoneUnPatchedApi('addEventListener', elem).bind(\n    elem\n  );\n  return elem;\n}\n","export * from './view-context';\nexport * from './template-names';\n","import {\n  ChangeDetectorRef,\n  ElementRef,\n  EmbeddedViewRef, ErrorHandler,\n  NgZone,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RxNotification, RxStrategies } from '../model';\n\nexport type rxBaseTemplateNames = 'errorTpl' | 'completeTpl' | 'suspenseTpl';\n\nexport enum RxBaseTemplateNames {\n  error = 'errorTpl',\n  complete = 'completeTpl',\n  suspense = 'suspenseTpl',\n}\n\nexport const enum RxListTemplateChangeType {\n  insert,\n  remove,\n  move,\n  update,\n  context,\n}\nexport type RxListTemplateChange<T = any> = [RxListTemplateChangeType, [T, number, number?]];\nexport type RxListTemplateChanges<T = any> = [\n  RxListTemplateChange<T>[], // changes to apply\n  boolean // notify parent\n];\n\nexport interface RxViewContext<T> {\n  // to enable `let` syntax we have to use $implicit (var; let v = var)\n  $implicit: T;\n  // set context var complete to true (var$; let e = $error)\n  $error: false | Error;\n  // set context var complete to true (var$; let c = $complete)\n  $complete: boolean;\n  // set context var suspense to true (var$; let s = $suspense)\n  $suspense: any;\n}\n\nexport interface RxRenderAware<T> {\n  nextStrategy: (nextConfig: string | Observable<string>) => void;\n  render: (values$: Observable<RxNotification<T>>) => Observable<void>;\n}\n\nexport interface RxRenderSettings<T, C> {\n  cdRef: ChangeDetectorRef;\n  eRef: ElementRef;\n  parent: boolean;\n  patchZone: NgZone | false;\n  strategies: RxStrategies<string>;\n  defaultStrategyName: string;\n  errorHandler?: ErrorHandler;\n}\n\nexport type CreateEmbeddedView<C> = (\n  viewContainerRef: ViewContainerRef,\n  patchZone: NgZone | false\n) => (\n  templateRef: TemplateRef<C>,\n  context?: C,\n  index?: number\n) => EmbeddedViewRef<C>;\n\nexport type CreateViewContext<T, C, U = unknown> = (\n  value: T,\n  computedContext: U\n) => C;\n\nexport type UpdateViewContext<T, C, U = unknown> = (\n  value: T,\n  view: EmbeddedViewRef<C>,\n  computedContext?: U\n) => void;\n\nexport interface RxTemplateSettings<T, C, U = unknown> {\n  patchZone: NgZone | false;\n  viewContainerRef: ViewContainerRef;\n  createViewContext: CreateViewContext<T, C, U>;\n  updateViewContext: UpdateViewContext<T, C, U>;\n  initialTemplateRef?: TemplateRef<C>;\n  customContext?: (value: T) => any;\n}\n","// tslint:disable file-name-casing\nimport { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * NOTE: This is a zone un-patched version of rxjs asapScheduler\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from '@cu/perf-utils';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\nexport const asap = new AsapScheduler(AsapAction);\n","export { ObservableAccumulation, ObservableMap } from './model';\nexport { accumulateObservables } from './accumulateObservables';\n","export {getMemoizedFn} from './memo-map'\nexport {MemoModule} from './memo.module'\nexport {MemoPipe} from './memo.pipe'\n","import { isDefined } from '../../core';\n\n/**\n * @description\n * Inserts one or multiple items to an array T[].\n * Returns a shallow copy of the updated array T[], and does not mutate the original one.\n *\n * @example\n * // Inserting single value\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}];\n *\n * const updatedCreatures = insert(creatures, {id: 3, type: 'parrot'});\n *\n * // updatedCreatures will be:\n * //  [{id: 1, type: 'cat'}, {id: 2, type: 'dog}, {id: 3, type: 'parrot}];\n *\n * @example\n * // Inserting multiple values\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}];\n *\n * const updatedCreatures = insert(creatures, [{id: 3, type: 'parrot'}, {id: 4, type: 'hamster'}]);\n *\n * // updatedCreatures will be:\n * // [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}, {id: 3, type: 'parrot'}, {id: 4, type: 'hamster'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *\n *    readonly insertCreature$ = new Subject<void>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.insertCreature$,\n *        ({ creatures }) => {\n *            const creatureToAdd = {id: generateId(), name: 'newCreature', type: 'dinosaur' };\n *            return insert(creatures, creatureToAdd);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    insertCeature(): void {\n *        const creatureToAdd = {id: generateId(), name: 'newCreature', type: 'dinosaur' };\n *        this.state.set({ creatures: insert(this.state.get().creatures, creatureToAdd)});\n *    }\n * }\n *\n *\n * @returns T[]\n *\n * @docsPage insert\n * @docsCategory transformation-helpers\n */\nexport function insert<T>(source: T[], updates: T | T[]): T[] {\n  const updatesDefined = isDefined(updates);\n  const sourceIsArray = Array.isArray(source);\n  const invalidInput = !sourceIsArray && !updatesDefined;\n\n  if (!sourceIsArray && isDefined(source)) {\n    console.warn(`Insert: Original value (${source}) is not an array.`);\n  }\n\n  if (invalidInput) {\n    return source;\n  }\n\n  return [\n    ...(sourceIsArray ? source : []),\n    ...(updatesDefined ? (Array.isArray(updates) ? updates : [updates]) : [])\n  ];\n}\n","// tslint:disable\nimport { AsyncAction } from '../async/AsyncAction';\nimport { AsyncScheduler } from '../async/AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this.active = true;\n    this.scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if ((error = action!.execute(action!.state, action!.delay))) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","export const MENU_ITEMS = [\n  {\n    label: 'Push Pipe Poc',\n    link: 'push'\n  } ,\n  {\n    label: 'Memo Pipe Poc',\n    link: 'memo'\n  },\n  {\n    label: 'Pipe Pipe Poc',\n    link: 'pipe'\n  }\n];\n","import { createPropertiesWeakMap } from './properties-weakmap';\n\ninterface CoalescingContextProps {\n  numCoalescingSubscribers: number;\n}\n\ninterface CoalescingManager {\n  decrement: (scope: object) => void,\n  increment: (scope: object) => void,\n  isCoalescing: (scope: object) => boolean,\n}\n\nexport const coalescingManager = createCoalesceManager();\n\nconst coalescingContextPropertiesMap = createPropertiesWeakMap<object,\n  CoalescingContextProps>((ctx) => ({\n  numCoalescingSubscribers: 0\n}));\n\n/**\n * @describe createCoalesceManager\n *\n * returns a\n * Maintains a weak map of component references ans flags\n * them if the coalescing process is already started for them.\n *\n * Used in render aware internally.\n */\nfunction createCoalesceManager(): CoalescingManager {\n  return {\n    decrement,\n    increment,\n    isCoalescing\n  };\n\n  // Decrements the number of subscriptions in a scope e.g. a class instance\n  function decrement(scope: object): void {\n    const numCoalescingSubscribers = coalescingContextPropertiesMap\n      .getProps(scope).numCoalescingSubscribers - 1;\n    coalescingContextPropertiesMap\n      .setProps(scope, { numCoalescingSubscribers: numCoalescingSubscribers >= 0 ? numCoalescingSubscribers : 0 });\n  }\n\n  // Increments the number of subscriptions in a scope e.g. a class instance\n  function increment(scope: object): void {\n    const numCoalescingSubscribers =\n      coalescingContextPropertiesMap\n        .getProps(scope).numCoalescingSubscribers + 1;\n    coalescingContextPropertiesMap\n      .setProps(scope, { numCoalescingSubscribers });\n  }\n\n  // Checks if anybody else is already coalescing atm (number > 0)\n  function isCoalescing(scope: object): boolean {\n    return (\n      coalescingContextPropertiesMap\n        .getProps(scope).numCoalescingSubscribers > 0\n    );\n  }\n}\n","export * from './app-shell.module';\nexport * from './app-shell.models';\nexport * from './app-shell-content.directives';\nexport * from './app-shell-component/app-shell.component';\nexport * from './side-nav/side-nav.component';\n","export * from './deleteProp';\nexport * from './dictionaryToArray';\nexport * from './patch';\nexport * from './setProp';\nexport * from './toggle';\n","// Below are constants for LView indices to help us look up LView members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nexport const HOST = 0;\nexport const TVIEW = 1;\nexport const FLAGS = 2;\nexport const PARENT = 3;\nexport const NEXT = 4;\nexport const TRANSPLANTED_VIEWS_TO_REFRESH = 5;\nexport const T_HOST = 6;\nexport const CLEANUP = 7;\nexport const L_CONTAINER_NATIVE = 7;\nexport const CONTEXT = 8;\nexport const INJECTOR = 9;\nexport const RENDERER_FACTORY = 10;\nexport const RENDERER = 11;\nexport const SANITIZER = 12;\nexport const CHILD_HEAD = 13;\nexport const CHILD_TAIL = 14;\n// FIXME(misko): Investigate if the three declarations aren't all same thing.\nexport const DECLARATION_VIEW = 15;\nexport const DECLARATION_COMPONENT_VIEW = 16;\nexport const DECLARATION_LCONTAINER = 17;\nexport const PREORDER_HOOK_FLAGS = 18;\nexport const QUERIES = 19;\n/**\n * Size of LView's header. Necessary to adjust for it when setting slots.\n *\n * IMPORTANT: `HEADER_OFFSET` should only be referred to the in the `ɵɵ*` instructions to translate\n * instruction index into `LView` index. All other indexes should be in the `LView` index space and\n * there should be no need to refer to `HEADER_OFFSET` anywhere else.\n */\nexport const HEADER_OFFSET = 20;\n\nexport const enum TViewType {\n  /**\n   * Root `TView` is the used to bootstrap components into. It is used in conjunction with\n   * `LView` which takes an existing DOM node not owned by Angular and wraps it in `TView`/`LView`\n   * so that other components can be loaded into it.\n   */\n  Root = 0,\n\n  /**\n   * `TView` associated with a Component. This would be the `TView` directly associated with the\n   * component view (as opposed an `Embedded` `TView` which would be a child of `Component` `TView`)\n   */\n  Component = 1,\n\n  /**\n   * `TView` associated with a template. Such as `*ngIf`, `<ng-template>` etc... A `Component`\n   * can have zero or more `Embedede` `TView`s.\n   */\n  Embedded = 2,\n}\n","import { ApplicationRef, Injectable, Input, NgZone } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\nimport { environment } from '../environments/environment';\nimport { isNgZone } from './rx-angular-pocs/cdk/utils/zone-agnostic';\n\nexport interface CdConfig {\n  strategy: string;\n  rippleOn: boolean;\n  rippleResponsiveOn: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AppConfigService extends RxState<CdConfig> {\n  public readonly $ = this.select();\n  expanded = !isNgZone(this.ngZone);\n  @Input()\n  appComponentRef;\n\n  readonly env = environment;\n  readonly hasZone = isNgZone(this.ngZone);\n  readonly devMode = !environment.production;\n  readonly zoneEnv = this.hasZone ? 'NgZone' : 'NgNoopZone';\n\n  constructor(\n    protected appRef: ApplicationRef,\n    protected ngZone: NgZone\n  ) {\n    super();\n    this.set({\n      rippleOn: false,\n      strategy: 'local'\n    });\n  }\n\n  appRef_tick() {\n    this.appRef.tick();\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { onStrategy, RxRenderWork, RxStrategyNames, RxStrategyProvider } from '@rx-angular/cdk';\nimport { Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { RxSwitch } from './rx-switch.directive';\n\n// tslint:disable-next-line:directive-selector\n@Directive({ selector: '[rxSwitchCase]' })\nexport class RxSwitchCase implements OnInit, OnDestroy {\n  @Input()\n  set rxSwitchCaseValue(v) {\n    this.caseValue = v;\n  }\n\n  @Input()\n  set rxSwitchCase(v) {\n    this.caseValue = v;\n  }\n\n  private subscription: Unsubscribable = new Subscription();\n  private _view: EmbeddedViewRef<any>;\n  private inserted = false;\n  private caseValue;\n\n  constructor(\n    private viewContainer: ViewContainerRef,\n    public templateRef: TemplateRef<Object>,\n    private cdRef: ChangeDetectorRef,\n    private strategyProvider: RxStrategyProvider<RxStrategyNames<string>>,\n    @Host() private rxSwitch: RxSwitch<any>\n  ) {}\n\n  ngOnInit() {\n    this.createView();\n    this.subscription = this.rxSwitch.values$\n      .pipe(\n        // tslint:disable-next-line:triple-equals\n        map((switchValue) => this.caseValue === switchValue),\n        distinctUntilChanged(),\n        withLatestFrom(this.rxSwitch.strategies$),\n        switchMap(([v, strategyName]) => onStrategy(v, this.strategyProvider.strategies[strategyName], this.rxSwitchCaseWorkFactory))\n        // applyStrategy2(this.rxSwitch.strategy$, this.rxSwitchCaseWorkFactory, this._view)\n      )\n      .subscribe({ error: console.log });\n  }\n\n  ngOnDestroy(): void {\n    this.viewContainer.clear();\n    this.subscription.unsubscribe();\n  }\n\n  private createView(): void {\n    this._view = this.viewContainer.createEmbeddedView(\n      this.templateRef,\n      { $implicit: this.caseValue },\n      0\n    );\n    this.viewContainer.detach(0);\n  }\n\n  rxSwitchCaseWorkFactory = (value: any, work: RxRenderWork) => {\n    if (value) {\n      if (!this.inserted) {\n        this.viewContainer.insert(this._view, 0);\n        this.inserted = true;\n      }\n    } else {\n      if (this._view && this.inserted) {\n        this.viewContainer.detach(0);\n        this.inserted = false;\n      }\n    }\n    this._view.context.$implicit = this.caseValue;\n    work(this._view, this._view);\n    work(this.cdRef, (this.cdRef as any)?.context || this.cdRef);\n  }\n}\n\n","// tslint:disable\nimport { Subscription } from 'rxjs';\nimport { Scheduler } from './Scheduler';\nimport { SchedulerAction } from './types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(\n    scheduler: Scheduler,\n    work: (this: SchedulerAction<T>, state?: T) => void\n  ) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RxFor } from './rx-for.directive';\n\nconst DECLARATIONS = [\n  RxFor\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [],\n  exports: DECLARATIONS\n})\nexport class RxForModule {\n}\n","export const DECORATORS_MENU_ITEMS = [\n  {\n    link: 'stateful',\n    label: 'RxStateful',\n  },\n];\n","export {DirtyChecksModule} from './dirty-checks.module';\nexport {DirtyChecksComponent} from './dirty-checks.component';\n","export const MENU_ITEMS = [\n  {\n    label: 'Basic',\n    link: 'basic'\n  },\n  {\n    label: 'Error Handling',\n    link: 'error-handling'\n  },\n  {\n    label: 'Exception Handling',\n    link: 'exception-handling'\n  },\n  {\n    label: 'Http Errors',\n    link: 'http-errors'\n  },\n  {\n    label: '*ngif hack',\n    link: 'ng-if-hack'\n  },\n  {\n    label: 'Template Bindings',\n    link: 'template-bindings'\n  },\n  {\n    label: 'Preloading Techniques',\n    link: 'preloading-images'\n  },\n  {\n    label: 'Lazy Components',\n    link: 'lazy-components'\n  }\n];\n","import { SchedulerLike } from 'rxjs';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !Array.isArray(val) && val - parseFloat(val) + 1 >= 0;\n}\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","export {AppControlPanelComponent} from './app-control-panel.component'\nexport {AppControlPanelModule} from './app-control-panel.module'\n","export const MENU_ITEMS = [\n  {\n    label: 'rxContext',\n    link: ''\n  }\n];\n","import {\n  BehaviorSubject,\n  ConnectableObservable,\n  EMPTY,\n  merge,\n  Observable,\n  queueScheduler,\n  Subject,\n  Subscribable,\n  Subscription,\n} from 'rxjs';\nimport {\n  catchError,\n  distinctUntilChanged,\n  mergeAll,\n  observeOn,\n  publish,\n  publishReplay,\n  scan,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\nexport type AccumulationFn = <T>(st: T, sl: Partial<T>) => T;\n\nconst defaultAccumulator: AccumulationFn = <T>(st: T, sl: Partial<T>): T => {\n  return { ...st, ...sl };\n};\n\ninterface Accumulator<T> extends Subscribable<T> {\n  state: T;\n  state$: Observable<T>;\n  signal$: Observable<T>;\n  nextSlice: (stateSlice: Partial<T>) => void;\n  nextSliceObservable: (state$: Observable<Partial<T>>) => void;\n  nextAccumulator: (fn: AccumulationFn) => void;\n}\n\nexport function createAccumulationObservable<T extends object>(\n  stateObservables = new Subject<Observable<Partial<T>>>(),\n  stateSlices = new Subject<Partial<T>>(),\n  accumulatorObservable = new BehaviorSubject(defaultAccumulator)\n): Accumulator<T> {\n  const signal$ = merge(\n    stateObservables.pipe(\n      distinctUntilChanged(),\n      mergeAll(),\n      observeOn(queueScheduler)\n    ),\n    stateSlices.pipe(observeOn(queueScheduler))\n  ).pipe(\n    withLatestFrom(accumulatorObservable.pipe(observeOn(queueScheduler))),\n    scan(\n      (state, [slice, stateAccumulator]) => stateAccumulator(state, slice),\n      {} as T\n    ),\n    tap(\n      (newState) => (compositionObservable.state = newState),\n      (error) => console.error(error)\n    ),\n    // @Notice We catch the error here as it get lost in between `publish` and `publishReplay`. We return empty to\n    catchError((e) => EMPTY),\n    publish()\n  );\n  const state$: Observable<T> = signal$.pipe(publishReplay(1));\n  const compositionObservable: Accumulator<T> = {\n    state: {} as T,\n    signal$,\n    state$,\n    nextSlice,\n    nextSliceObservable,\n    nextAccumulator,\n    subscribe,\n  };\n\n  // ======\n\n  return compositionObservable;\n\n  // ======\n\n  function nextAccumulator(accumulatorFn: AccumulationFn): void {\n    accumulatorObservable.next(accumulatorFn);\n  }\n\n  function nextSlice(stateSlice: Partial<T>): void {\n    stateSlices.next(stateSlice);\n  }\n\n  function nextSliceObservable(stateObservable: Observable<Partial<T>>): void {\n    stateObservables.next(stateObservable);\n  }\n\n  function subscribe(): Subscription {\n    const sub = (compositionObservable.signal$ as ConnectableObservable<T>).connect();\n    sub.add(\n      (compositionObservable.state$ as ConnectableObservable<T>).connect()\n    );\n    sub.add(() => {\n      accumulatorObservable.complete();\n      stateObservables.complete();\n      stateSlices.complete();\n    });\n    return sub;\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[rxaAppShellSidenavContent]',\n})\nexport class AppShellSidenavContent {}\n\n@Directive({\n  selector: '[rxaAppShellHeaderContent]',\n})\nexport class AppShellHeaderContent {}\n\n@Directive({\n  selector: '[rxaAppShellSidenavTitle]',\n})\nexport class AppShellSidenavTitle {}\n","export * from './view-context';\nexport * from './template-names';\n","// tslint:disable\nimport { Subscription } from 'rxjs';\nimport { Action } from './Action';\nimport { SchedulerAction, SchedulerLike } from './types';\n\nexport function nowFn() {\n  const fn = () => Date.now();\n  return fn;\n}\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = nowFn();\n\n  constructor(\n    private SchedulerAction: typeof Action,\n    now: () => number = Scheduler.now\n  ) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(\n    work: (this: SchedulerAction<T>, state?: T) => void,\n    delay: number = 0,\n    state?: T\n  ): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { MonoTypeOperatorFunction } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { CompareFn, KeyCompareMap } from '../interfaces';\nimport { safePluck } from '../../core/utils/safe-pluck';\n\n/**\n * @internal\n */\nfunction defaultCompare<T>(oldVal: T, newVal: T): boolean {\n  return oldVal === newVal;\n}\n\n/**\n * @description\n *\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from\n * the previous item. Comparison will be done for each set key in the `keys` array.\n *\n * You can fine grain your distinct checks by providing a `KeyCompareMap` with those keys you want to compute\n * explicitly different\n *\n * The name `distinctUntilSomeChanged` was picked since it internally iterates over the `keys` and utilizes the\n * [some](https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Array/some) method in order to\n * compute if values are distinct or not.\n *\n * @example\n *\n * import { of } from 'rxjs';\n * import { distinctUntilSomeChanged } from 'rx-angular/state';\n *\n * interface Person {\n *    age: number;\n *    name: string;\n * }\n *\n * of(\n *   { age: 4, name: 'Hans'},\n *   { age: 7, name: 'Sophie'},\n *   { age: 5, name: 'Han Solo'},\n *   { age: 5, name: 'HanSophie'},\n * ).pipe(\n *   distinctUntilSomeChanged(['age', 'name']),\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Hans'}\n * // { age: 7, name: 'Sophie'}\n * // { age: 5, name: 'Han Solo'}\n * // { age: 5, name: 'HanSophie'}\n *\n * @example\n * // An example with `KeyCompareMap`\n * import { of } from 'rxjs';\n * import { distinctUntilSomeChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number;\n *     name: string;\n *  }\n * const customComparison: KeyCompareMap<Person> = {\n *   name: (oldName, newName) => oldName.substring(0, 2) === newName.substring(0, 2)\n * };\n *\n * of(\n *     { age: 4, name: 'Hans'},\n *     { age: 7, name: 'Sophie'},\n *     { age: 5, name: 'Han Solo'},\n *     { age: 5, name: 'HanSophie'},\n *   ).pipe(\n *     distinctUntilSomeChanged(['age', 'name'], customComparison),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Hans' }\n * // { age: 7, name: 'Sophie' }\n * // { age: 5, name: 'Han Solo' }\n *\n * @param {K[]} keys String key for object property lookup on each item.\n * @param {KeyCompareMap<T>} [compare] Optional KeyCompareMap to explicitly define comparisons for some of the keys\n * @docsPage distinctUntilSomeChanged\n * @docsCategory operators\n */\nexport function distinctUntilSomeChanged<T extends object, K extends keyof T>(\n  keys: K[],\n  keyCompareMap?: KeyCompareMap<T>\n): MonoTypeOperatorFunction<T> {\n  // default compare function applying === to every key\n  let distinctCompare: CompareFn<T> = (oldState, newState) =>\n    keys.some(\n      (key) =>\n        !defaultCompare(safePluck(oldState, [key]), safePluck(newState, [key]))\n    );\n\n  // generate compare function respecting every case of provided keyCompareMap\n  if (keyCompareMap !== undefined) {\n    const compare = (key: K) => {\n      return keyCompareMap.hasOwnProperty(key) &&\n      keyCompareMap[key] !== undefined\n        ? (keyCompareMap[key] as CompareFn<T[K]>)\n        : defaultCompare;\n    };\n    distinctCompare = (oldState, newState) => {\n      return keys.some(\n        (key) =>\n          !compare(key)(safePluck(oldState, [key]), safePluck(newState, [key]))\n      );\n    };\n  }\n  return distinctUntilChanged((oldV, newV) => !distinctCompare(oldV, newV));\n}\n","import { Observable, OperatorFunction } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { coerceObservable } from './coerceObservable';\n\n/**\n * This operator maps an Observable out of a static value or ObservableInput.\n *\n */\nexport function coerceObservableWith<T>(): OperatorFunction<\n  Observable<T | null | undefined> | T | null | undefined,\n  Observable<T | null | undefined>\n> {\n  return (o$: Observable<Observable<T> | T>) => map(coerceObservable)(o$);\n}\n","import { createPropertiesWeakMap } from './properties-weakmap';\n\ninterface CoalescingContextProps {\n  numCoalescingSubscribers: number;\n}\n\ninterface CoalescingManager {\n  remove: (scope: object) => void,\n  add: (scope: object) => void,\n  isCoalescing: (scope: object) => boolean,\n}\n\nexport const coalescingManager = createCoalesceManager();\n\nconst coalescingContextPropertiesMap = createPropertiesWeakMap<object,\n  CoalescingContextProps>((ctx) => ({\n  numCoalescingSubscribers: 0\n}));\n\n/**\n * @describe createCoalesceManager\n *\n * returns a\n * Maintains a weak map of component references ans flags\n * them if the coalescing process is already started for them.\n *\n * Used in render aware internally.\n */\nfunction createCoalesceManager(): CoalescingManager {\n  return {\n    remove: removeWork,\n    add: addWork,\n    isCoalescing\n  };\n\n  // Increments the number of subscriptions in a scope e.g. a class instance\n  function removeWork(scope: object): void {\n    const numCoalescingSubscribers = coalescingContextPropertiesMap.getProps(scope).numCoalescingSubscribers - 1;\n    coalescingContextPropertiesMap.setProps(scope, {\n      numCoalescingSubscribers: numCoalescingSubscribers >= 0 ? numCoalescingSubscribers : 0\n    });\n  }\n\n  // Decrements the number of subscriptions in a scope e.g. a class instance\n  function addWork(scope: object): void {\n    const numCoalescingSubscribers =\n      coalescingContextPropertiesMap.getProps(scope).numCoalescingSubscribers +\n      1;\n    coalescingContextPropertiesMap.setProps(scope, {\n      numCoalescingSubscribers\n    });\n  }\n\n  // Checks if anybody else is already coalescing atm\n  function isCoalescing(scope: object): boolean {\n    return (\n      coalescingContextPropertiesMap.getProps(scope).numCoalescingSubscribers >\n      0\n    );\n  }\n}\n","export const MENU_ITEMS = [\n  {\n    label: 'If Basic',\n    link: ''\n  }\n];\n","import { Observable, SchedulerAction, SchedulerLike, Subscriber } from 'rxjs';\nimport { asyncScheduler } from '../schedulers';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = asyncScheduler;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n\nfunction isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n\nexport const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","export { cancelCallback, scheduleCallback, forceFrameRate } from './scheduler';\nexport * from './schedulerPriorities';\n","import {\n  ɵɵdirectiveInject as directiveInject,\n  ChangeDetectorRef, Type\n} from '@angular/core';\nimport { RxStrategyCredentials, RxStrategyProvider } from '@rx-angular/cdk';\nimport { fromEvent, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport function renderOnChange<T = Type<any>>(\n  component: T,\n  keys: (keyof T)[],\n  config: {\n    cdRef: ChangeDetectorRef,\n    strategyName?: string\n  }\n) {\n\n  const strategyProvider: RxStrategyProvider = directiveInject(RxStrategyProvider);\n  const strategyName = config?.strategyName || strategyProvider.primaryStrategy;\n  const strategy = strategyProvider.strategies[strategyName];\n\n  function scheduleCD(s: RxStrategyCredentials, work: () => void): AbortController {\n    const abC = new AbortController();\n    of(null).pipe(\n      s.behavior(work, component as any),\n      takeUntil(fromEvent(abC.signal, 'abort'))\n    ).subscribe();\n    return abC;\n  }\n\n  let workScheduled: AbortController;\n\n  const values = new Map<keyof T, any>();\n  keys.forEach(key => {\n    Object.defineProperty(component, key, {\n      get: function() {\n        return values.get(key);\n      },\n      set: function(newVal: any) {\n        values.set(key, newVal);\n        if (workScheduled) {\n          workScheduled.abort();\n        }\n        const work = () => {\n          strategy.work(config.cdRef, component as any);\n        };\n        workScheduled = scheduleCD(strategy, work);\n      },\n      enumerable: true,\n      configurable: true\n    });\n  })\n}\n","import { ChangeDetectionStrategy, Component, Output } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\nimport { RxStrategyCredentials, RxStrategyProvider } from '@rx-angular/cdk';\nimport { delay, map, skip } from 'rxjs/operators';\nimport { EventEmitter } from '@angular/core';\n\nconst strategiesUiConfig = {\n  local: { name: 'local', icon: 'call_split' },\n  global: { name: 'global', icon: 'vertical_align_bottom' },\n  detach: { name: 'detach', icon: 'play_for_work' },\n  noop: { name: 'noop', icon: 'block' },\n  postTask: { name: 'postTask', icon: 'science' },\n  chunk: { name: 'chunk', icon: 'link' },\n  native: { name: 'native', icon: 'find_replace' }\n};\n\n@Component({\n  selector: 'rxa-strategy-select',\n  template: `\n    <mat-form-field appearance=\"fill\">\n      <mat-select #i [value]=\"strategyProvider.primaryStrategy\"\n                  (valueChange)=\"strategyProvider.primaryStrategy = i.value\">\n        <mat-select-trigger>\n          {{ strategyProvider.primaryStrategy }}\n        </mat-select-trigger>\n        <mat-option\n          [value]=\"s\"\n          *rxFor=\"let s of stratNames$; parent: true;\">\n          <mat-icon class=\"mr-2\">{{ strategiesUiConfig[s]?.icon }}</mat-icon>\n          {{ s }}\n        </mat-option>\n      </mat-select>\n      <mat-icon matPrefix class=\"mr-2\">\n        {{ strategiesUiConfig[strategyProvider.primaryStrategy]?.icon }}\n      </mat-icon>\n      <mat-label>Strategy</mat-label>\n    </mat-form-field>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RxState]\n})\nexport class StrategySelectComponent {\n  readonly strategiesUiConfig = strategiesUiConfig;\n\n  readonly stratNames$ = this.strategyProvider.strategyNames$;\n  @Output() strategyChange = new EventEmitter<string>();\n\n  constructor(\n    public strategyProvider: RxStrategyProvider,\n    private state: RxState<any>\n  ) {\n    state.hold(\n      this.strategyProvider.primaryStrategy$.pipe(\n        map(s => s.name),\n        skip(1) // skip(1) to make it \"COLD\"...\n      ),\n      primaryStrategyChanged => this.strategyChange.next(primaryStrategyChanged)\n    )\n  }\n\n}\n","export { async as asyncScheduler } from './async/async';\nexport { asap } from './asap/asap';\nexport { queue } from './queue/queue';\nexport { animationFrame } from './animation-frame/animationFrame';\n","import { getZoneUnPatchedApi } from '../zone-checks';\n\nexport function setTimeout(cb: Function, ms: number = 0): void {\n  return getZoneUnPatchedApi('setTimeout')(cb, ms);\n}\n\nexport function clearTimeout(id: number): void {\n  return getZoneUnPatchedApi('clearTimeout')(id);\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Observable } from 'rxjs';\nimport { RxNotificationKind } from '../Notification';\nimport { rxMaterialize } from './rx-materialize';\nimport { filter, map } from 'rxjs/operators';\n\nexport function observableToRxTemplateName<T>() {\n  return (o$: Observable<T>): Observable<RxNotificationKind> =>\n    o$.pipe(\n      rxMaterialize(),\n      map((n) => n.kind)\n    );\n}\n","import {\n  EMPTY,\n  merge,\n  Observable,\n  queueScheduler,\n  Subject,\n  Subscribable,\n  Subscription,\n} from 'rxjs';\nimport { catchError, mergeAll, observeOn } from 'rxjs/operators';\n\nexport function createSideEffectObservable<T>(\n  stateObservables = new Subject<Observable<T>>()\n): {\n  effects$: Observable<T>;\n  nextEffectObservable: (effect$: Observable<T>) => void;\n} & Subscribable<T> {\n  const effects$: Observable<T> = merge(\n    stateObservables.pipe(mergeAll(), observeOn(queueScheduler))\n  );\n\n  function nextEffectObservable(effect$: Observable<T>): void {\n    stateObservables.next(effect$);\n  }\n\n  function subscribe(): Subscription {\n    return effects$.subscribe();\n  }\n\n  return {\n    effects$,\n    nextEffectObservable,\n    subscribe,\n  };\n}\n"],"sourceRoot":"webpack:///"}