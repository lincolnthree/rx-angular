{"version":3,"sources":["./apps/demos/src/app/features/template/rx-let/ng-if-hack/ng-if-hack-push.component.ts","./apps/demos/src/app/features/template/rx-let/ng-if-hack/ng-if-hack.routes.ts","./apps/demos/src/app/shared/debug-helper/value-provider/index.ts","./apps/demos/src/app/shared/debug-helper/value-provider/model.ts","./apps/demos/src/app/shared/debug-helper/visualizer/index.ts","./apps/demos/src/app/features/template/rx-let/ng-if-hack/ng-if-hack-static.component.ts","./apps/demos/src/app/features/template/rx-let/ng-if-hack/ng-if-hack.component.ts","./apps/demos/src/app/features/template/rx-let/ng-if-hack/ng-if-hack-async.component.ts","./apps/demos/src/app/features/template/rx-let/ng-if-hack/ng-if-hack-rx-let.component.ts","./apps/demos/src/app/features/template/rx-let/ng-if-hack/ng-if-hack.module.ts"],"names":[],"mappings":"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","file":"ng-if-hack-ng-if-hack-module.js","sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'rxa-ngif-hack-ng-if-push',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h3>*ngIf + push</h3>\n        <rxa-value-provider [buttons]=\"true\" #valP=\"rxaValueProvider\"></rxa-value-provider>\n      </div>\n      <ng-container *ngIf=\"valP.boolean$ | push as value\">\n        *ngIf: {{ value | json }}<br/>\n      </ng-container>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgIfHackNgIfPushComponent {\n\n}\n","import { NgIfHackComponent } from './ng-if-hack.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: NgIfHackComponent\n  }\n];\n","export * from './utils';\nexport * from './model';\nexport * from './primitives-provider.service';\nexport * from './array-provider.service';\nexport * from './value-provider/value-provider.component';\nexport * from './value-providers.module';\n","export enum SchedulingPriority {\n  sync,\n  animationFrame,\n  Promise,\n  setTimeout,\n  setInterval,\n  postMessage,\n  idleCallback,\n  userBlocking,\n  userVisible,\n  background\n}\n\n\nexport interface TestItem {\n  id: number;\n  value: number;\n  array?: TestItem[];\n}\n\nexport interface ProvidedValues {\n  random: number;\n  array: TestItem[];\n}\n\n/**\n * id: newIndex\n */\nexport interface Positions {\n  [id: number]: number\n}\n\nexport interface SchedulerConfig {\n  scheduler: SchedulingPriority;\n  duration?: number;\n  numEmissions?: number;\n  tickSpeed?: number|number[];\n}\n","export {VisualizerModule} from './visualizer.module';\nexport {VisualizerComponent} from './visualizer/visualizer.component';\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'rxa-ngif-hack-static',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h3>*ngIf</h3>\n        <rxa-value-provider [unpatched]=\"[]\" [buttons]=\"true\" #valP=\"rxaValueProvider\"></rxa-value-provider>\n      </div>\n      <ng-container *ngIf=\"valP.boolean\">\n        value: {{ valP.boolean | json }}<br/>\n      </ng-container>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgIfHackNgIfStaticComponent {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RxEffects } from '../../../../shared/rx-effects.service';\n\n@Component({\n  selector: 'rxa-ngif-hack-container',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h2>*ngIf hack</h2>\n        <mat-button-toggle-group name=\"visibleExamples\"\n                                 aria-label=\"Visible Examples\"\n                                 [value]=\"displayStates.all\"\n                                 #group=\"matButtonToggleGroup\">\n          <mat-button-toggle [value]=\"displayStates.ngIf\">ngIf</mat-button-toggle>\n          <mat-button-toggle [value]=\"displayStates.ngIfAsync\">ngIf + async</mat-button-toggle>\n          <mat-button-toggle [value]=\"displayStates.ngIfPush\">ngIf + push</mat-button-toggle>\n          <mat-button-toggle [value]=\"displayStates.rxLet\">rxlet</mat-button-toggle>\n          <mat-button-toggle [value]=\"displayStates.all\">All</mat-button-toggle>\n        </mat-button-toggle-group>\n        <br/>\n        <button mat-raised-button (click)=\"isVisible = !isVisible\">Toggle All</button>\n      </div>\n      <div class=\"w-100 row\" *ngIf=\"isVisible\">\n        <div class=\"col\" *ngIf=\"group.value === displayStates.ngIf || group.value === displayStates.all\">\n          <rxa-ngif-hack-static></rxa-ngif-hack-static>\n        </div>\n        <div class=\"col\" *ngIf=\"group.value === displayStates.ngIfAsync || group.value === displayStates.all\">\n          <rxa-ngif-hack-ng-if-async></rxa-ngif-hack-ng-if-async>\n        </div>\n        <div class=\"col\" *ngIf=\"group.value === displayStates.ngIfPush || group.value === displayStates.all\">\n          <rxa-ngif-hack-ng-if-push></rxa-ngif-hack-ng-if-push>\n        </div>\n        <div class=\"col\" *ngIf=\"group.value === displayStates.rxLet || group.value === displayStates.all\">\n          <rxa-ngif-hack-rx-let></rxa-ngif-hack-rx-let>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgIfHackComponent extends RxEffects {\n  isVisible= true\n\n  displayStates = {\n    none: 0,\n    all: 1,\n    ngIf: 2,\n    ngIfAsync: 3,\n    ngIfPush: 4,\n    rxLet: 5\n  };\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'rxa-ngif-hack-ng-if-async',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h3>*ngIf + async</h3>\n        <rxa-value-provider [unpatched]=\"[]\" [buttons]=\"true\" #valP=\"rxaValueProvider\"></rxa-value-provider>\n      </div>\n\n      <ng-container *rxLet=\"valP.boolean$; let value;\n               rxSuspense: suspenseView;\n               rxError: errorView;\n               rxComplete: completeView\n            \">\n        *ngIf: {{ value | json }}<br/>\n\n      </ng-container>\n\n      <ng-template #suspenseView>\n        <rxa-list-item-ghost></rxa-list-item-ghost>\n      </ng-template>\n\n      <ng-template #errorView>\n        <mat-icon color=\"warn\">delete</mat-icon>\n      </ng-template>\n\n      <ng-template #completeView>\n        <mat-icon color=\"primary\">check</mat-icon>\n      </ng-template>\n\n\n      <!--\n      <ng-container *rxLet=\"valP.boolean$; let value;\n               rxSuspense: suspenseView;\n               rxError: errorView;\n               rxComplete: completeView\n             \">\n        value: {{ value | json }}<br/>\n      </ng-container>\n\n      <ng-template #suspenseView>\n        <rxa-list-item-ghost></rxa-list-item-ghost>\n      </ng-template>\n\n      <ng-template #errorView>\n        <mat-icon color=\"warn\">delete</mat-icon>\n      </ng-template>\n\n      <ng-template #completeView>\n        <mat-icon color=\"primary\">check</mat-icon>\n      </ng-template>\n      -->\n\n\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgIfHackNgIfAsyncComponent {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'rxa-ngif-hack-rx-let',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h3>*rxLet Directive</h3>\n        <rxa-value-provider [unpatched]=\"false\" [buttons]=\"true\" #valP=\"rxaValueProvider\"></rxa-value-provider>\n      </div>\n\n      <ng-container *rxLet=\"valP.boolean$; let value;\n               rxSuspense: suspenseView;\n               rxError: errorView;\n               rxComplete: completeView\n             \">\n        value: {{ value | json }}<br/>\n      </ng-container>\n\n      <ng-template #suspenseView>\n        <rxa-list-item-ghost></rxa-list-item-ghost>\n      </ng-template>\n\n      <ng-template #errorView>\n        <mat-icon color=\"warn\">delete</mat-icon>\n      </ng-template>\n\n      <ng-template #completeView>\n        <mat-icon color=\"primary\">check</mat-icon>\n      </ng-template>\n\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgIfHackRxLetComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { ROUTES } from './ng-if-hack.routes';\nimport { NgIfHackComponent } from './ng-if-hack.component';\nimport { LetModule, PushModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ValueProvidersModule } from '../../../../shared/debug-helper/value-provider';\nimport { VisualizerModule } from '../../../../shared/debug-helper/visualizer';\nimport { NgIfHackNgIfAsyncComponent } from './ng-if-hack-async.component';\nimport { NgIfHackNgIfStaticComponent } from './ng-if-hack-static.component';\nimport { NgIfHackRxLetComponent } from './ng-if-hack-rx-let.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { NgIfHackNgIfPushComponent } from './ng-if-hack-push.component';\nimport { GhostElementsModule } from '../../../../shared/ghost-elements';\nimport { MatButtonModule } from '@angular/material/button';\n\nconst DECLARATIONS = [\n  NgIfHackComponent,\n  NgIfHackNgIfAsyncComponent,\n  NgIfHackNgIfStaticComponent,\n  NgIfHackRxLetComponent,\n  NgIfHackNgIfPushComponent\n];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    DirtyChecksModule,\n    LetModule,\n    UnpatchEventsModule,\n    NgxSkeletonLoaderModule,\n    MatIconModule,\n    ValueProvidersModule,\n    VisualizerModule,\n    PushModule,\n    MatButtonToggleModule,\n    GhostElementsModule,\n    MatButtonModule\n  ]\n})\nexport class NgIfHackModule {\n\n}\n"],"sourceRoot":"webpack:///"}