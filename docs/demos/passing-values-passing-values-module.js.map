{"version":3,"sources":["./apps/demos/src/app/features/concepts/passing-values/passing-values.module.ts","./apps/demos/src/app/features/concepts/passing-values/passing-values.routes.ts","./apps/demos/src/app/features/concepts/passing-values/passing-values.component.ts"],"names":[],"mappings":"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","file":"passing-values-passing-values-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './passing-values.routes';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PushModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { PassingValuesComponent } from './passing-values.component';\nimport { VisualizerModule } from '../../../shared/debug-helper/visualizer';\nimport { ValueProvidersModule } from '../../../shared/debug-helper/value-provider';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { RecursiveModule } from '../../../shared/template-structures/recursive/recursive.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    PassingValuesComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    VisualizerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonToggleModule,\n    ValueProvidersModule,\n    FormsModule,\n    MatIconModule,\n    RecursiveModule,\n    FormsModule,\n    UnpatchEventsModule,\n    MatButtonModule,\n    PushModule\n  ],\n  exports: []\n})\nexport class PassingValuesModule {\n}\n","import { PassingValuesComponent } from './passing-values.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: PassingValuesComponent\n  }\n];\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'rxa-passing-values',\n  template: `\n    <rxa-visualizer>\n      <ng-container visualizerHeader>\n        <h1 class=\"mat-headline\">Passing Values</h1>\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12\">\n            <mat-form-field>\n              <mat-label>Nesting Level</mat-label>\n              <input matInput type=\"number\" [(ngModel)]=\"depth\">\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Min Value</mat-label>\n              <input matInput type=\"number\" [(ngModel)]=\"min\">\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Max Value</mat-label>\n              <input matInput type=\"number\" [(ngModel)]=\"max\">\n            </mat-form-field>\n            <div>\n              <mat-button-toggle-group\n                name=\"visibleExamples\"\n                aria-label=\"Visible Examples\"\n                [value]=\"displayStates.all\"\n                #group=\"matButtonToggleGroup\">\n                <mat-button-toggle [value]=\"displayStates.static\">Static</mat-button-toggle>\n                <mat-button-toggle [value]=\"displayStates.observable\">Observable</mat-button-toggle>\n                <mat-button-toggle [value]=\"displayStates.all\">All</mat-button-toggle>\n              </mat-button-toggle-group>\n              <button mat-raised-button class=\"ml-2\" (click)=\"isVisible = !isVisible;\">\n                Toggle visibility to reset\n              </button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"row w-100\" *ngIf=\"isVisible\">\n        <div class=\"col\"\n             *ngIf=\"visible(group, displayStates.static)\">\n          <h2 class=\"mat-subheader\">Static</h2>\n          <rxa-value-provider [min]=\"min\" [max]=\"max\" [changes$]=\"btnBothClick$\"\n                              #staticVal=\"rxaValueProvider\"></rxa-value-provider>\n          <div class=\"mb-1\">\n            <button mat-mini-fab (click)=\"staticVal.next()\">\n              <mat-icon>add</mat-icon>\n            </button>\n          </div>\n          <rxa-recursive-static [depth]=\"depth\" [value]=\"staticVal.int\"></rxa-recursive-static>\n        </div>\n        <div class=\"col\"\n             *ngIf=\"visible(group, displayStates.observable)\">\n          <h2 class=\"mat-subheader\">Observable</h2>\n          <rxa-value-provider [min]=\"min\" [max]=\"max\" [changes$]=\"btnBothClick$\"\n                              #observableVal=\"rxaValueProvider\"></rxa-value-provider>\n          <div class=\"mb-1\">\n            <button mat-mini-fab [unpatch] (click)=\"observableVal.next()\">\n              <mat-icon>add</mat-icon>\n            </button>\n          </div>\n          <rxa-recursive-observable [depth]=\"depth\" [value$]=\"observableVal.int$\"></rxa-recursive-observable>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class PassingValuesComponent {\n  min = 0;\n  max = 5;\n\n  displayStates = {\n    none: 0,\n    all: 1,\n    static: 2,\n    observable: 3\n  };\n  isVisible = true;\n  btnBothClick$ = new BehaviorSubject<any>(1);\n\n  private _depth = 5;\n  set depth(depth: number) {\n    this._depth = depth >= 1 ? depth : 1;\n  }\n\n  get depth(): number {\n    return this._depth;\n  }\n\n  selected(group, choice) {\n    return group.value === choice;\n  }\n\n  visible(group, choice) {\n    return group.value === choice || group.value === this.displayStates.all;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}