{"version":3,"sources":["./apps/demos/src/app/shared/debug-helper/value-provider/scheduling-helper.ts","./apps/demos/src/app/shared/debug-helper/cd-trigger/cd-trigger.module.ts","./apps/demos/src/app/shared/debug-helper/work/index.ts","./apps/demos/src/app/shared/ghost-elements/ghost-elements.module.ts","./apps/demos/src/app/shared/debug-helper/cd-default/cd-default/cd-default.component.ts","./apps/demos/src/app/shared/debug-helper/value-provider/value/value.module.ts","./apps/demos/src/app/shared/utils/to-int.ts","./apps/demos/src/app/shared/debug-helper/rendering-work/rendering-work/rendering-work.component.ts","./apps/demos/src/app/shared/ghost-elements/index.ts","./apps/demos/src/app/features/integrations/dynamic-counter/shared/utils.ts","./apps/demos/src/app/shared/debug-helper/cd-default/cd-default.module.ts","./apps/demos/src/app/shared/utils/to-latest-from.ts","./apps/demos/src/app/features/integrations/dynamic-counter/shared/counter-display.component.ts","./apps/demos/src/app/shared/ghost-elements/form-ghost/form-ghost.component.ts","./apps/demos/src/app/shared/debug-helper/cd-trigger/cd-trigger/cd-trigger.component.ts","./apps/demos/src/app/shared/debug-helper/value-provider/value/value.component.ts","./apps/demos/src/app/shared/utils/cd-helper.ts","./apps/demos/src/app/shared/ghost-elements/list-item-ghost/list-item-ghost.component.ts","./apps/demos/src/app/shared/debug-helper/work/fibonacci.ts","./apps/demos/src/app/shared/debug-helper/rendering-work/rendering-work.module.ts","./apps/demos/src/app/features/integrations/dynamic-counter/shared/model.ts","./apps/demos/src/app/features/integrations/dynamic-counter/shared/shared.module.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { BehaviorSubject, EMPTY, Observable, Subject } from 'rxjs';\nimport { scan, share, switchAll, switchMap } from 'rxjs/operators';\nimport { toTick } from './utils';\nimport { SchedulingPriority } from './model';\n\nexport const schedulingHelper = () => {\n\n  let active = false;\n\n  const schedulerSubject = new BehaviorSubject<SchedulingPriority>(SchedulingPriority.animationFrame);\n  const tickSubject$ = new Subject<Observable<number>>();\n  const ticks$ = tickSubject$.pipe(\n    switchAll(),\n    scan(a => ++a, 0),\n    share()\n  );\n\n  const toggle = (): void => {\n    tickSubject$.next(active ? EMPTY as Observable<any> : schedulerSubject.pipe(\n      switchMap((s) => toTick({ scheduler: s }))\n    ));\n    active = !active;\n  };\n\n\n  const duration = (d: number): void => {\n    tickSubject$.next(active ? EMPTY as Observable<any> : schedulerSubject.pipe(\n      switchMap((s) => toTick({ scheduler: s, duration: d }))\n    ));\n    active = !active;\n  };\n\n\n  const scheduler = (schedulerName: SchedulingPriority): void => {\n    schedulerSubject.next(schedulerName);\n  };\n\n  const tick = (numEmissions: number = 1, tickSpeed?: number|number[]): void => {\n    tickSubject$.next(\n      schedulerSubject.pipe(\n        switchMap((s) => toTick({\n            scheduler: s,\n            numEmissions,\n            tickSpeed\n          })\n        )\n      )\n    );\n  };\n\n  return {\n    scheduler,\n    ticks$,\n    tick,\n    toggle,\n    duration\n  };\n\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdTriggerComponent } from './cd-trigger/cd-trigger.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UnpatchEventsModule } from '@rx-angular/template';\nimport { ZonePatchedIconModule } from '../../zone-patched-icon/zone-patched-icon.module';\n\n\n@NgModule({\n  declarations: [CdTriggerComponent],\n  exports: [\n    CdTriggerComponent\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    UnpatchEventsModule,\n    ZonePatchedIconModule\n  ]\n})\nexport class CdTriggerModule { }\n","export {ValueModule} from '../value-provider/value/value.module';\nexport {ValueComponent} from '../value-provider/value/value.component';\nexport {fibonacci} from './fibonacci';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LetModule, PushModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { ListItemGhostComponent } from './list-item-ghost/list-item-ghost.component';\nimport { FormGhostComponent } from './form-ghost/form-ghost.component';\n\nconst DECLARATIONS = [\n  ListItemGhostComponent,\n  FormGhostComponent\n];\nconst IMPORTS = [\n  CommonModule,\n  LetModule, PushModule,\n  UnpatchEventsModule,\n  PushModule,\n  NgxSkeletonLoaderModule\n];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [IMPORTS],\n  exports: [DECLARATIONS, IMPORTS]\n})\nexport class GhostElementsModule {\n}\n\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CdHelper } from '../../../utils/cd-helper';\n\n@Component({\n  selector: 'rxa-cd-default',\n  template: `\n    <rxa-visualizer>\n      <ng-container visualizerHeader>\n        <h3>Default</h3>\n        <rxa-cd-trigger [cdHelper]=\"cdHelper\"></rxa-cd-trigger>\n        <ng-content select=\"[cdDefaultHeader]\"></ng-content>\n      </ng-container>\n      <ng-content></ng-content>\n    </rxa-visualizer>`,\n  host: {\n    class: 'd-block w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.Default,\n  providers: [CdHelper]\n})\nexport class CdDefaultComponent {\n  constructor(public cdHelper: CdHelper) {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DirtyChecksModule } from '../../dirty-checks';\nimport { ValueComponent } from './value.component';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LetModule, PushModule } from '@rx-angular/template';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { MatIconModule } from '@angular/material/icon';\n\nconst DEPRECATIONS = [ValueComponent];\n\n@NgModule({\n  declarations: [...DEPRECATIONS],\n    imports: [\n        CommonModule,\n        MatRippleModule,\n        PushModule,\n        UtilsModule,\n        LetModule,\n        MatIconModule,\n        DirtyChecksModule\n    ],\n  exports: [...DEPRECATIONS]\n})\nexport class ValueModule {\n\n}\n","import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport function toInt(base: number = 10) {\n  return (o$: Observable<any>): Observable<number> => o$.pipe(\n    map(v => parseInt(v, base))\n  );\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'rxa-rendering-work',\n  template: ` <div *ngFor=\"let item of items\">{{ item }}</div> `,\n})\nexport class RenderingWorkComponent {\n  @Input() set factor(factor: number) {\n    this.items = new Array(factor * 100).fill(1).map((v, index) => index);\n  }\n\n  public items;\n}\n","export {FormGhostComponent} from './form-ghost/form-ghost.component';\nexport {ListItemGhostComponent} from './list-item-ghost/list-item-ghost.component';\nexport {GhostElementsModule} from './ghost-elements.module';\n","import { CounterState } from './model';\n\nexport function updateCount(s: Pick<CounterState, 'count' | 'countUp' | 'countDiff'>) {\n  return s.count + ((s.countUp ? 1 : -1) * s.countDiff)\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdDefaultComponent } from './cd-default/cd-default.component';\nimport { VisualizerModule } from '../visualizer/visualizer.module';\nimport { CdTriggerModule } from '../cd-trigger/cd-trigger.module';\n\n\n@NgModule({\n  declarations: [CdDefaultComponent],\n  imports: [\n    CommonModule,\n    VisualizerModule,\n    CdTriggerModule\n  ],\n  exports: [CdDefaultComponent]\n})\nexport class CdDefaultModule { }\n","import { Observable } from 'rxjs';\nimport { map, startWith, withLatestFrom } from 'rxjs/operators';\n\nexport function toLatestFrom<S, I>(secondary$: Observable<S>, initialValue?: S) {\n  return (o$: Observable<I>): Observable<S> =>  {\n    const _secondary$ = initialValue !== undefined ? secondary$ : secondary$.pipe(startWith(initialValue))\n    return o$.pipe(withLatestFrom(_secondary$), map(v => v[1]));\n  }\n}\n","import { EMPTY } from 'rxjs';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'rxa-counter-display',\n  template: `\n    <span class=\"position\" *ngFor=\"let d of count$ | push | toArray\">\n        <span class=\"digit static\">{{ d }}</span>\n    </span>\n  `,\n  host: {\n    class: 'count'\n  }\n})\nexport class CounterDisplayComponent {\n  @Input()\n  count$ = EMPTY;\n\n}\n\n\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'rxa-form-ghost',\n  template: `\n    <div *ngFor=\"let n of numItems\" class=\"form-ghost\">\n      <ngx-skeleton-loader class=\"input-ghost\"></ngx-skeleton-loader>\n      <ngx-skeleton-loader class=\"input-ghost\"></ngx-skeleton-loader>\n      <ngx-skeleton-loader class=\"input-ghost\"></ngx-skeleton-loader>\n      <ngx-skeleton-loader class=\"input-ghost\"></ngx-skeleton-loader>\n      <ngx-skeleton-loader class=\"button-ghost\"></ngx-skeleton-loader>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    .form-ghost {\n      position: relative;\n      text-align: left;\n      width: 100%;\n    }\n\n    .form-ghost .button-ghost {\n      width: 50px;\n      float: right;\n    }\n\n    .form-ghost .input-ghost {\n      float: left;\n      line-height: 10px;\n      width: 100%;\n    }\n\n    .form-ghost .input-ghost .loader {\n      border: 1px solid lightgray;\n    }\n\n    .form-ghost .input-ghost:first-child {\n      width: 48%;\n      padding-right: 5px;\n    }\n\n    .form-ghost .input-ghost:nth-child(2) {\n       width: 48%;\n       float: right;\n    }\n  `]\n})\nexport class FormGhostComponent {\n\n  numItems = [0];\n  @Input()\n  set count(n: number) {\n    this.numItems = Array(n < 1 ? 1 : n).fill(0);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { CdHelper } from '../../../utils/cd-helper';\n\n@Component({\n  selector: 'rxa-cd-trigger',\n  template: `\n    <button mat-raised-button (click)=\"cdHelper.appRef_tick()\">\n      tick\n    </button>\n    <button mat-raised-button (click)=\"cdHelper.cdRef_markForCheck()\">\n      markForCheck <rxa-zone-patched-icon class=\"mat-icon\"></rxa-zone-patched-icon>\n    </button>\n    <button mat-raised-button [unpatch] (click)=\"cdHelper.cdRef_detectChanges()\">\n      detectChanges <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"'unpatched'\"></rxa-zone-patched-icon>\n    </button>\n    <button mat-raised-button [unpatch] (click)=\"cdHelper.markDirty()\">\n      ɵmarkDirty <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"'unpatched'\"></rxa-zone-patched-icon>\n    </button>\n    <button mat-raised-button [unpatch] (click)=\"cdHelper.detectChanges()\">\n      ɵdetectChanges <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"'unpatched'\"></rxa-zone-patched-icon>\n    </button>\n  `,\n  host: {\n    class: 'd-flex flex-wrap'\n  },\n  providers: [CdHelper]\n})\nexport class CdTriggerComponent {\n\n  @Input()\n  cdHelper = this._cdHelper;\n\n  constructor(private _cdHelper: CdHelper) { }\n\n}\n","// tslint:disable:no-unused-expression\n\nimport { Component, Input } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RxState } from '@rx-angular/state';\nimport { toBoolean } from '../utils';\nimport { TestItem } from '../model';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'rxa-value',\n  template: `\n    <mat-icon class=\"item\" [ngClass]=\"{red:!v, green:v}\" *rxLet=\"value$; let v\">{{v ? 'check' : 'highlight_off'}}</mat-icon>`,\n  styles: [`\n    .item.red {\n      color: red;\n    }\n    .item.green {\n      color: green;\n    }\n    .value.number {\n    }\n    .value.string {\n    }\n    .value.object {\n    }\n    .value.array {\n    }\n  `],\n  providers: [RxState]\n})\nexport class ValueComponent {\n  value$ = this.state.select(map(s => toBoolean(s.item.value, 0.5)));\n\n  @Input()\n  set value(o: Observable<TestItem> | TestItem) {\n    this.state.connect('item', isObservable(o) ? o : of(o));\n  }\n\n\n  constructor(public state: RxState<{ item: TestItem }>) {\n\n  }\n\n}\n","import { ApplicationRef, ChangeDetectorRef, Injectable, ɵdetectChanges, ɵmarkDirty } from '@angular/core';\n\n\n@Injectable()\nexport class CdHelper {\n\n  constructor(\n    protected cdRef: ChangeDetectorRef,\n    protected appRef: ApplicationRef\n  ) {}\n\n  appRef_tick() {\n    this.appRef.tick();\n  }\n cdRef_detectChanges() {\n    this.cdRef.detectChanges();\n  }\n\n  cdRef_markForCheck() {\n    this.cdRef.markForCheck();\n  }\n\n  markDirty() {\n    ɵmarkDirty((this.cdRef as any).context);\n  }\n\n  detectChanges() {\n    ɵdetectChanges((this.cdRef as any).context);\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'rxa-list-item-ghost',\n  template: `\n    <div *ngFor=\"let n of numItems\" class=\"list-item-ghost\">\n      <ngx-skeleton-loader class=\"icon-ghost\" [appearance]=\"'circle'\"></ngx-skeleton-loader>\n      <div class=\"text-ghost\">\n        <ngx-skeleton-loader [count]=\"3\"></ngx-skeleton-loader>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    .list-item-ghost {\n      position: relative;\n      text-align: left;\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      margin-bottom: 8px;\n    }\n\n    .list-item-ghost .icon-ghost {\n      margin-right: 15px;\n    }\n\n    .list-item-ghost .icon-ghost .loader.circle {\n      width: 35px;\n      height: 35px;\n      margin: 0;\n    }\n\n    .list-item-ghost .text-ghost {\n      flex-grow: 2;\n      line-height: 10px;\n    }\n\n    .list-item-ghost .text-ghost .loader {\n      height: 8px;\n      margin: 0 0 5px 0;\n    }\n\n    .list-item-ghost .text-ghost .loader:first-child {\n      width: 70%;\n    }\n\n    .list-item-ghost .text-ghost .loader:nth-child(2) {\n      width: 90%;\n    }\n\n    .list-item-ghost .text-ghost .loader:nth-child(3) {\n      width: 50%;\n    }\n  `]\n})\nexport class ListItemGhostComponent {\n\n  numItems = [0];\n  @Input()\n  set count(n: number) {\n    this.numItems = Array(n < 1 ? 1 : n).fill(0);\n  }\n}\n","// @ts-ignore\n\n\nexport function fibonacci(n: number): number {\n  if (n < 1) {\n    throw new Error('fibonacci: First argument must be a number greater than zero.');\n  }\n\n  if (n === 1 || n === 2) {\n    return 1;\n  } else {\n    return fibonacci(n - 1) + fibonacci(n - 2);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RenderingWorkComponent } from './rendering-work/rendering-work.component';\nimport { UnpatchEventsModule } from '@rx-angular/template';\n\n@NgModule({\n  declarations: [RenderingWorkComponent],\n  exports: [RenderingWorkComponent],\n  imports: [CommonModule, MatButtonModule, UnpatchEventsModule],\n})\nexport class RenderingWorkModule {}\n","\nexport interface InputEvent {\n  target: {\n    value: any;\n  };\n}\n\nexport interface CounterState {\n  isTicking: boolean;\n  count: number;\n  countUp: boolean;\n  tickSpeed: number;\n  countDiff: number;\n}\n\nexport const INITIAL_STATE = {\n  isTicking: false,\n  count: 0,\n  countUp: true,\n  tickSpeed: 200,\n  countDiff: 1,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { LetModule, PushModule } from '@rx-angular/template';\nimport { CounterDisplayComponent } from './counter-display.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UtilsModule } from '../../../../shared/utils/utils.module';\n\nconst DECLARATIONS = [CounterDisplayComponent];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    CommonModule,\n    LetModule, PushModule,\n    UtilsModule\n  ],\n  exports: [\n    DECLARATIONS,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    LetModule, PushModule,\n    UtilsModule\n  ]\n})\nexport class SharedModule {\n}\n"],"sourceRoot":"webpack:///"}