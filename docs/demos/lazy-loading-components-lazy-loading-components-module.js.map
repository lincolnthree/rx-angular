{"version":3,"sources":["./apps/demos/src/app/features/template/rx-let/lazy-loading-components/lazy-loading-components.routes.ts","./apps/demos/src/app/features/template/rx-let/lazy-loading-components/lazy-loading-components-async-await.component.ts","./apps/demos/src/app/features/template/rx-let/lazy-loading-components/lazy-loading-components-observable.component.ts","./apps/demos/src/app/shared/debug-helper/visualizer/index.ts","./apps/demos/src/app/features/template/rx-let/lazy-loading-components/lazy-loading-components-promise.component.ts","./apps/demos/src/app/features/template/rx-let/lazy-loading-components/lazy-loading-components.component.ts","./apps/demos/src/app/features/template/rx-let/lazy-loading-components/lazy-loading-components.module.ts"],"names":[],"mappings":"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","file":"lazy-loading-components-lazy-loading-components-module.js","sourcesContent":["import { LazyLoadingComponentsComponent } from './lazy-loading-components.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: LazyLoadingComponentsComponent\n  }\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { CdHelper } from '../../../../shared/utils/cd-helper';\n\n@Component({\n  selector: 'rxa-lazy-loading-components-async-await',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h3>Resolving over async/await</h3>\n        <button mat-raised-button (click)=\"toggle();\">Toggle</button>\n      </div>\n      <ng-template #suspenseView>\n        <rxa-list-item-ghost></rxa-list-item-ghost>\n      </ng-template>\n      <ng-container [ngComponentOutlet]=\"componentAwait\" *ngIf=\"componentAwait; else: suspenseView\"></ng-container>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [CdHelper]\n})\nexport class LazyLoadingComponentsAsyncAwaitComponent {\n  _shouldLoadA = false;\n  componentAwait;\n\n  cA = () => import('./lazy-components/lazy-component-a.component').then(c => c.component);\n  cB = () => import('./lazy-components/lazy-component-b.component').then(c => c.component);\n\n  constructor(private cdRef: ChangeDetectorRef) {\n  }\n\n  toggle() {\n    this._shouldLoadA = !this._shouldLoadA;\n    this.awaiting(this._shouldLoadA);\n  }\n\n  async awaiting(b: boolean) {\n    this.componentAwait = await (b ? this.cA() : this.cB());\n    this.cdRef.detectChanges();\n  }\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CdHelper } from '../../../../shared/utils/cd-helper';\nimport { Subject } from 'rxjs';\nimport { delay, scan, shareReplay, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'rxa-lazy-loading-components-observable',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h3>Resolving over Observable</h3>\n        <button mat-raised-button [unpatch] (click)=\"toggleSubject.next();\">Toggle</button>\n      </div>\n      <ng-template #suspenseView>\n        <rxa-list-item-ghost></rxa-list-item-ghost>\n      </ng-template>\n      <ng-container [ngComponentOutlet]=\"c\" *rxLet=\"component$; let c; rxSuspense:suspenseView\"></ng-container>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [CdHelper]\n})\nexport class LazyLoadingComponentsObservableComponent {\n  toggleSubject = new Subject<boolean>();\n  toggle$ = this.toggleSubject.pipe(\n    scan(b => !b, false),\n    delay(1000)\n  );\n\n  component$ = this.toggle$.pipe(\n    switchMap(b => b ? this.cA() : this.cB()),\n    shareReplay(1)\n  );\n\n  cA = () => import('./lazy-components/lazy-component-a.component').then(c => c.component);\n  cB = () => import('./lazy-components/lazy-component-b.component').then(c => c.component);\n\n}\n","export {VisualizerModule} from './visualizer.module';\nexport {VisualizerComponent} from './visualizer/visualizer.component';\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { from, Subject } from 'rxjs';\nimport { delay, scan, shareReplay, switchMap } from 'rxjs/operators';\nimport { RxEffects } from '../../../../shared/rx-effects.service';\nimport { CdHelper } from '../../../../shared/utils/cd-helper';\n\n@Component({\n  selector: 'rxa-lazy-loading-components-promise',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h3>Resolving over Promise</h3>\n        <button mat-raised-button (click)=\"toggle();\">Toggle</button>\n      </div>\n    <ng-template #suspenseView>\n      <rxa-list-item-ghost></rxa-list-item-ghost>\n    </ng-template>\n    <ng-container [ngComponentOutlet]=\"c\" *rxLet=\"componentPromise; let c; rxSuspense:suspenseView\"></ng-container>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LazyLoadingComponentsPromiseComponent {\n  _isComponentA = false;\n  componentPromise;\n\n  cA = () => import('./lazy-components/lazy-component-a.component').then(c => c.component);\n  cB = () => import('./lazy-components/lazy-component-b.component').then(c => c.component);\n\n  constructor(private cdRef: ChangeDetectorRef) {\n  }\n\n  toggle() {\n    this._isComponentA = !this._isComponentA;\n    this.componentPromise = from((this._isComponentA ? this.cA() : this.cB()));\n  }\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RxEffects } from '../../../../shared/rx-effects.service';\n\n@Component({\n  selector: 'rxa-lazy-loading-components',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h2>Lazy Loading Components</h2>\n        <mat-button-toggle-group name=\"visibleExamples\"\n                                 aria-label=\"Visible Examples\"\n                                 [value]=\"displayStates.all\"\n                                 #group=\"matButtonToggleGroup\">\n          <mat-button-toggle [value]=\"displayStates.await\">Async Await</mat-button-toggle>\n          <mat-button-toggle [value]=\"displayStates.promise\">Promise</mat-button-toggle>\n          <mat-button-toggle [value]=\"displayStates.observable\">Observable</mat-button-toggle>\n          <mat-button-toggle [value]=\"displayStates.all\">All</mat-button-toggle>\n        </mat-button-toggle-group>\n        <br/>\n      </div>\n      <div class=\"w-100 row\">\n        <div class=\"col\" *ngIf=\"group.value === displayStates.await || group.value === displayStates.all\">\n          <rxa-lazy-loading-components-async-await></rxa-lazy-loading-components-async-await>\n        </div>\n        <div class=\"col\" *ngIf=\"group.value === displayStates.promise || group.value === displayStates.all\">\n          <rxa-lazy-loading-components-promise></rxa-lazy-loading-components-promise>\n        </div>\n        <div class=\"col\" *ngIf=\"group.value === displayStates.observable || group.value === displayStates.all\">\n          <rxa-lazy-loading-components-observable></rxa-lazy-loading-components-observable>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LazyLoadingComponentsComponent extends RxEffects {\n\n  displayStates = {\n    none: 0,\n    all: 1,\n    await: 2,\n    promise: 3,\n    observable: 4\n  };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './lazy-loading-components.routes';\nimport { LazyLoadingComponentsComponent } from './lazy-loading-components.component';\nimport { LetModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { GhostElementsModule } from '../../../../shared/ghost-elements';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualizerModule } from '../../../../shared/debug-helper/visualizer';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { LazyLoadingComponentsObservableComponent } from './lazy-loading-components-observable.component';\nimport { LazyLoadingComponentsPromiseComponent } from './lazy-loading-components-promise.component';\nimport { LazyLoadingComponentsAsyncAwaitComponent } from './lazy-loading-components-async-await.component';\n\nconst DECLARATIONS = [\n  LazyLoadingComponentsObservableComponent,\n  LazyLoadingComponentsPromiseComponent,\n  LazyLoadingComponentsAsyncAwaitComponent,\n  LazyLoadingComponentsComponent\n];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    LetModule,\n    UnpatchEventsModule,\n    GhostElementsModule,\n    MatButtonModule,\n    VisualizerModule,\n    MatButtonToggleModule\n  ]\n})\nexport class LazyLoadingComponentsModule {\n\n}\n"],"sourceRoot":"webpack:///"}