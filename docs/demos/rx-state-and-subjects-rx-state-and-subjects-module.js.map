{"version":3,"sources":["./apps/demos/src/app/shared/utils/utils.module.ts","./apps/demos/src/app/shared/utils/to-array.pipe.ts","./apps/demos/src/app/features/integrations/dynamic-counter/rx-state-and-subjects/rx-state-and-subjects.routes.ts","./apps/demos/src/app/features/integrations/dynamic-counter/rx-state-and-subjects/rx-state-and-subjects.component.ts","./apps/demos/src/app/features/integrations/dynamic-counter/rx-state-and-subjects/rx-state-and-subjects.module.ts"],"names":[],"mappings":"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","file":"rx-state-and-subjects-rx-state-and-subjects-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","import { Routes } from '@angular/router';\nimport { RxStateAndSubjectsComponent } from './rx-state-and-subjects.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: RxStateAndSubjectsComponent\n  }\n];\n","import { Component } from '@angular/core';\nimport { CounterState, INITIAL_STATE } from '../shared/model';\nimport { RxState, selectSlice } from '@rx-angular/state';\nimport { EMPTY, Observable, Subject, timer } from 'rxjs';\nimport { toLatestFrom } from '../../../../shared/utils/to-latest-from';\nimport { map, scan, switchMap } from 'rxjs/operators';\nimport { toInt } from '../../../../shared/utils/to-int';\nimport { updateCount } from '../shared/utils';\n\n@Component({\n  selector: 'rxa-counter-rx-state-in-the-view',\n  template: `\n    <h1>RxState + Subjects</h1>\n    <div class=\"counter\">\n\n      <rxa-counter-display [count$]=\"count$\"></rxa-counter-display>\n\n      <button (click)=\"set({isTicking: true})\" mat-raised-button>\n        Start\n      </button>\n\n      <button (click)=\"set({isTicking: false})\" mat-raised-button>\n        Pause\n      </button>\n\n      <button (click)=\"set(initialCounterState)\" mat-raised-button>\n        Reset\n      </button>\n\n      <br/>\n\n      <button (click)=\"setToClick.next()\" mat-raised-button>\n        Set To\n      </button>\n\n      <mat-form-field>\n        <label>Count</label>\n        <input #count type=\"number\" min=\"0\" matInput [value]=\"count$ | push\" (input)=\"countChange.next(count.value)\"/>\n      </mat-form-field>\n      <br/>\n\n      <button (click)=\"set({countUp: true})\" mat-raised-button>\n        Count Up\n      </button>\n\n      <button (click)=\"set({countUp: false})\" mat-raised-button>\n        Count Down\n      </button>\n\n      <br/>\n\n      <mat-form-field>\n        <label>Tick Speed</label>\n        <input #tickSpeed type=\"number\" min=\"0\" matInput [value]=\"tickSpeed$ | push\" (input)=\"set({tickSpeed: tickSpeed.value})\"/>\n      </mat-form-field>\n\n      <mat-form-field>\n        <label>CountDiff</label>\n        <input #countDiff type=\"number\" min=\"0\" matInput [value]=\"countDiff$ | push\" (input)=\"set({countDiff: countDiff.value})\"/>\n      </mat-form-field>\n\n    </div>\n  `\n})\nexport class RxStateAndSubjectsComponent extends RxState<CounterState> {\n  initialCounterState: CounterState = INITIAL_STATE;\n\n  readonly countChange = new Subject<string>();\n  readonly tickSpeedChange = new Subject<string>();\n  readonly countDiffChange = new Subject<string>();\n  readonly isTickingToggle = new Subject<boolean>();\n  readonly countUpToggle = new Subject<boolean>();\n  readonly setToClick = new Subject<Event>();\n\n  private readonly updateCountTrigger$ = this.select(\n    selectSlice(['isTicking', 'tickSpeed']),\n    switchMap(s => (s.isTicking ? timer(0, s.tickSpeed) : EMPTY))\n  );\n\n  readonly count$: Observable<string> = this.select(map(s => s.count + ''));\n  readonly tickSpeed$: Observable<string> = this.select(map(s => s.tickSpeed + ''));\n  readonly countDiff$: Observable<string> = this.select(map(s => s.countDiff + ''));\n\n\n  constructor() {\n    super();\n    this.set(this.initialCounterState);\n\n    this.connect('isTicking', this.isTickingToggle.pipe(scan(a => !a, this.initialCounterState.isTicking)));\n    this.connect('countUp', this.countUpToggle.pipe(scan(a => !a, this.initialCounterState.countUp)));\n    this.connect('countDiff', this.countDiffChange.pipe(toInt()));\n    this.connect('tickSpeed', this.tickSpeedChange.pipe(toInt()));\n    this.connect('count', this.setToClick.pipe(toLatestFrom(this.countChange, this.initialCounterState.count + ''), toInt()));\n\n    this.connect('count', this.updateCountTrigger$, updateCount);\n  }\n\n\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './rx-state-and-subjects.routes';\nimport { RxStateAndSubjectsComponent } from './rx-state-and-subjects.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\nconst DECLARATIONS = [RxStateAndSubjectsComponent];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ROUTES),\n    CommonModule\n  ]\n})\nexport class RxStateAndSubjectsModule {\n}\n"],"sourceRoot":"webpack:///"}