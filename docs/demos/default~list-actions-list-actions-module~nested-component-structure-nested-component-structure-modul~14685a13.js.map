{"version":3,"sources":["./apps/demos/src/app/shared/template-structures/recursive/recursive-static.component.ts","./apps/demos/src/app/shared/template-structures/recursive/recursive-embedded-view-let.component.ts","./apps/demos/src/app/shared/debug-helper/value-provider/index.ts","./apps/demos/src/app/shared/template-structures/recursive/recursive-async.component.ts","./apps/demos/src/app/shared/template-structures/recursive/recursive.module.ts","./apps/demos/src/app/shared/template-structures/recursive/recursive-push.component.ts","./apps/demos/src/app/shared/debug-helper/value-provider/model.ts","./apps/demos/src/app/shared/debug-helper/visualizer/index.ts","./apps/demos/src/app/shared/template-structures/recursive/recursive-observable-work-push.component.ts","./apps/demos/src/app/shared/template-structures/recursive/recursive-component-let.component.ts","./apps/demos/src/app/shared/template-structures/recursive/recursive-observable-work-async.component.ts","./apps/demos/src/app/shared/template-structures/recursive/recursive-observable.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;IAKI,wEAAgD;IAC9C,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,4EAA4C;IAC9C,4DAAiB;IACnB,qEAAe;;;IAHS,0DAAuB;IAAvB,2GAAuB;IAC9B,0DAAgB;IAAhB,gFAAgB;;;IAI/B,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,qFAA+F;IACjG,4DAAiB;;;IAFK,0DAAuB;IAAvB,2GAAuB;IACrB,0DAAe;IAAf,+EAAe;;AAStC,MAAM,wBAAwB;IArBrC;QA8BE,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,CAAC,CAAC;KAKX;IAfC,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9B,CAAC;;gGANU,wBAAwB;wGAAxB,wBAAwB;QAlBjC,sIAKe;QACf,gNAKc;;;QAXC,iFAAmB;6RAkBzB,wBAAwB;;;;;;;;;;;;;ACtBrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;;;IAQ7B,4EAAiE;;;IAA3B,wEAAY;;;IAHtD,wEAAgD;IAC9C,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,4JAAiE;IACnE,4DAAiB;IACnB,qEAAe;;;IAHS,0DAAuB;IAAvB,2GAAuB;IAC7B,0DAAiB;IAAjB,kFAAiB;;;IAM/B,gGAC+E;;;;IAD9C,+EAAe;;;IAFlD,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,mMAC+E;IACjF,4DAAiB;;;IAHK,0DAAuB;IAAvB,2GAAuB;IACO,0DAAiB;IAAjB,kFAAiB;;AAUpE,MAAM,iCAAiC;IAtB9C;QA8BE,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,CAAC,CAAC;QAEV,WAAM,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;KAO/B;IAnBC,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9B,CAAC;IAUD,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAAA,CAAC;;kHAlBS,iCAAiC;iHAAjC,iCAAiC;QAnB1C,+IAKe;QACf,yNAMc;;;QAZC,iFAAmB;6RAmBzB,iCAAiC;;;;;;;;;;;;;ACzB9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;AACA;AACsB;AACL;AACiB;AACjB;;;;;;;;;;;;;ACJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;;;IAKjC,wEAAgD;IAC9C,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,4EAAqD;;IACvD,4DAAiB;IACnB,qEAAe;;;IAHS,0DAAuB;IAAvB,2GAAuB;IAC9B,0DAAyB;IAAzB,kJAAyB;;;IAIxC,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,oFAAsG;;IACxG,4DAAiB;;;IAFK,0DAAuB;IAAvB,2GAAuB;IACtB,0DAAe;IAAf,+EAAe;;AASrC,MAAM,uBAAuB;IArBpC;QA6BE,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,CAAC,CAAC;QAEV,WAAM,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;KAO/B;IAnBC,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9B,CAAC;IAUD,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAAA,CAAC;;8FAlBS,uBAAuB;uGAAvB,uBAAuB;QAlBhC,qIAKe;QACf,+MAKc;;;QAXC,iFAAmB;6RAkBzB,uBAAuB;;;;;;;;;;;;;ACvBpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACY;AACuB;AACd;AACH;AACmC;AACF;AAClB;AACR;AACC;AACR;AACK;AACF;AACwB;AACP;;AAErF,MAAM,YAAY,GAAG;IACnB,oFAAwB;IACxB,4FAA4B;IAC5B,mFAAuB;IACvB,iFAAsB;IACtB,kGAA8B;IAC9B,yGAAiC;IACjC,8GAAoC;IACpC,gHAAqC;CACtC,CAAC;AAiBK,MAAM,eAAe;;8EAAf,eAAe;+FAAf,eAAe;mGAbjB;YACP,4DAAY;YACZ,wEAAe;YACf,4EAAiB;YACjB,wEAAmB;YACnB,+DAAU;YACV,yEAAgB;YAChB,iFAAoB;YACpB,0EAAgB;YAChB,8DAAS,EAAE,+DAAU;SACtB;oIAGU,eAAe,mBAzB1B,oFAAwB;QACxB,4FAA4B;QAC5B,mFAAuB;QACvB,iFAAsB;QACtB,kGAA8B;QAC9B,yGAAiC;QACjC,8GAAoC;QACpC,gHAAqC,aAMnC,4DAAY;QACZ,wEAAe;QACf,4EAAiB;QACjB,wEAAmB;QACnB,+DAAU;QACV,yEAAgB;QAChB,iFAAoB;QACpB,0EAAgB;QAChB,8DAAS,EAAE,+DAAU,aArBvB,oFAAwB;QACxB,4FAA4B;QAC5B,mFAAuB;QACvB,iFAAsB;QACtB,kGAA8B;QAC9B,yGAAiC;QACjC,8GAAoC;QACpC,gHAAqC;;;;;;;;;;;;;ACxBvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;;;;IAKjC,wEAAgD;IAC9C,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,4EAAoD;;IACtD,4DAAiB;IACnB,qEAAe;;;IAHS,0DAAuB;IAAvB,2GAAuB;IAC9B,0DAAwB;IAAxB,kJAAwB;;;IAIvC,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,mFAAmG;;IACrG,4DAAiB;;;IAFK,0DAAuB;IAAvB,2GAAuB;IACvB,0DAAe;IAAf,+EAAe;;AASpC,MAAM,sBAAsB;IArBnC;QA6BE,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,CAAC,CAAC;QAEV,WAAM,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;KAO/B;IAnBC,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9B,CAAC;IAUD,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAAA,CAAC;;4FAlBS,sBAAsB;sGAAtB,sBAAsB;QAlB/B,oIAKe;QACf,8MAKc;;;QAXC,iFAAmB;6RAkBzB,sBAAsB;;;;;;;;;;;;;ACxBnC;AAAA;AAAA,IAAY,kBAWX;AAXD,WAAY,kBAAkB;IAC5B,2DAAI;IACJ,+EAAc;IACd,iEAAO;IACP,uEAAU;IACV,yEAAW;IACX,yEAAW;IACX,2EAAY;IACZ,2EAAY;IACZ,yEAAW;IACX,uEAAU;AACZ,CAAC,EAXW,kBAAkB,KAAlB,kBAAkB,QAW7B;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACiB;;;;;;;;;;;;;ACAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;;;;;;IAK9B,wEAAgD;IAC9C,yFAAmC;IACjC,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,uDACF;;IAAA,4DAAsB;IACxB,qEAAe;;;IAJQ,0DAAa;IAAb,6EAAa;IACZ,0DAAuB;IAAvB,2GAAuB;IAC3C,0DACF;IADE,0JACF;;;IAGA,yFAAmC;IACjC,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,mGAE2F;IAC7F,4DAAsB;;;IALD,6EAAa;IACZ,0DAAuB;IAAvB,2GAAuB;IAEzC,0DAAa;IAAb,6EAAa;;AAUhB,MAAM,oCAAoC;IAvBjD;QA+BW,SAAI,GAAG,EAAE,CAAC;QAGnB,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,CAAC,CAAC;KAIX;IAhBC,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9B,CAAC;;wHANU,oCAAoC;oHAApC,oCAAoC;QApB7C,kJAKe;QACf,4NAOc;;;QAbC,iFAAmB;mMAoBzB,oCAAoC;;;;;;;;;;;;;ACzBjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;;;;IAQ7B,4EAAiE;;;IAA3B,wEAAY;;;IAHtD,wEAAgD;IAC9C,iFAAgB;IACd,uEAAoB;IAAA,uDAAqB;IAAA,4DAAI;IAC7C,yJAAiE;IACnE,4DAAiB;IACnB,qEAAe;;;IAHS,0DAAqB;IAArB,2GAAqB;IAC3B,0DAAiB;IAAjB,kFAAiB;;;IAM/B,4FAAgI;;;;IAAnG,+EAAe;;;IAF9C,iFAAgB;IACd,uEAAoB;IAAA,uDAAqB;IAAA,4DAAI;IAC7C,wLAAgI;IAClI,4DAAiB;;;IAFK,0DAAqB;IAArB,2GAAqB;IACK,0DAAe;IAAf,gFAAe;;AAS9D,MAAM,8BAA8B;IArB3C;QA6BE,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,CAAC,CAAC;QAEV,WAAM,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC;KAM9B;IAlBC,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAE,CAAC,CAAC;IAC7B,CAAC;IASD,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC;IAAA,CAAC;;4GAjBS,8BAA8B;8GAA9B,8BAA8B;QAlBvC,4IAKe;QACf,sNAKc;;;QAXC,iFAAmB;oXAkBzB,8BAA8B;;;;;;;;;;;;;ACvB3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;;;;;IAK9B,wEAAgD;IAC9C,yFAAmC;IACjC,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,uDACF;;IAAA,4DAAsB;IACxB,qEAAe;;;IAJQ,0DAAa;IAAb,6EAAa;IACZ,0DAAuB;IAAvB,2GAAuB;IAC3C,0DACF;IADE,0JACF;;;IAGA,yFAAmC;IACjC,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,oGAE4F;IAC9F,4DAAsB;;;IALD,6EAAa;IACZ,0DAAuB;IAAvB,2GAAuB;IAEzC,0DAAa;IAAb,6EAAa;;AAUhB,MAAM,qCAAqC;IAvBlD;QA+BW,SAAI,GAAG,EAAE,CAAC;QAGnB,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,CAAC,CAAC;KAIX;IAhBC,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9B,CAAC;;0HANU,qCAAqC;qHAArC,qCAAqC;QApB9C,mJAKe;QACf,6NAOc;;;QAbC,iFAAmB;mMAoBzB,qCAAqC;;;;;;;;;;;;;ACzBlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;;;;;;IAK9B,wEAAgD;IAC9C,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,4EAA6C;IAC/C,4DAAiB;IACnB,qEAAe;;;IAHS,0DAAuB;IAAvB,2GAAuB;IAC9B,0DAAiB;IAAjB,iFAAiB;;;IAIhC,iFAAgB;IACd,uEAAoB;IAAA,uDAAuB;IAAA,4DAAI;IAC/C,yFAAyG;IAC3G,4DAAiB;;;IAFK,0DAAuB;IAAvB,2GAAuB;IACjB,0DAAe;IAAf,+EAAe;;AAS1C,MAAM,4BAA4B;IArBzC;QA8BE,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,CAAC,CAAC;KAIX;IAdC,IACI,KAAK,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9B,CAAC;;wGANU,4BAA4B;4GAA5B,4BAA4B;QAlBrC,0IAKe;QACf,oNAKc;;;QAXC,iFAAmB;6RAkBzB,4BAA4B","file":"default~list-actions-list-actions-module~nested-component-structure-nested-component-structure-modul~14685a13.js","sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'rxa-recursive-static',\n  template: `\n    <ng-container *ngIf=\"level === 0; else: branch\">\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-renders [value$]=\"value\"></rxa-renders>\n      </rxa-visualizer>\n    </ng-container>\n    <ng-template #branch>\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-recursive-static [total]=\"total\" [level]=\"level-1\" [value]=\"value\"></rxa-recursive-static>\n      </rxa-visualizer>\n    </ng-template>\n  `,\n  host: {\n    class: 'd-flex w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecursiveStaticComponent {\n\n  @Input()\n  set depth(d) {\n    this.total = d;\n    this.level = this.total - 1;\n  }\n\n  @Input()\n  total = 0;\n\n  @Input()\n  level = 0;\n\n  @Input()\n  value;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'rxa-recursive-embedded-view-let',\n  template: `\n    <ng-container *ngIf=\"level === 0; else: branch\">\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-renders *poc1Let=\"value$; let v\" [value$]=\"v\"></rxa-renders>\n      </rxa-visualizer>\n    </ng-container>\n    <ng-template #branch>\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-recursive-embedded-view-let [total]=\"total\" *poc1Let=\"value$; let v\" [level]=\"level-1\"\n                                         [value]=\"v\"></rxa-recursive-embedded-view-let>\n      </rxa-visualizer>\n    </ng-template>\n  `,\n  host: {\n    class: 'd-flex w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecursiveEmbeddedViewLetComponent {\n  @Input()\n  set depth(d) {\n    this.total = d;\n    this.level = this.total - 1;\n  }\n\n  @Input()\n  total = 0;\n\n  @Input()\n  level = 0;\n\n  value$ = new ReplaySubject(1);\n\n  @Input()\n  set value(v) {\n    this.value$.next(v);\n  };\n\n}\n","export * from './utils';\nexport * from './model';\nexport * from './primitives-provider.service';\nexport * from './array-provider.service';\nexport * from './value-provider/value-provider.component';\nexport * from './value-providers.module';\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'rxa-recursive-async',\n  template: `\n    <ng-container *ngIf=\"level === 0; else: branch\">\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-renders [value$]=\"value$ | async\"></rxa-renders>\n      </rxa-visualizer>\n    </ng-container>\n    <ng-template #branch>\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-recursive-async [total]=\"total\" [level]=\"level-1\" [value]=\"value$ | async\"></rxa-recursive-async>\n      </rxa-visualizer>\n    </ng-template>\n  `,\n  host: {\n    class: 'd-flex w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecursiveAsyncComponent {\n  @Input()\n  set depth(d) {\n    this.total = d;\n    this.level = this.total - 1;\n  }\n\n  @Input()\n  total = 0;\n\n  @Input()\n  level = 0;\n\n  value$ = new ReplaySubject(1);\n\n  @Input()\n  set value(v) {\n    this.value$.next(v);\n  };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LetModule, PushModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { DirtyChecksModule } from '../../debug-helper/dirty-checks';\nimport { VisualizerModule } from '../../debug-helper/visualizer';\nimport { RecursiveObservableWorkAsyncComponent } from './recursive-observable-work-async.component';\nimport { RecursiveObservableWorkPushComponent } from './recursive-observable-work-push.component';\nimport { RecursiveObservableComponent } from './recursive-observable.component';\nimport { RecursiveStaticComponent } from './recursive-static.component';\nimport { ValueProvidersModule } from '../../debug-helper/value-provider';\nimport { RenderingsModule } from '../../debug-helper/renderings';\nimport { RecursiveAsyncComponent } from './recursive-async.component';\nimport { RecursivePushComponent } from './recursive-push.component';\nimport { RecursiveEmbeddedViewLetComponent } from './recursive-embedded-view-let.component';\nimport { RecursiveComponentLetComponent } from './recursive-component-let.component';\n\nconst DECLARATIONS = [\n  RecursiveStaticComponent,\n  RecursiveObservableComponent,\n  RecursiveAsyncComponent,\n  RecursivePushComponent,\n  RecursiveComponentLetComponent,\n  RecursiveEmbeddedViewLetComponent,\n  RecursiveObservableWorkPushComponent,\n  RecursiveObservableWorkAsyncComponent\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    DirtyChecksModule,\n    UnpatchEventsModule,\n    PushModule,\n    VisualizerModule,\n    ValueProvidersModule,\n    RenderingsModule,\n    LetModule, PushModule\n  ],\n  exports: DECLARATIONS\n})\nexport class RecursiveModule {\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'rxa-recursive-push',\n  template: `\n    <ng-container *ngIf=\"level === 0; else: branch\">\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-renders [value$]=\"value$ | push\"></rxa-renders>\n      </rxa-visualizer>\n    </ng-container>\n    <ng-template #branch>\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-recursive-push [total]=\"total\" [level]=\"level-1\" [value]=\"value$ | push\"></rxa-recursive-push>\n      </rxa-visualizer>\n    </ng-template>\n  `,\n  host: {\n    class: 'd-flex w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecursivePushComponent {\n  @Input()\n  set depth(d) {\n    this.total = d;\n    this.level = this.total - 1;\n  }\n\n  @Input()\n  total = 0;\n\n  @Input()\n  level = 0;\n\n  value$ = new ReplaySubject(1);\n\n  @Input()\n  set value(v) {\n    this.value$.next(v);\n  };\n\n}\n","export enum SchedulingPriority {\n  sync,\n  animationFrame,\n  Promise,\n  setTimeout,\n  setInterval,\n  postMessage,\n  idleCallback,\n  userBlocking,\n  userVisible,\n  background\n}\n\n\nexport interface TestItem {\n  id: number;\n  value: number;\n  array?: TestItem[];\n}\n\nexport interface ProvidedValues {\n  random: number;\n  array: TestItem[];\n}\n\n/**\n * id: newIndex\n */\nexport interface Positions {\n  [id: number]: number\n}\n\nexport interface SchedulerConfig {\n  scheduler: SchedulingPriority;\n  duration?: number;\n  numEmissions?: number;\n  tickSpeed?: number|number[];\n}\n","export {VisualizerModule} from './visualizer.module';\nexport {VisualizerComponent} from './visualizer/visualizer.component';\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'rxa-recursive-observable-work-push',\n  template: `\n    <ng-container *ngIf=\"level === 0; else: branch\">\n      <rxa-work-visualizer [work]=\"work\">\n        <p visualizerHeader>Level {{total - level}}</p>\n        {{ value$ | push }}\n      </rxa-work-visualizer>\n    </ng-container>\n    <ng-template #branch>\n      <rxa-work-visualizer [work]=\"work\">\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-recursive-observable-work-push\n          [work]=\"work\"\n          [total]=\"total\" [level]=\"level-1\" [value$]=\"value$\"></rxa-recursive-observable-work-push>\n      </rxa-work-visualizer>\n    </ng-template>\n  `,\n  host: {\n    class: 'd-flex w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecursiveObservableWorkPushComponent {\n\n  @Input()\n  set depth(d) {\n    this.total = d;\n    this.level = this.total - 1;\n  }\n\n  @Input() work = 10;\n\n  @Input()\n  total = 0;\n\n  @Input()\n  level = 0;\n\n  @Input() value$: Observable<any>;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'rxa-recursive-component-let',\n  template: `\n    <ng-container *ngIf=\"level === 0; else: branch\">\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total-level}}</p>\n        <rxa-renders *poc1Let=\"value$; let v\" [value$]=\"v\"></rxa-renders>\n      </rxa-visualizer>\n    </ng-container>\n    <ng-template #branch>\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total-level}}</p>\n        <rxa-recursive-component-let [total]=\"total\" *rxLet=\"value$; let v\" [level]=\"level-1\" [value]=\"v\"></rxa-recursive-component-let>\n      </rxa-visualizer>\n    </ng-template>\n  `,\n  host: {\n    class: 'd-flex w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecursiveComponentLetComponent {\n  @Input()\n  set depth(d){\n    this.total = d;\n    this.level = this.total -1;\n  }\n\n  @Input()\n  total = 0;\n\n  @Input()\n  level = 0;\n\n  value$ = new ReplaySubject(1)\n  @Input()\n  set value(v) {\n    this.value$.next(v)\n  };\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'rxa-recursive-observable-work-async',\n  template: `\n    <ng-container *ngIf=\"level === 0; else: branch\">\n      <rxa-work-visualizer [work]=\"work\">\n        <p visualizerHeader>Level {{total - level}}</p>\n        {{ value$ | async }}\n      </rxa-work-visualizer>\n    </ng-container>\n    <ng-template #branch>\n      <rxa-work-visualizer [work]=\"work\">\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-recursive-observable-work-async\n          [work]=\"work\"\n          [total]=\"total\" [level]=\"level-1\" [value$]=\"value$\"></rxa-recursive-observable-work-async>\n      </rxa-work-visualizer>\n    </ng-template>\n  `,\n  host: {\n    class: 'd-flex w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecursiveObservableWorkAsyncComponent {\n\n  @Input()\n  set depth(d) {\n    this.total = d;\n    this.level = this.total - 1;\n  }\n\n  @Input() work = 10;\n\n  @Input()\n  total = 0;\n\n  @Input()\n  level = 0;\n\n  @Input() value$: Observable<any>;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'rxa-recursive-observable',\n  template: `\n    <ng-container *ngIf=\"level === 0; else: branch\">\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-renders [value$]=\"value$\"></rxa-renders>\n      </rxa-visualizer>\n    </ng-container>\n    <ng-template #branch>\n      <rxa-visualizer>\n        <p visualizerHeader>Level {{total - level}}</p>\n        <rxa-recursive-observable [total]=\"total\" [level]=\"level-1\" [value$]=\"value$\"></rxa-recursive-observable>\n      </rxa-visualizer>\n    </ng-template>\n  `,\n  host: {\n    class: 'd-flex w-100'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecursiveObservableComponent {\n\n  @Input()\n  set depth(d) {\n    this.total = d;\n    this.level = this.total - 1;\n  }\n\n  @Input()\n  total = 0;\n\n  @Input()\n  level = 0;\n\n  @Input() value$: Observable<any>;\n\n}\n"],"sourceRoot":"webpack:///"}