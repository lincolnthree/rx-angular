{"version":3,"sources":["./apps/demos/src/app/features/template/pipes/pipe-poc/pipe-poc.module.ts","./apps/demos/src/app/features/template/pipes/pipe-poc/pipe-poc.component.ts","./apps/demos/src/app/features/template/pipes/pipe-poc/pipe-poc.routes.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEY;AACZ;AACmC;AACO;AACR;AACzB;AACb;;;AAE3C,MAAM,YAAY,GAAG,CAAC,oEAAgB,CAAC,CAAC;AAgBjC,MAAM,aAAa;;0EAAb,aAAa;4FAAb,aAAa;gGAZf;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,uDAAM,CAAC;YAC7B,2FAAU;YACV,mFAAiB;YACjB,wEAAe;YACf,wEAAmB;YACnB,+DAAU;YACV,8DAAS;SACV;mIAGU,aAAa,mBAhBJ,oEAAgB,aAKlC,4DAAY,gEAEZ,2FAAU;QACV,mFAAiB;QACjB,wEAAe;QACf,wEAAmB;QACnB,+DAAU;QACV,8DAAS,aAZS,oEAAgB;;;;;;;;;;;;;ACTtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACmD;;;;;;;;;IAsB1F,sEAAmD;IAAC,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,mFAAS;;AAe9D,MAAM,gBAAgB;IAnC7B;QAqCW,gBAAW,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAElC,WAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACrC,0DAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,EACzC,2EAAoB,EAAE,EACtB,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAEjB,CAAC;QAEF,aAAQ,GAAG,iDAAI,CAAC,0DAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC1C,gBAAW,GAAG,iDAAI,CAAC,mEAAY,CAAC,GAAG,CAAC,CAAC,CAAC;QACtC,eAAU,GAAG,iDAAI,CAAC,kEAAW,CAAC,qDAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAChD;;gFAdY,gBAAgB;gGAAhB,gBAAgB;QAhCzB,yEAAsB;QACpB,yEAAiB;QACf,4EAA+D;QAA7B,wIAAS,sBAAkB,IAAC;QAAC,iEAAM;QAAA,4DAAS;QAChF,4DAAM;QACR,4DAAM;QACN,6EAAmC;QACnC,yEAAiB;QACf,yEAAmB;QACjB,yEAA0B;QACxB,qEACF;QAAA,4DAAM;QACN,sEAAK;QAAC,wDAAkC;;;QAAA,4DAAM;QAChD,4DAAM;QACN,0EAAmB;QACjB,0EAA0B;QACxB,yEACF;QAAA,4DAAM;QACN,8GAAmE;;QACrE,4DAAM;QACN,0EAAmB;QACjB,0EAA0B;QACxB,wEACF;QAAA,4DAAM;QACN,uEAAK;QAAC,wDAAoC;;;QAAA,4DAAM;QAClD,4DAAM;QACR,4DAAM;;QAdI,2DAAkC;QAAlC,uOAAkC;QAMlC,0DAAkC;QAAlC,gKAAkC;QAMlC,0DAAoC;QAApC,2OAAoC;;;;;;;;;;;;;;AC9BlD;AAAA;AAAA;AAAwD;AAEjD,MAAM,MAAM,GAAG;IACpB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC5B;CACF,CAAC","file":"pipe-poc-pipe-poc-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { LetModule, PushModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { PipeModule } from '../../../../rx-angular-pocs/template/pipes/pipe/pipe.module';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { PipePocComponent } from './pipe-poc.component';\nimport { ROUTES } from './pipe-poc.routes';\n\nconst DECLARATIONS = [PipePocComponent];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    PipeModule,\n    DirtyChecksModule,\n    MatButtonModule,\n    UnpatchEventsModule,\n    PushModule,\n    LetModule\n  ],\n  exports: [DECLARATIONS]\n})\nexport class PipePocModule {\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { interval, pipe, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, share, switchMapTo, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'rxa-push-basic-example',\n  template: `\n    <div class=\"row mb-2\">\n      <div class=\"col\">\n        <button mat-raised-button unpatch (click)=\"updateClick.next()\">Update</button>\n      </div>\n    </div>\n    <rxa-dirty-check></rxa-dirty-check>\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <div class=\"mat-headline\">\n          toRandom\n        </div>\n        <div> {{ value$ | pipe:toRandom | push}}</div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"mat-headline\">\n          debounce350\n        </div>\n        <div *rxLet=\"value$ | pipe:debounce350; let value\"> {{value}}</div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"mat-headline\">\n          toInterval\n        </div>\n        <div> {{ value$ | pipe:toInterval | push}}</div>\n      </div>\n    </div>\n  `,\n  styles: [`\n\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PipePocComponent {\n\n  readonly updateClick = new Subject<void>();\n\n  readonly value$ = this.updateClick.pipe(\n    map(() => Math.ceil(Math.random() * 100)),\n    distinctUntilChanged(),\n    tap(console.log),\n    // share()\n  );\n\n  toRandom = pipe(map(() => Math.random()));\n  debounce350 = pipe(debounceTime(350));\n  toInterval = pipe(switchMapTo(interval(1000)));\n}\n\n","import { PipePocComponent } from './pipe-poc.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: PipePocComponent\n  }\n];\n"],"sourceRoot":"webpack:///"}