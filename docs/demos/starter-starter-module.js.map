{"version":3,"sources":["./apps/demos/src/app/features/integrations/dynamic-counter/starter/starter.component.ts","./apps/demos/src/app/features/integrations/dynamic-counter/starter/starter.module.ts","./apps/demos/src/app/shared/utils/utils.module.ts","./apps/demos/src/app/shared/utils/to-array.pipe.ts","./apps/demos/src/app/features/integrations/dynamic-counter/starter/starter.routes.ts"],"names":[],"mappings":";;;;;;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;;;;;;;;IAQtD,0EAAiE;IAC/D,0EAA2B;IACzB,uDACF;IAAA,4DAAO;IACT,4DAAO;;;IAFH,0DACF;IADE,gFACF;;AAgDH,MAAM,gBAAgB;IAK3B;QAJS,wBAAmB,GAAiB,2DAAa,CAAC;IAM3D,CAAC;;gFAPU,gBAAgB;gGAAhB,gBAAgB;QAtDzB,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,yEAAqB;QACnB,yEAAmB;QACjB,8GAIO;;;QACT,4DAAM;QAEN,4EAA0B;QACxB,kEACF;QAAA,4DAAS;QAET,4EAA0B;QACxB,mEACF;QAAA,4DAAS;QAET,6EAA0B;QACxB,mEACF;QAAA,4DAAS;QAET,iEAAK;QAEL,6EAA0B;QACxB,oEACF;QAAA,4DAAS;QAET,kFAAgB;QACd,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,uEAAuC;QACzC,4DAAiB;QACjB,iEAAK;QAEL,6EAA0B;QACxB,sEACF;QAAA,4DAAS;QAET,6EAA0B;QACxB,wEACF;QAAA,4DAAS;QAET,iEAAK;QACL,kFAAgB;QACd,yEAAO;QAAA,sEAAU;QAAA,4DAAQ;QACzB,uEAAuC;QACzC,4DAAiB;QACjB,kFAAgB;QACd,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,uEAAuC;QACzC,4DAAiB;QACnB,4DAAM;;QAhDmC,0DAA0B;QAA1B,iNAA0B;;;;;;;;;;;;;;ACZvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACL;AACa;AACA;;;AAEvD,MAAM,YAAY,GAAG,CAAC,mEAAgB,CAAC,CAAC;AASjC,MAAM,aAAa;;0EAAb,aAAa;4FAAb,aAAa;gGALf;YACP,kEAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,sDAAM,CAAC;SAC9B;mIAEU,aAAa,mBATJ,mEAAgB,aAKlC,kEAAY;;;;;;;;;;;;;ACVhB;AAAA;AAAA;AAAA;AAAA;AAA+C;AACD;;AAUvC,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;8FALb;YACP,4DAAY;SACb;mIAGU,WAAW,mBANP,0DAAW,aAExB,4DAAY,aAEJ,0DAAW;;;;;;;;;;;;;;;;;ACLhB,MAAM,WAAW;IACtB,SAAS,CAAC,KAAsB;QAC9B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;SACtD;QACD,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACzD,CAAC;;sEANU,WAAW;wGAAX,WAAW;;;;;;;;;;;;;ACJxB;AAAA;AAAA;AAAuD;AAEhD,MAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC","file":"starter-starter-module.js","sourcesContent":["import { Observable } from 'rxjs';\nimport { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { RxState } from '@rx-angular/state';\nimport { CounterState, INITIAL_STATE } from '../shared/model';\n\n@Component({\n  selector: 'rxa-counter-starter',\n  template: `\n    <h1>Counter</h1>\n    <div class=\"counter\">\n      <div class=\"count\">\n        <span class=\"position\" *ngFor=\"let d of count$ | push | toArray\">\n          <span class=\"digit static\">\n            {{ d }}\n          </span>\n        </span>\n      </div>\n\n      <button mat-raised-button>\n        Start\n      </button>\n\n      <button mat-raised-button>\n        Pause\n      </button>\n\n      <button mat-raised-button>\n        Reset\n      </button>\n\n      <br/>\n\n      <button mat-raised-button>\n        Set To\n      </button>\n\n      <mat-form-field>\n        <label>Count</label>\n        <input type=\"number\" min=\"0\" matInput/>\n      </mat-form-field>\n      <br/>\n\n      <button mat-raised-button>\n        Count Up\n      </button>\n\n      <button mat-raised-button>\n        Count Down\n      </button>\n\n      <br/>\n      <mat-form-field>\n        <label>Tick Speed</label>\n        <input type=\"number\" min=\"0\" matInput/>\n      </mat-form-field>\n      <mat-form-field>\n        <label>CountDiff</label>\n        <input type=\"number\" min=\"0\" matInput/>\n      </mat-form-field>\n    </div>\n  `\n})\nexport class StarterComponent {\n  readonly initialCounterState: CounterState = INITIAL_STATE;\n\n  readonly count$: Observable<string>;\n\n  constructor() {\n\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './starter.routes';\nimport { StarterComponent } from './starter.component';\nimport { SharedModule } from '../shared/shared.module';\n\nconst DECLARATIONS = [StarterComponent];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ROUTES)\n  ]\n})\nexport class StarterModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","import { Routes } from '@angular/router';\nimport { StarterComponent } from './starter.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: StarterComponent\n  }\n];\n"],"sourceRoot":"webpack:///"}