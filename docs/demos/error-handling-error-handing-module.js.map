{"version":3,"sources":["./apps/demos/src/app/features/template/rx-let/error-handling/error-handling.routes.ts","./apps/demos/src/app/features/template/rx-let/error-handling/error-handing.module.ts","./apps/demos/src/app/features/template/rx-let/error-handling/error-handling.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAoE;AAE7D,MAAM,MAAM,GAAG;IACpB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;KAClC;CACF,CAAC;;;;;;;;;;;;;ACNF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACA;AACQ;AACA;AACI;AACF;AACS;AACY;AACrB;AACwB;AACb;AACnB;AACuB;;;AAExE,MAAM,YAAY,GAAG;IACnB,iFAAsB;CACvB,CAAC;AAkBK,MAAM,kBAAkB;;oFAAlB,kBAAkB;kGAAlB,kBAAkB;sGAdpB;YACP,4DAAY;YACZ,oEAAa;YACb,oEAAa;YACb,wEAAe;YACf,+EAAkB;YAClB,sEAAc;YACd,2FAAwB;YACxB,sEAAc;YACd,2EAAmB;YACnB,mFAAiB;YACjB,4DAAY,CAAC,QAAQ,CAAC,8DAAM,CAAC;SAC9B;oIAEU,kBAAkB,mBAnB7B,iFAAsB,aAMpB,4DAAY;QACZ,oEAAa;QACb,oEAAa;QACb,wEAAe;QACf,+EAAkB;QAClB,sEAAc;QACd,2FAAwB;QACxB,sEAAc;QACd,2EAAmB;QACnB,mFAAiB;;;;;;;;;;;;;AC/BrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAClB;AACO;AACN;;;;;;;;;;;IAsBlC,yEAAqC;IACnC,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,gFACF;;;;;IAVF,yEAOC;IACC,wHAEM;IACN,iFAAgB;IACd,wEAAO;IAAA,8DAAG;IAAA,4DAAQ;IAClB,2EAIY;IADV,ySAAS,+EAA0C,IAAC;IAHtD,4DAIY;IACd,4DAAiB;IACjB,gEAAK;IACL,4EAA0C;IAAA,+DAAI;IAAA,4DAAS;IACzD,4DAAM;;;;IApBJ,gJAA4B;IAOtB,0DAAO;IAAP,sEAAO;IAOT,0DAAW;IAAX,uEAAW;;;IASf,4EAAiC;;AAoEpC,MAAM,sBAAsB;IAIjC,YAAoB,KAAwB;QAAxB,UAAK,GAAL,KAAK,CAAmB;QAH5C,oBAAe,GAAG,IAAI,4CAAO,EAAU,CAAC;QACxC,aAAQ,GAAuB,IAAI,CAAC,KAAK,EAAE,CAAC;IAG5C,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAC9B,0DAAG,CAAC,CAAC,CAAC,EAAE;YACN,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;gBACxB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;aACxC;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,EACF,2DAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjC,4DAAK,EAAE,CACR,CAAC;IACJ,CAAC;IAED,KAAK;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;;4FAxBU,sBAAsB;sGAAtB,sBAAsB,uHAFtB,CAAC,yDAAO,CAAC;QAnGlB,8EAAuB;QAErB,kFAAiB;QACf,qEAAI;QAAA,0EAAe;QAAA,gEAAK;QACtB,wEAAO;QAAA,kGAAuC;QAAA,4DAAQ;QACxD,4DAAK;QACP,4DAAkB;QAElB,mFAAkB;QAChB,kHAqBM;QAEN,8MAEc;QAChB,4DAAmB;QAEnB,oFAAkB;QAChB,6EAAiE;QAApC,+IAAS,yBAAqB,GAAG,CAAC,IAAC;QAC9D,kEACF;QAAA,4DAAS;QACT,6EAAkE;QAArC,+IAAS,yBAAqB,IAAI,CAAC,IAAC;QAC/D,mEACF;QAAA,4DAAS;QACT,6EAA+C;QAAlB,+IAAS,WAAO,IAAC;QAC5C,mEACF;QAAA,4DAAS;QACX,4DAAmB;QAErB,4DAAW;;;QAtCJ,0DACC;QADD,+EACC","file":"error-handling-error-handing-module.js","sourcesContent":["import { ErrorHandlingComponent } from './error-handling.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: ErrorHandlingComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { ErrorHandlingComponent } from './error-handling.component';\nimport { ROUTES } from './error-handling.routes';\nimport { GhostElementsModule } from '../../../../shared/ghost-elements';\n\nconst DECLARATIONS = [\n  ErrorHandlingComponent\n];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    GhostElementsModule,\n    DirtyChecksModule,\n    RouterModule.forChild(ROUTES)\n  ]\n})\nexport class ErrorHandingModule {\n\n}\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, scan, share } from 'rxjs/operators';\nimport { RxState } from '@rx-angular/state';\n\n@Component({\n  selector: 'rxa-let-error-handling',\n  template: `\n    <mat-card class=\"card\">\n\n      <mat-card-header>\n        <h3>Error Handling <br/>\n          <small>error template & rx-context class names</small>\n        </h3>\n      </mat-card-header>\n\n      <mat-card-content>\n        <div\n          [ngClass]=\"{'let-error': e}\"\n          *rxLet=\"numbers$;\n            let r;\n            let e = $rxError;\n            rxSuspense: suspenseView\n            \"\n        >\n          <div *ngIf=\"e\" class=\"error-message\">\n            {{e}}\n          </div>\n          <mat-form-field>\n            <label>Age</label>\n            <input\n              type=\"text\"\n              [value]=\"r\"\n              (input)=\"numbersSubject$.next($event.target?.value)\"\n              matInput/>\n          </mat-form-field>\n          <br/>\n          <button mat-raised-button color=\"primary\">Send</button>\n        </div>\n\n        <ng-template #suspenseView>\n          <rxa-form-ghost></rxa-form-ghost>\n        </ng-template>\n      </mat-card-content>\n\n      <mat-card-actions>\n        <button mat-button [unpatch] (click)=\"numbersSubject$.next('0')\">\n          init\n        </button>\n        <button mat-button [unpatch] (click)=\"numbersSubject$.next('-1')\">\n          error\n        </button>\n        <button mat-button [unpatch] (click)=\"reset()\">\n          reset\n        </button>\n      </mat-card-actions>\n\n    </mat-card>\n  `,\n  styles: [`\n    mat-card-content {\n      min-height: 10rem;\n    }\n\n    .card {\n      margin: 2rem;\n      width: 20rem;\n    }\n\n    .error-message {\n      border: 1px solid red;\n      background-color: rgba(211, 211, 211, 0.7);\n      color: red;\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      text-align: center;\n      z-index: 10;\n      padding: 10px;\n      margin: -25% -25%;\n      display: block;\n      line-height: 45px;\n    }\n\n    .let-error {\n        position: relative;\n    }\n\n    .let-error input {\n      transform: scale(1) rotate(2deg) !important;\n    }\n\n    .let-error input {\n      transform: scale(1) rotate(4deg) !important;\n    }\n\n    .let-error mat-form-field {\n      color: red;\n      border-color: red;\n      transform: scale(1) rotate(-2deg) !important;\n    }\n\n    .let-error .mat-button-base {\n      transform: scale(1) rotate(5deg) !important;\n    }\n\n  `],\n  providers: [RxState]\n})\nexport class ErrorHandlingComponent {\n  numbersSubject$ = new Subject<string>();\n  numbers$: Observable<number> = this.setup();\n\n  constructor(private cdRef: ChangeDetectorRef) {\n  }\n\n  setup(): Observable<number> {\n    return this.numbersSubject$.pipe(\n      map(s => {\n        const n = parseInt(s, 10);\n        if (n === -1 || isNaN(n)) {\n          throw new Error('useless information');\n        }\n        return n;\n      }),\n      scan((a, n) => n === 0 ? ++a : n),\n      share()\n    );\n  }\n\n  reset() {\n    this.numbers$ = this.setup();\n    this.cdRef.detectChanges();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}