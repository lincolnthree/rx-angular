{"version":3,"sources":["./apps/demos/src/app/features/template/strategies/comparison/comparison.routes.ts","./apps/demos/src/app/features/template/strategies/comparison/comparison.module.ts","./apps/demos/src/app/features/template/strategies/comparison/comparison.component.ts"],"names":[],"mappings":"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","file":"comparison-comparison-module.js","sourcesContent":["import { Routes } from '@angular/router';\nimport { ComparisonComponent } from './comparison.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: ComparisonComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LetModule, PushModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { ComparisonComponent } from './comparison.component';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { VisualizerModule } from '../../../../shared/debug-helper/visualizer';\nimport { SiblingModule } from '../../../../shared/template-structures/sibling/sibling.module';\nimport { ImageArrayModule } from '../../../../shared/image-array/image-array.module';\nimport { ROUTES } from './comparison.routes';\nimport { RxForModule, RxIfModule, PipeModule } from '../../../../rx-angular-pocs';\n\n\n@NgModule({\n  declarations: [ComparisonComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    MatButtonModule,\n    UnpatchEventsModule,\n    VisualizerModule,\n    SiblingModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatInputModule,\n    PushModule,\n    ImageArrayModule,\n    LetModule,\n    RxForModule,\n    RxIfModule,\n    PipeModule,\n  ],\n  exports: [],\n})\nexport class ComparisonModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { RxStrategyProvider } from '@rx-angular/cdk';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'rxa-concurrent-strategies',\n  template: `\n    <rxa-visualizer>\n      <ng-container visualizerHeader>\n        <h1 class=\"mat-headline\">Strategy Comparison</h1>\n        <div class=\"row\">\n          <div class=\"col-12 d-flex\">\n            <mat-form-field class=\"mr-2\" *rxLet=\"count$; let count\">\n              <mat-label>Num Siblings</mat-label>\n              <input matInput #i [unpatch] type=\"number\" [value]=\"count\"\n                     (input)=\"count$.next(i.value)\">\n            </mat-form-field>\n            <button mat-button unpatch (click)=\"filled$.next(!filled$.getValue())\">\n              do change\n            </button>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"w-100 strategy-multiselect\">\n              <mat-checkbox #c *rxFor=\"let strategy of strategies$; trackBy:trackByStrategyName\"\n                            [checked]=\"strategy.checked\"\n                            (change)=\"setStrategy(strategy.name, c.checked)\">\n                {{strategy.name}}\n              </mat-checkbox>\n\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"row w-100\">\n        <ng-container\n          *rxFor=\"let strategy of strategies$; strategy: 'immediate'; trackBy:trackByStrategyName\">\n          <div class=\"col d-flex flex-column\"\n               *ngIf=\"strategy.checked\">\n            <h2 class=\"mat-subheader\">{{strategy.name}}</h2>\n            <rxa-sibling-strategy [strategy]=\"strategy.name\" [count]=\"count$\" [filled]=\"filled$\"></rxa-sibling-strategy>\n          </div>\n        </ng-container>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    .strategy-multiselect {\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    .strategy-multiselect .mat-checkbox {\n      flex-grow: 1;\n      width: 200px;\n    }\n  `]\n})\nexport class ComparisonComponent {\n\n  selectedStrategies$ = new BehaviorSubject<{ [strategy: string]: boolean }>(\n    /*this.strategyProvider.strategyNames.reduce((selectedStrategies, strategy) => {\n      selectedStrategies[strategy] = true;\n      return selectedStrategies;\n    }, {})*/{}\n  );\n  strategies$ = this.selectedStrategies$.pipe(\n    tap(() => console.log(this.strategyProvider.strategyNames)),\n    map((selectedStrategies) => this.strategyProvider.strategyNames.map(strategy => ({name: strategy, checked: selectedStrategies[strategy] || false})))\n  );\n  count$ = new BehaviorSubject<string | number>('500');\n  filled$ = new BehaviorSubject<boolean>(false);\n\n  constructor(public strategyProvider: RxStrategyProvider) {\n  }\n\n  setStrategy(strategy, state) {\n    const old = this.selectedStrategies$.getValue();\n    this.selectedStrategies$.next({ ...old, [strategy]: state });\n  }\n\n  visible(choice: string) {\n    return (o$: Observable<{ [name: string]: boolean }>) => o$.pipe(map((s) => s[choice] === true))\n  }\n\n  trackByStrategyName = (idx, v: {name: string}) => v.name\n\n}\n"],"sourceRoot":"webpack:///"}