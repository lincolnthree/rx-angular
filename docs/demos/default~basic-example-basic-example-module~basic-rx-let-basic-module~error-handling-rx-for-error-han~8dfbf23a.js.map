{"version":3,"sources":["./apps/demos/src/app/shared/debug-helper/value-provider/array-provider.service.ts","./apps/demos/src/app/shared/zone-patched-icon/zone-patched-icon.component.ts","./apps/demos/src/app/shared/debug-helper/value-provider/value-providers.module.ts","./apps/demos/src/app/shared/debug-helper/value-provider/value-provider/value-provider.component.ts","./apps/demos/src/app/shared/debug-helper/value-provider/primitives-provider.service.ts","./apps/demos/src/app/shared/debug-helper/value-provider/array-provider/array-provider.component.ts","./apps/demos/src/app/shared/utils/ngInputFlatten.ts","./apps/demos/src/app/shared/zone-patched-icon/zone-patched-icon.module.ts"],"names":[],"mappings":"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","file":"default~basic-example-basic-example-module~basic-rx-let-basic-module~error-handling-rx-for-error-han~8dfbf23a.js","sourcesContent":["import { ChangeDetectorRef, Injectable } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\nimport { from, Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  addItemImmutable,\n  addItemMutable,\n  moveItemMutable,\n  moveItemsImmutable,\n  shuffleItemsImmutable,\n  removeItemsImmutable,\n  removeItemsMutable,\n  updateItemImmutable,\n  updateItemMutable,\n  withCompleteAndError,\n} from './utils';\nimport { ProvidedValues } from './model';\n\n@Injectable()\nexport class ArrayProviderService extends RxState<ProvidedValues> {\n  array$: Observable<any[]>;\n\n  protected errorSubject = new Subject<any>();\n  protected error$ = this.errorSubject.pipe(\n    map((_) => {\n      throw new Error('ERROR');\n    })\n  );\n  protected completeSubject = new Subject<any>();\n  protected resetSubject = new Subject<any>();\n\n  protected addItemsImmutableSubject = new Subject<number | undefined>();\n  protected moveItemsImmutableSubject = new Subject<number | undefined>();\n  protected shuffleItemsImmutableSubject = new Subject<void>();\n  protected updateItemsImmutableSubject = new Subject<number>();\n  protected removeItemsImmutableSubject = new Subject<number>();\n\n  protected addItemsMutableSubject = new Subject<number | undefined>();\n  protected moveItemsMutableSubject = new Subject<number | undefined>();\n  protected updateItemsMutableSubject = new Subject<number[] | undefined>();\n  protected removeItemsMutableSubject = new Subject<number[] | undefined>();\n\n  private resetAll = () => {\n    this.resetObservables();\n    this.cdRef.markForCheck();\n  };\n\n  private resetObservables = () => {\n    this.array$ = this.$.pipe(\n      map((s) => s.array),\n      withCompleteAndError(this.error$, this.completeSubject)\n    );\n  };\n\n  constructor(protected cdRef: ChangeDetectorRef) {\n    super();\n\n    this.connect(\n      'array',\n      this.addItemsImmutableSubject,\n      (state, numItems = 1) => addItemImmutable(state?.array || [], numItems)\n    );\n\n    this.connect('array', this.updateItemsImmutableSubject, (state, num) =>\n      updateItemImmutable(state?.array || [], num)\n    );\n\n    this.connect('array', this.moveItemsImmutableSubject, (state, positions) =>\n      moveItemsImmutable(state?.array || [], positions)\n    );\n\n    this.connect('array', this.shuffleItemsImmutableSubject, (state) =>\n      shuffleItemsImmutable(state?.array || [])\n    );\n\n    this.connect('array', this.removeItemsImmutableSubject, (state, num) =>\n      removeItemsImmutable(state?.array || [], num)\n    );\n\n    this.connect('array', this.addItemsMutableSubject, (state, numItems = 1) =>\n      addItemMutable(state?.array || [], numItems)\n    );\n\n    this.connect('array', this.updateItemsMutableSubject, (state, itemIds) =>\n      updateItemMutable(state?.array || [], itemIds)\n    );\n\n    this.connect('array', this.moveItemsMutableSubject, (state, positions) =>\n      moveItemMutable(state?.array || [], positions)\n    );\n\n    this.connect('array', this.removeItemsMutableSubject, (state, ids) =>\n      removeItemsMutable(state?.array || [], ids)\n    );\n\n    this.resetAll();\n  }\n\n  addItemsImmutable(numItems?: number): void {\n    this.addItemsImmutableSubject.next(numItems);\n  }\n\n  moveItemsImmutable(numPositions: number = 1): void {\n    this.moveItemsImmutableSubject.next(numPositions);\n  }\n\n  shuffleAttack(): void {\n    from([0, 1, 2]).subscribe(v => {\n      this.shuffleItemsImmutable();\n    })\n  }\n\n  shuffleItemsImmutable(): void {\n    this.shuffleItemsImmutableSubject.next();\n  }\n\n  updateItemsImmutable(num: number): void {\n    this.updateItemsImmutableSubject.next(num);\n  }\n\n  removeItemsImmutable(numItems: number): void {\n    this.removeItemsImmutableSubject.next(numItems);\n  }\n\n  addItemsMutable(numItems?: number): void {\n    this.addItemsMutableSubject.next(numItems);\n  }\n\n  moveItemsMutable(positions?: number): void {\n    this.moveItemsMutableSubject.next(positions);\n  }\n\n  updateItemsMutable(itemsIds?: number[]): void {\n    this.updateItemsMutableSubject.next(itemsIds);\n  }\n\n  removeItemsMutable(itemsIds?: number[]): void {\n    this.removeItemsMutableSubject.next(itemsIds);\n  }\n\n  error(): void {\n    this.errorSubject.next();\n  }\n\n  complete(): void {\n    this.completeSubject.next();\n  }\n\n  reset(): void {\n    this.resetSubject.next();\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\n\n@Component({\n  selector: 'rxa-zone-patched-icon',\n  template: `\n    <mat-icon style=\"font-size: 18px; height: 18px; width: 18px;\" *rxLet=\"zoneState$; let zoneState\">{{zoneState}}</mat-icon>`,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZonePatchedIconComponent extends RxState<{ zoneState: string }> {\n  zoneStates = {\n    'patched': 'wifi',\n    'unpatched': 'wifi_off'\n  };\n  zoneState$ = this.select('zoneState');\n\n  @Input()\n  set zoneState(zoneState: string) {\n    if (Object.keys(this.zoneStates).includes(zoneState)) {\n      this.set({ zoneState: this.zoneStates[zoneState] });\n    }\n  }\n\n  constructor() {\n    super();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ValueProviderComponent } from './value-provider/value-provider.component';\nimport { UnpatchEventsModule } from '@rx-angular/template';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ArrayProviderComponent } from './array-provider/array-provider.component';\nimport { ZonePatchedIconModule } from '../../zone-patched-icon/zone-patched-icon.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ValueProviderComponent, ArrayProviderComponent],\n  imports: [\n    CommonModule,\n    UnpatchEventsModule,\n    MatButtonModule,\n    ZonePatchedIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n  ],\n  exports: [ValueProviderComponent, ArrayProviderComponent],\n})\nexport class ValueProvidersModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, Output } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\nimport { Observable, Subject } from 'rxjs';\nimport { ProvidedValues } from '../model';\nimport { PrimitivesProviderService } from '../primitives-provider.service';\n\n@Component({\n  selector: 'rxa-value-provider',\n  exportAs: 'rxaValueProvider',\n  template: `\n    <ng-container *ngIf=\"buttons\">\n\n      <button mat-raised-button (click)=\"reset()\">\n        Reset\n        <rxa-zone-patched-icon class=\"mat-icon\" zoneState=\"patched\"></rxa-zone-patched-icon>\n      </button>\n      <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"next()\">\n        Next\n        <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"getZoneState()\"></rxa-zone-patched-icon>\n      </button>\n      <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"error()\">\n        Error\n        <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"getZoneState()\"></rxa-zone-patched-icon>\n      </button>\n      <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"complete()\">\n        Complete\n        <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"getZoneState()\"></rxa-zone-patched-icon>\n      </button>\n    </ng-container>\n    <ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValueProviderComponent extends PrimitivesProviderService {\n  @Input()\n  unpatched;\n\n  @Input()\n  buttons = false;\n\n  @Input()\n  truthy = 0.5;\n\n  @Input()\n  min = 0;\n\n  @Input()\n  max = 10;\n\n  @Input()\n  set changes$(o$: Observable<any>) {\n    this.outerChanges.next(o$);\n  }\n\n  @Output() resetState = new Subject();\n\n  constructor(\n    protected state: RxState<ProvidedValues>,\n    protected cdRef: ChangeDetectorRef\n  ) {\n    super(state, cdRef);\n  }\n\n  reset() {\n    super.reset();\n    this.resetState.next();\n  }\n\n  getZoneState() {\n    return this.unpatched?.length === 0 ? 'patched' : 'unpatched';\n  }\n}\n","import { ChangeDetectorRef, Injectable } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { map, scan } from 'rxjs/operators';\nimport { ngInputFlatten } from '../../utils/ngInputFlatten';\nimport { ProvidedValues } from './model';\nimport { toBoolean, toImgUrl, toInt, toRandom, withCompleteAndError } from './utils';\n\n@Injectable()\nexport class PrimitivesProviderService {\n  protected outerChanges = new Subject<Observable<any>>();\n\n  protected nextSubject = new Subject<any>();\n\n  protected errorSubject = new Subject<any>();\n  protected error$ = this.errorSubject.pipe(\n    map((_) => {\n      throw new Error('ERROR');\n    })\n  );\n  protected completeSubject = new Subject<any>();\n  protected resetSubject = new Subject<any>();\n\n  float$: Observable<number>;\n  int$: Observable<number>;\n  incremental$: Observable<number>;\n  boolean$: Observable<boolean>;\n  imgUrl$: Observable<string>;\n\n  float: number;\n  int: number;\n  boolean: boolean;\n\n  truthy = 0.5;\n  min = 0;\n  max = 10;\n\n  set changes$(o$: Observable<any>) {\n    this.outerChanges.next(o$);\n  }\n\n  private resetAll = () => {\n    this.resetObservables();\n    this.updateStatic(undefined);\n    this.cdRef.markForCheck();\n  };\n\n  private resetObservables = () => {\n    this.state.ngOnDestroy();\n    this.state = new RxState<ProvidedValues>();\n\n    this.state.connect(\n      'random',\n      merge(this.nextSubject, this.outerChanges.pipe(ngInputFlatten())).pipe(\n        map(toRandom)\n      )\n    );\n\n    this.float$ = this.state.select('random');\n    this.int$ = this.state.select(\n      map((s) => toInt(s.random, this.min, this.max)),\n      withCompleteAndError(this.error$, this.completeSubject)\n    );\n    this.incremental$ = this.state.select(\n      scan((inc) => ++inc, 0),\n      withCompleteAndError(this.error$, this.completeSubject)\n    );\n    this.boolean$ = this.state.select(\n      map((s) => toBoolean(s.random, this.truthy)),\n      withCompleteAndError(this.error$, this.completeSubject)\n    );\n    this.imgUrl$ = this.state.select(\n      map((s) => toImgUrl(s.random)),\n      withCompleteAndError(this.error$, this.completeSubject)\n    );\n\n    this.state.hold(this.float$, this.updateStatic);\n    this.state.hold(this.resetSubject, this.resetAll);\n  };\n\n  private updateStatic = (float: number): void => {\n    this.float = float;\n    this.int = toInt(float, this.min, this.max);\n    this.boolean = toBoolean(float, this.truthy);\n  };\n\n  constructor(\n    protected state: RxState<ProvidedValues>,\n    protected cdRef: ChangeDetectorRef\n  ) {\n    this.resetAll();\n  }\n\n  next(): void {\n    this.nextSubject.next();\n  }\n\n  error(): void {\n    this.errorSubject.next();\n  }\n\n  complete(): void {\n    this.completeSubject.next();\n  }\n\n  reset(): void {\n    this.resetSubject.next();\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { ArrayProviderService } from '../array-provider.service';\n\n@Component({\n  selector: 'rxa-array-provider',\n  exportAs: 'rxaArrayProvider',\n  template: `\n    <ng-container *ngIf=\"buttons\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <p>Immutable Operations</p>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"addItemsImmutable(1)\">\n            Add\n          </button>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"moveItemsImmutable(1)\">\n            Move\n          </button>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"updateItemsImmutable(1)\">\n            Update\n          </button>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"removeItemsImmutable(1)\">\n            Remove\n          </button>\n          <br/>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"addItemsImmutable(numberOfItems)\">\n            Add Many\n          </button>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"moveItemsImmutable(numberOfItems/2)\">\n            Move Many\n          </button>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"shuffleItemsImmutable()\">\n            Shuffle\n          </button>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"shuffleAttack()\">\n            Shuffle Attack\n          </button>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"updateItemsImmutable(numberOfItems/2)\">\n            Update Many\n          </button>\n          <button mat-raised-button [unpatch]=\"unpatched\" (click)=\"removeItemsImmutable(numberOfItems/2)\">\n            Remove Many\n          </button>\n          <mat-form-field>\n            <mat-label>Number of items</mat-label>\n            <input matInput [(ngModel)]=\"numberOfItems\" type=\"number\">\n          </mat-form-field>\n        </div>\n      </div>\n    </ng-container>\n    <ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ArrayProviderComponent extends ArrayProviderService {\n  numberOfItems = 10\n\n  @Input()\n  buttons = false;\n  @Input()\n  unpatched: any[] = undefined;\n\n  @Input()\n  min = 0;\n\n  @Input()\n  max = 1000;\n\n  constructor(protected cdRef: ChangeDetectorRef) {\n    super(cdRef);\n  }\n}\n","import { Observable } from 'rxjs/internal/Observable';\nimport { MonoTypeOperatorFunction } from 'rxjs/internal/types';\nimport { distinctUntilChanged, map, switchAll } from 'rxjs/operators';\nimport { isObservable, of, OperatorFunction } from 'rxjs';\n\nexport function ngInputFlatten<T>(): OperatorFunction<T | Observable<T>, T> {\n  return o$ => o$.pipe(\n    map(o => isObservable(o) ? o : of(o)),\n    distinctUntilChanged(),\n    switchAll(),\n    distinctUntilChanged()\n  );\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZonePatchedIconComponent } from './zone-patched-icon.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LetModule } from '@rx-angular/template';\n\n\n@NgModule({\n  declarations: [ZonePatchedIconComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    LetModule\n  ],\n  exports: [ZonePatchedIconComponent]\n})\nexport class ZonePatchedIconModule {\n}\n"],"sourceRoot":"webpack:///"}